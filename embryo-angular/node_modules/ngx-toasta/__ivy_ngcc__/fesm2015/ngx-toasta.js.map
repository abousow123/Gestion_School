{"version":3,"file":"ngx-toasta.js","sources":["ngx-toasta/lib/toasta.utils.ts","ngx-toasta/lib/toasta.service.ts","ngx-toasta/lib/toasta.component.ts","ngx-toasta/lib/toast.component.ts","ngx-toasta/lib/shared.ts","ngx-toasta/lib/toasta.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,SAAgB,QAAQ,CAAC,GAAQ;AAAK,IACpC,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjC,CAAC;AACD;AACG;AACoD;AAErD;AAED;AAAD,SAAgB,QAAQ,CAAC,GAAQ;AAAK,IACpC,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjC,CAAC;AACD;AACG;AACsD;AAEvD;AAED;AAAD,SAAgB,UAAU,CAAC,GAAQ;AAAK,IACtC,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;AACnC,CAAC;AAAC;AACF;AAAK;AAAmC;AAAsH;AC3B9J;AAAK;AAAqC;AAW1C,MAAa,YAAY;AACzB;0CAFC,UAAU;;;;0BACT;AAAE;AAAK;AACK;AAcd,MAAa,SAAS;AACtB;uCAFC,UAAU;;;;0BACT;AAAE;AAAK;AAGG;AAeZ,MAAa,YAAY;AACzB,IAFA;AACE;AAEwB,QACxB,UAAK,GAAG,CAAC,CAAC;AACZ;AAEI,QAAF,cAAS,GAAG,IAAI,CAAC;AACnB;AAEI,QAAF,iBAAY,GAAG,IAAI,CAAC;AACtB;AAEI,QAAF,aAAQ,GAAwJ,cAAc,CAAC;AACjL;AAEI,QAAF,YAAO,GAAG,IAAI,CAAC;AACjB;AAEI,QAAF,UAAK,GAAyC,SAAS,CAAC;AAC1D,KAAC;AACD;0CArBC,UAAU;;;;gDACT;AAAE;AAAuB;AAEJ,IAoBrB,MAAG;AACL,IAAE,QAAK;AACP,IAAE,YAAS;AACV;AAED;AACmB;AAClB;AAFD,MAAa,WAAW;AACxB;AAAS;AAAwB;AAA0B;AAAS,IAAlE,YAAmB,IAAqB,EAAS,KAAW;AAAK,QAA9C,SAAI,GAAJ,IAAI,CAAiB;AAAE,QAAO,UAAK,GAAL,KAAK,CAAM;AAAE,KAAG;AACnE,CAAC;AACD;AACG;AAAsB;AAAgB;AAAzC,SAAgB,oBAAoB,CAAC,MAAoB;AAAK,IAC5D,OAAO,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AACD;AACG;AACqD;AAGxD,MAAa,aAAa;AAC1B;AAAS;AACK;AAAS,IAWrB,YAAoB,MAAoB;AAAK,QAAzB,WAAM,GAAN,MAAM,CAAc;AAAE;AAG7B,QAZb,kBAAa,GAAG,CAAC,CAAC;AACpB;AACM;AACM;AACM;AAEI,QAAZ,gBAAW,GAAyB,IAAI,OAAO,EAAe,CAAC;AACzE,QAAS,WAAM,GAA4B,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;AAC3E,KAC+C;AAC/C;AAEA;AACI;AACI;AACE;AAGR;AAAU;AACE;AAGR;AACG;AAAS;AAEL;AAA2B;AACxC;AAAS,IADP,OAAO,CAAC,OAAuC;AAAK,QAClD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACjC,KAAG;AACH;AAEA;AACE;AAED;AAAoB;AAAS,IAA5B,IAAI,CAAC,OAAuC;AAAK,QAC/C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC9B,KAAG;AACH;AAEA;AACE;AAED;AAAoB;AAAS,IAA5B,OAAO,CAAC,OAAuC;AAAK,QAClD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACjC,KAAG;AACH;AAEA;AACE;AAED;AAAoB;AAAS,IAA5B,IAAI,CAAC,OAAuC;AAAK,QAC/C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC9B,KAAG;AACH;AAEA;AACE;AAED;AAAoB;AAAS,IAA5B,KAAK,CAAC,OAAuC;AAAK,QAChD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC/B,KAAG;AACH;AAEA;AACE;AAED;AAAoB;AAAS,IAA5B,OAAO,CAAC,OAAuC;AAAK,QAClD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACjC,KAAG;AACH;AAEyB;AAClB;AAAiB;AAA2B;AAChD;AAAoB;AAAS,IADtB,GAAG,CAAC,OAAuC,EAAE,IAAY;AACnE;AAA0B,YAAlB,aAA2B;AACnC,QACI,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,KAAK,EAAE,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAClE,YAAM,aAAa,sBAAG;AACtB,gBAAQ,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE;AACjC,aAAO,EAAgB,CAAC;AACxB,SAAK;AAAE,aAAI;AACX,YAAM,aAAa,sBAAG,OAAO,EAAgB,CAAC;AAC9C,SAAK;AACL,QACI,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;AACtE,YAAM,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;AAC1E,SAAK;AACL,QACI,IAAI,GAAG,IAAI,IAAI,SAAS,CAAC;AAC7B;AAEE,QAAE,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB;AAEE;AAA0B,cAAlB,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,CAAC;AACpF;AAEE;AAA0B,cAAlB,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,cAAc,CAAC;AAC1F;AAEE;AACE,YADI,KAAa;AACrB,QAAI,IAAI,aAAa,CAAC,KAAK,EAAE;AAC7B,YAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAC/G,SAAK;AAAE,aAAI;AACX,YAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAChC,SAAK;AACL;AACwB,cAAd,KAAK,sBAAc;AAC7B,YAAM,EAAE,EAAE,IAAI,CAAC,aAAa;AAC5B,YAAM,KAAK,EAAE,aAAa,CAAC,KAAK;AAChC,YAAM,GAAG,EAAE,aAAa,CAAC,GAAG;AAC5B,YAAM,SAAS;AACf,YAAM,YAAY;AAClB,YAAM,IAAI,EAAE,cAAc,GAAG,IAAI;AACjC,YAAM,KAAK,EAAE,eAAe,GAAG,KAAK;AACpC,YAAM,KAAK,EAAE,aAAa,CAAC,KAAK,IAAI,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,KAAK,GAAG,IAAI;AAChG,YAAM,QAAQ,EAAE,aAAa,CAAC,QAAQ,IAAI,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,QAAQ,GAAG,IAAI;AAC5G,SAAK,EAAa;AAClB;AAEE;AACI,QAAF,KAAK,CAAC,OAAO,GAAG,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC1G;AAEE;AACI;AACI,QAAN,IAAI,CAAC,SAAS,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAChE;AACI,QAAA,IAAI,aAAa,CAAC,KAAK,IAAI,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;AAChE,YAAM,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAK;AACL,KAAG;AACH;AAEA;AAAS;AACI;AAAS,IADpB,QAAQ;AACV;AACI,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/D,KAAG;AACH;AAEA;AAAS;AACD;AAAoB;AAC3B,IAFC,KAAK,CAAC,EAAU;AAClB;AACI,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/D,KAAG;AACH;AAEA;AACE;AAAS;AAAiB;AAA0B;AAChD;AAA4B;AACpB;AACZ,IAHQ,gBAAgB,CAAC,MAAW,EAAE,OAAY,EAAE,QAAgB;AACtE,QAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE;AACrC,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AAAE,aAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AACnC,YAAM,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC9B,SAAK;AAAE,aAAI;AACX,YAAM,OAAO,IAAI,CAAC;AAClB,SAAK;AACL,KAAG;AACH;AACO;AAAiB;AAClB;AAAoB;AACpB,IAFI,SAAS,CAAC,KAAkB;AACtC,QAAI,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B;AACM,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,SAAK;AACL,KAAG;AACH;;uGAAC;AACD;AApKS,oBAAM,GAAkB,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,AAFpE;AAAE;sBADH,UAAU,hCACa;AAEX,YAWiB,YAAY;AAAI;;;sEAAE;AAChD;AAAC;AACG;AAGH;AAIe;ACzGhB;AAAK;AAA6C;AAelD,MAAa,eAAe;AAAI;AAAS;AAE/B;AAAiC;AAAS,IA0ClD,YAAoB,MAAoB,EAAU,aAA4B;AAChF,QADsB,WAAM,GAAN,MAAM,CAAc;AAAE,QAAQ,kBAAa,GAAb,aAAa,CAAe;AAAE,QAtCxE,cAAS,GAAG,EAAE,CAAC;AACzB;AAAoC,QAmClC,WAAM,GAAqB,EAAE,CAAC;AAChC;AAC8B,QAE1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AACH;AAE6D;AAC/C;AAAsB;AAAwB;AAA2B;AACjF;AAAmB;AAEnB;AACG;AAAwB;AACjC;AAAyB;AAAoB;AAAS,IAvCpD,IACI,QAAQ,CAAC,KAAa;AAC5B,QAAI,IAAI,KAAK,EAAE;AACf;AACE,gBADQ,QAAQ,GAAG,IAAI;AACzB,YAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjE,gBAAQ,IAAI,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AACpD,oBAAU,QAAQ,GAAG,KAAK,CAAC;AAC3B,oBAAU,MAAM;AAChB,iBAAS;AACT,aAAO;AACP,YAAM,IAAI,QAAQ,EAAE;AACpB;AACQ,gBAAA,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACrC,aAAO;AACP,SAAK;AAAE,aAAI;AACX,YAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACnC,SAAK;AACL,QAAI,IAAI,CAAC,SAAS,GAAG,kBAAkB,GAAG,KAAK,CAAC;AAChD,KAAG;AACH;AACO;AAAoB;AACnB,IADN,IAAI,QAAQ;AAAM,QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH;AACO;AAGuC;AAK1C;AAC4B;AAAoB;AAAS,IAI3D,QAAQ;AAAM;AACyB,QACrC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS;AAAO;AACtC;AAAwB;AAAa,QADL,CAAC,KAAkB;AAC3D,YAAM,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,CAAC,GAAG,EAAE;AAC9C;AACQ;AAAkC,sBAA5B,KAAK,GAAc,KAAK,CAAC,KAAK;AAC5C,gBAAQ,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACxB,aAAO;AAAE,iBAAI,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,CAAC,KAAK,EAAE;AACvD;AACQ;AACP,sBADa,EAAE,GAAW,KAAK,CAAC,KAAK;AACtC,gBAAQ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACvB,aAAO;AAAE,iBAAI,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,CAAC,SAAS,EAAE;AAC3D;AACQ,gBAAA,IAAI,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE;AACkB;AACd;AAAS,IADf,UAAU,CAAC,KAAgB;AAC7B,QAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACzB,KAAG;AACH;AAEA;AACE;AACkB;AACP;AAAS,IADpB,GAAG,CAAC,KAAgB;AACtB;AACI;AACI,QAAJ,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AACtE,YAAM,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAC1B,SAAK;AACL;AACI,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B;AACI;AACI;AACI,QAAR,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AACxB,YAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAK;AACL,KAAG;AACH;AAEA;AACE;AAED;AAAoB;AACd,IADL,KAAK,CAAC,EAAU;AAClB,QAAI,IAAI,EAAE,EAAE;AACZ,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO;AAAO;AACzB;AACD;AAA4B;AAAiB,YAFzB,CAAC,KAAU,EAAE,GAAW;AAClD,gBAAQ,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE;AAC7B,oBAAU,IAAI,KAAK,CAAC,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AAC5D,wBAAY,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7C,qBAAW;AACX,oBAAU,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,iBAAS;AACT,aAAO,EAAC,CAAC;AACT,SAAK;AAAE,aAAI;AACX,YAAM,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;AAC7D,SAAK;AACL,KAAG;AACH;AAEA;AACE;AACa;AACP,IADN,QAAQ;AACV,QAAI,IAAI,CAAC,MAAM,CAAC,OAAO;AAAO;AAC3B;AAA2B;AAAwB;AAC9C,QAFgB,CAAC,KAAU,EAAE,GAAW;AAChD,YAAM,IAAI,KAAK,CAAC,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AACxD,gBAAQ,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACzC,aAAO;AACP,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACrB,KAAG;AACH;AAEA;AACE;AACU;AAAyB;AACvB;AAAS,IADb,WAAW,CAAC,KAAgB;AACtC,QAAI,MAAM,CAAC,UAAU;AAAO;AACP;AAChB,QAFiB;AACtB,YAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC3B,SAAK,GAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,KAAG;AACH;;;;;;;;;;;;;;mHAAC;AACD;AAAK;AAA6D;AAvIzD,yBAAS,GAAkB,CAAC,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,kBAAkB,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,eAAe,EAAE,eAAe,CAAC,CAAC,AAJ9K;AAAE;wBAPL,SAAS,jCAOgB;AAPf,mBACT,QAAQ,3BAQC,YAdwB,YAAY;AAMnC,YAAY,ZAN4B,YAA3C,aAAa;EAOpB,FAPwB;MAOhB,EAAE,RAPkB;AAAoC,uBA6B/D,KAAK;AACP;2GApBU;WACV;;;;;;;;;;oBAmBE;AAAC;AAAC;AAAK;AACE;AAGI;ACrChB;AAAK;AAAiE;AAuBtE,MAAa,cAAc;AAAI,IAhB/B;AACG,QAkBD,oBAAe,GAAG,CAAC,CAAC;AACtB,QAAE,cAAS,GAAW,WAAW,CAAC,GAAG,EAAE,CAAC;AACxC,QACwB,oBAAe,GAAG,IAAI,YAAY,EAAE,CAAC;AAC7D,KAyBC;AACD;AAAS;AAAoB;AAAS,IAzBpC,eAAe;AACjB,QAAI,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,EAAE;AAC3D,YAAM,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,WAAW;AAAO;AAC9B;AAAiB,YADO;AACjD,gBAAQ,IAAI,CAAC,eAAe,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;AACzG,gBACQ,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;AACvC,oBAAU,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC/C,iBAAS;AACT,aAAO,GAAE,IAAI,CAAC,CAAC;AACf,SAAK;AACL,KAAG;AACH;AAEA;AACE;AACE;AACmB;AACJ;AAAS,IAD1B,KAAK,CAAC,MAAW;AACnB,QAAI,MAAM,CAAC,cAAc,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1C,QACI,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAM,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC3C,SAAK;AACL,KAAG;AACH;4CAhDC,SAAS,SAAC,mBACT,QAAQ,EAAE;IAAW,mBACrB,QAAQ,EAAE;;iCAYG;IACd;;;;;;;;;;;;;;;;;+IACG;AAAE;AAAmC,oBAKtC,KAAK;AAAM,8BACX,MAAM,SAAC,YAAY;AAAO;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAK;AAE9B;AAEiC;ACjCzC,MAIa,YAAY;AAAI;AAAS;AACtB;AAAS,IAAvB,YAAoB,YAA0B;AAAK,QAA/B,iBAAY,GAAZ,YAAY,CAAc;AAAE,KAAG;AACrD;AACO;AAAyB;AACrB;AAAoB;AAAS,IADtC,SAAS,CAAC,KAAU,EAAE,GAAG,IAAW;AAAK,QACvC,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AAC5D,KAAG;AACH;0CAPC,IAAI,SAAC,EAAE,IAAI,EAAE,UAAU,EAAE;+FACrB;AAAE;AAAoB;AACf,YALH,YAAY;AAAI;;;;6EAAE;AAAC;AAAC;AAAK;AACxB;AAGiC;ACJ3C,WAWwC,oBAAoB;AAAG;AAF/D,IAAW,SAAS,GAAG;AACvB,IAAE,YAAY;AACd,IAAE,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,IAAsB,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE;AACpF,CAAC;AAQD,MAAa,YAAY;AACzB;AAAS;AAAoB;AAAS,IAApC,OAAO,OAAO;AAAM,QAClB,OAAO;AACX,YAAM,QAAQ,EAAE,YAAY;AAC5B,YAAM,SAAS;AACf,SAAK,CAAC;AACN,KAAG;AACH;0CAbC,QAAQ,SAAC,mBACR,OAAO,EAAE,CAAC;QAAY,CAAC,mBACvB,YAAY,EAAE,CAAC,cAAc,EAAE;KAAe,EAAE,YAAY,CAAC,mBAC7D,OAAO,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;EAC1C,SAAS,eACV;;;;;;;;;0BACI;AAAC;AAAC;AAQuC","sourcesContent":["\r\n/**\r\n * Check and return true if an object is type of string\r\n * @param obj Analyse has to object the string type\r\n * @return result of analysis\r\n */\r\nexport function isString(obj: any): boolean {\r\n  return typeof obj === 'string';\r\n}\r\n\r\n/**\r\n * Check and return true if an object is type of number\r\n * @param obj Analyse has to object the boolean type\r\n * @return result of analysis\r\n */\r\nexport function isNumber(obj: any): boolean {\r\n  return typeof obj === 'number';\r\n}\r\n\r\n/**\r\n * Check and return true if an object is type of Function\r\n * @param obj Analyse has to object the function type\r\n * @return result of analysis\r\n */\r\nexport function isFunction(obj: any): boolean {\r\n  return typeof obj === 'function';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { isString, isNumber, isFunction } from './toasta.utils';\r\n\r\n\r\n\r\n/**\r\n * Options to configure a new Toast\r\n */\r\n@Injectable()\r\nexport class ToastOptions {\r\n  title: string;\r\n  msg?: string;\r\n  showClose?: boolean;\r\n  showDuration?: boolean;\r\n  theme?: string;\r\n  timeout?: number;\r\n  onAdd?: Function;\r\n  onRemove?: Function;\r\n}\r\n\r\n/**\r\n * Structrure of a created Toast\r\n */\r\n@Injectable()\r\nexport class ToastData {\r\n  id: number;\r\n  title: string;\r\n  msg: string;\r\n  showClose: boolean;\r\n  showDuration: boolean;\r\n  type: string;\r\n  theme: string;\r\n  timeout: number;\r\n  onAdd: Function;\r\n  onRemove: Function;\r\n  onClick: Function;\r\n}\r\n\r\n/**\r\n * Default configuration for all toasts and toasta container\r\n */\r\n@Injectable()\r\nexport class ToastaConfig {\r\n\r\n  // Maximum number of toasties to show at once\r\n  limit = 5;\r\n\r\n  // Whether to show the 'X' icon to close the toast\r\n  showClose = true;\r\n\r\n  // Whether to show a progress bar at the bottom of the notification\r\n  showDuration = true;\r\n\r\n  // The window position where the toast pops up\r\n  position: 'bottom-right' | 'bottom-left' | 'bottom-center' | 'bottom-fullwidth' | 'top-right' | 'top-left' | 'top-center' | 'top-fullwidth' | 'center-center' = 'bottom-right';\r\n\r\n  // How long (in miliseconds) the toasta shows before it's removed. Set to null/0 to turn off.\r\n  timeout = 5000;\r\n\r\n  // What theme to use\r\n  theme: 'default' | 'material' | 'bootstrap' = 'default';\r\n}\r\n\r\nexport enum ToastaEventType {\r\n  ADD,\r\n  CLEAR,\r\n  CLEAR_ALL\r\n}\r\n\r\nexport class ToastaEvent {\r\n  constructor(public type: ToastaEventType, public value?: any) { }\r\n}\r\n\r\nexport function toastaServiceFactory(config: ToastaConfig): ToastaService {\r\n  return new ToastaService(config);\r\n}\r\n\r\n/**\r\n * Toasta service helps create different kinds of Toasts\r\n */\r\n@Injectable()\r\nexport class ToastaService {\r\n  // Allowed THEMES\r\n  static THEMES: Array<string> = ['default', 'material', 'bootstrap'];\r\n  // Init the counter\r\n  uniqueCounter = 0;\r\n  // ToastData event emitter\r\n  // private toastsEmitter: EventEmitter<ToastData> = new EventEmitter<ToastData>();\r\n  // Clear event emitter\r\n  // private clearEmitter: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  private eventSource: Subject<ToastaEvent> = new Subject<ToastaEvent>();\r\n  public events: Observable<ToastaEvent> = this.eventSource.asObservable();\r\n\r\n  constructor(private config: ToastaConfig) { }\r\n\r\n  /**\r\n   * Get list of toats\r\n   */\r\n  // getToasts(): Observable<ToastData> {\r\n  //   return this.toastsEmitter.asObservable();\r\n  // }\r\n\r\n  // getClear(): Observable<number> {\r\n  //   return this.clearEmitter.asObservable();\r\n  // }\r\n\r\n  /**\r\n   * Create Toast of a default type\r\n   */\r\n  default(options: ToastOptions | string | number): void {\r\n    this.add(options, 'default');\r\n  }\r\n\r\n  /**\r\n   * Create Toast of info type\r\n   * @param options Individual toasta config overrides\r\n   */\r\n  info(options: ToastOptions | string | number): void {\r\n    this.add(options, 'info');\r\n  }\r\n\r\n  /**\r\n   * Create Toast of success type\r\n   * @param options Individual toasta config overrides\r\n   */\r\n  success(options: ToastOptions | string | number): void {\r\n    this.add(options, 'success');\r\n  }\r\n\r\n  /**\r\n   * Create Toast of wait type\r\n   * @param options Individual toasta config overrides\r\n   */\r\n  wait(options: ToastOptions | string | number): void {\r\n    this.add(options, 'wait');\r\n  }\r\n\r\n  /**\r\n   * Create Toast of error type\r\n   * @param options Individual toasta config overrides\r\n   */\r\n  error(options: ToastOptions | string | number): void {\r\n    this.add(options, 'error');\r\n  }\r\n\r\n  /**\r\n   * Create Toast of warning type\r\n   * @param options Individual toasta config overrides\r\n   */\r\n  warning(options: ToastOptions | string | number): void {\r\n    this.add(options, 'warning');\r\n  }\r\n\r\n\r\n  // Add a new toast item\r\n  private add(options: ToastOptions | string | number, type: string) {\r\n    let toastaOptions: ToastOptions;\r\n\r\n    if (isString(options) && options !== '' || isNumber(options)) {\r\n      toastaOptions = {\r\n        title: options.toString()\r\n      } as ToastOptions;\r\n    } else {\r\n      toastaOptions = options as ToastOptions;\r\n    }\r\n\r\n    if (!toastaOptions || !toastaOptions.title && !toastaOptions.msg) {\r\n      throw new Error('ngx-toasta: No toast title or message specified!');\r\n    }\r\n\r\n    type = type || 'default';\r\n\r\n    // Set a unique counter for an id\r\n    this.uniqueCounter++;\r\n\r\n    // Set the local vs global config items\r\n    const showClose = this._checkConfigItem(this.config, toastaOptions, 'showClose');\r\n\r\n    // Set the local vs global config items\r\n    const showDuration = this._checkConfigItem(this.config, toastaOptions, 'showDuration');\r\n\r\n    // If we have a theme set, make sure it's a valid one\r\n    let theme: string;\r\n    if (toastaOptions.theme) {\r\n      theme = ToastaService.THEMES.indexOf(toastaOptions.theme) > -1 ? toastaOptions.theme : this.config.theme;\r\n    } else {\r\n      theme = this.config.theme;\r\n    }\r\n\r\n    const toast: ToastData = {\r\n      id: this.uniqueCounter,\r\n      title: toastaOptions.title,\r\n      msg: toastaOptions.msg,\r\n      showClose,\r\n      showDuration,\r\n      type: 'toasta-type-' + type,\r\n      theme: 'toasta-theme-' + theme,\r\n      onAdd: toastaOptions.onAdd && isFunction(toastaOptions.onAdd) ? toastaOptions.onAdd : null,\r\n      onRemove: toastaOptions.onRemove && isFunction(toastaOptions.onRemove) ? toastaOptions.onRemove : null\r\n    } as ToastData;\r\n\r\n    // If there's a timeout individually or globally, set the toast to timeout\r\n    // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\r\n    toast.timeout = toastaOptions.hasOwnProperty('timeout') ? toastaOptions.timeout : this.config.timeout;\r\n\r\n    // Push up a new toast item\r\n    // this.toastsSubscriber.next(toast);\r\n    // this.toastsEmitter.next(toast);\r\n    this.emitEvent(new ToastaEvent(ToastaEventType.ADD, toast));\r\n    // If we have a onAdd function, call it here\r\n    if (toastaOptions.onAdd && isFunction(toastaOptions.onAdd)) {\r\n      toastaOptions.onAdd.call(this, toast);\r\n    }\r\n  }\r\n\r\n  // Clear all toasts\r\n  clearAll() {\r\n    // this.clearEmitter.next(null);\r\n    this.emitEvent(new ToastaEvent(ToastaEventType.CLEAR_ALL));\r\n  }\r\n\r\n  // Clear the specific one\r\n  clear(id: number) {\r\n    // this.clearEmitter.next(id);\r\n    this.emitEvent(new ToastaEvent(ToastaEventType.CLEAR, id));\r\n  }\r\n\r\n  // Checks whether the local option is set, if not,\r\n  // checks the global config\r\n  private _checkConfigItem(config: any, options: any, property: string) {\r\n    if (options[property] === false) {\r\n      return false;\r\n    } else if (!options[property]) {\r\n      return config[property];\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private emitEvent(event: ToastaEvent) {\r\n    if (this.eventSource) {\r\n      // Push up a new event\r\n      this.eventSource.next(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { isFunction } from './toasta.utils';\r\nimport { ToastaService, ToastData, ToastaConfig, ToastaEvent, ToastaEventType } from './toasta.service';\r\n\r\n/**\r\n * Toasta is container for Toast components\r\n */\r\n@Component({\r\n  selector: 'ngx-toasta',\r\n  template: `\r\n    <div id=\"toasta\" [ngClass]=\"[position]\">\r\n        <ngx-toast *ngFor=\"let toast of toasts\" [toast]=\"toast\" (closeToast)=\"closeToast(toast)\"></ngx-toast>\r\n    </div>`\r\n})\r\nexport class ToastaComponent implements OnInit {\r\n  /**\r\n   * Set of constants defines position of Toasta on the page.\r\n   */\r\n  static POSITIONS: Array<String> = ['bottom-right', 'bottom-left', 'bottom-center', 'bottom-fullwidth', 'top-right', 'top-left', 'top-center', 'top-fullwidth', 'center-center'];\r\n\r\n  private _position = '';\r\n  // The window position where the toast pops up. Possible values:\r\n  // - bottom-right (default value from ToastConfig)\r\n  // - bottom-left\r\n  // - bottom-center\r\n  // - bottom-fullwidth\r\n  // - top-right\r\n  // - top-left\r\n  // - top-center\r\n  // - top-fullwidth\r\n  // - center-center\r\n  @Input()\r\n  set position(value: string) {\r\n    if (value) {\r\n      let notFound = true;\r\n      for (let i = 0; i < ToastaComponent.POSITIONS.length; i++) {\r\n        if (ToastaComponent.POSITIONS[i] === value) {\r\n          notFound = false;\r\n          break;\r\n        }\r\n      }\r\n      if (notFound) {\r\n        // Position was wrong - clear it here to use the one from config.\r\n        value = this.config.position;\r\n      }\r\n    } else {\r\n      value = this.config.position;\r\n    }\r\n    this._position = 'toasta-position-' + value;\r\n  }\r\n\r\n  get position(): string {\r\n    return this._position;\r\n  }\r\n\r\n  // The storage for toasts.\r\n  toasts: Array<ToastData> = [];\r\n\r\n  constructor(private config: ToastaConfig, private toastaService: ToastaService) {\r\n    // Initialise position\r\n    this.position = '';\r\n  }\r\n\r\n  /**\r\n   * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\r\n   * first time, and before any of its children have been checked. It is invoked only once when the\r\n   * directive is instantiated.\r\n   */\r\n  ngOnInit(): any {\r\n    // We listen events from our service\r\n    this.toastaService.events.subscribe((event: ToastaEvent) => {\r\n      if (event.type === ToastaEventType.ADD) {\r\n        // Add the new one\r\n        const toast: ToastData = event.value;\r\n        this.add(toast);\r\n      } else if (event.type === ToastaEventType.CLEAR) {\r\n        // Clear the one by number\r\n        const id: number = event.value;\r\n        this.clear(id);\r\n      } else if (event.type === ToastaEventType.CLEAR_ALL) {\r\n        // Lets clear all toasts\r\n        this.clearAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event listener of 'closeToast' event comes from ToastaComponent.\r\n   * This method removes ToastComponent assosiated with this Toast.\r\n   */\r\n  closeToast(toast: ToastData) {\r\n    this.clear(toast.id);\r\n  }\r\n\r\n  /**\r\n   * Add new Toast\r\n   */\r\n  add(toast: ToastData) {\r\n    // If we've gone over our limit, remove the earliest\r\n    // one from the array\r\n    if (this.config.limit && this.toasts.length >= this.config.limit) {\r\n      this.toasts.shift();\r\n    }\r\n    // Add toasta to array\r\n    this.toasts.push(toast);\r\n    //\r\n    // If there's a timeout individually or globally,\r\n    // set the toast to timeout\r\n    if (+toast.timeout) {\r\n      this._setTimeout(toast);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear individual toast by id\r\n   * @param id is unique identifier of Toast\r\n   */\r\n  clear(id: number) {\r\n    if (id) {\r\n      this.toasts.forEach((value: any, key: number) => {\r\n        if (value.id === id) {\r\n          if (value.onRemove && isFunction(value.onRemove)) {\r\n            value.onRemove.call(this, value);\r\n          }\r\n          this.toasts.splice(key, 1);\r\n        }\r\n      });\r\n    } else {\r\n      throw new Error('Please provide id of Toast to close');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all toasts\r\n   */\r\n  clearAll() {\r\n    this.toasts.forEach((value: any, key: number) => {\r\n      if (value.onRemove && isFunction(value.onRemove)) {\r\n        value.onRemove.call(this, value);\r\n      }\r\n    });\r\n    this.toasts = [];\r\n  }\r\n\r\n  /**\r\n   * Custom setTimeout function for specific setTimeouts on individual toasts.\r\n   */\r\n  private _setTimeout(toast: ToastData) {\r\n    window.setTimeout(() => {\r\n      this.clear(toast.id);\r\n    }, toast.timeout);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { ToastData } from './toasta.service';\r\n\r\n/**\r\n * A Toast component shows message with title and close button.\r\n */\r\n@Component({\r\n  selector: 'ngx-toast',\r\n  template: `\r\n        <div class=\"toast\" [ngClass]=\"[toast.type, toast.theme]\">\r\n            <div *ngIf=\"toast.showClose\" class=\"close-button\" (click)=\"close($event)\"></div>\r\n            <div *ngIf=\"toast.title || toast.msg\" class=\"toast-text\">\r\n                <span *ngIf=\"toast.title\" class=\"toast-title\" [innerHTML]=\"toast.title | safeHtml\"></span>\r\n                <br *ngIf=\"toast.title && toast.msg\" />\r\n                <span *ngIf=\"toast.msg\" class=\"toast-msg\" [innerHtml]=\"toast.msg | safeHtml\"></span>\r\n            </div>\r\n            <div class=\"durationbackground\" *ngIf=\"toast.showDuration && toast.timeout > 0\">\r\n                <div class=\"durationbar\" [style.width.%]=\"progressPercent\">\r\n                </div>\r\n            </div>\r\n        </div>`\r\n})\r\nexport class ToastComponent implements AfterViewInit {\r\n\r\n  progressInterval: number;\r\n  progressPercent = 0;\r\n  startTime: number = performance.now();\r\n  @Input() toast: ToastData;\r\n  @Output('closeToast') closeToastEvent = new EventEmitter();\r\n\r\n  ngAfterViewInit() {\r\n    if (this.toast.showDuration && this.toast.timeout > 0) {\r\n      this.progressInterval = window.setInterval(() => {\r\n        this.progressPercent = (100 - ((performance.now() - this.startTime) / this.toast.timeout * 100)); // Descending progress\r\n\r\n        if (this.progressPercent <= 0) {\r\n          clearInterval(this.progressInterval);\r\n        }\r\n      }, 16.7); // 60 fps\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event handler invokes when user clicks on close button.\r\n   * This method emit new event into ToastaContainer to close it.\r\n   */\r\n  close($event: any) {\r\n    $event.preventDefault();\r\n    this.closeToastEvent.next(this.toast);\r\n\r\n    if (this.progressInterval) {\r\n      clearInterval(this.progressInterval);\r\n    }\r\n  }\r\n}\r\n","import { DomSanitizer } from '@angular/platform-browser';\r\nimport { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n  constructor(private domSanitized: DomSanitizer) { }\r\n\r\n  transform(value: any, ...args: any[]): any {\r\n    return this.domSanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { ToastaComponent } from './toasta.component';\r\nimport { ToastComponent } from './toast.component';\r\nimport { SafeHtmlPipe } from './shared';\r\nimport { ToastaService, ToastaConfig, toastaServiceFactory } from './toasta.service';\r\n\r\nexport let providers = [\r\n  ToastaConfig,\r\n  { provide: ToastaService, useFactory: toastaServiceFactory, deps: [ToastaConfig] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastComponent, ToastaComponent, SafeHtmlPipe],\r\n  exports: [ToastComponent, ToastaComponent],\r\n  providers\r\n})\r\nexport class ToastaModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastaModule,\r\n      providers\r\n    };\r\n  }\r\n}\r\n"]}