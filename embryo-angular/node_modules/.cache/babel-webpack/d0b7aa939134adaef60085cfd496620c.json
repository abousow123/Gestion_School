{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // we use the full path to the lite build to solve a meteor.js issue:\n// https://github.com/algolia/instantsearch.js/issues/1024#issuecomment-221618284\n\n\nimport algoliasearch from 'algoliasearch/src/browser/builds/algoliasearchLite.js';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport forEach from 'lodash/forEach';\nimport mergeWith from 'lodash/mergeWith';\nimport union from 'lodash/union';\nimport isPlainObject from 'lodash/isPlainObject';\nimport EventEmitter from 'events';\nimport urlSyncWidget from './url-sync.js';\nimport RoutingManager from './RoutingManager.js';\nimport simpleMapping from './stateMappings/simple.js';\nimport historyRouter from './routers/history.js';\nimport version from './version.js';\nimport createHelpers from './createHelpers.js';\nimport { warn } from './utils';\nvar ROUTING_DEFAULT_OPTIONS = {\n  stateMapping: simpleMapping(),\n  router: historyRouter()\n};\n\nfunction defaultCreateURL() {\n  return '#';\n}\n\nvar defaultCreateAlgoliaClient = function defaultCreateAlgoliaClient(defaultAlgoliasearch, appId, apiKey) {\n  return defaultAlgoliasearch(appId, apiKey);\n};\n\nvar checkOptions = function checkOptions(_ref) {\n  var appId = _ref.appId,\n      apiKey = _ref.apiKey,\n      indexName = _ref.indexName,\n      createAlgoliaClient = _ref.createAlgoliaClient,\n      searchClient = _ref.searchClient;\n\n  if (!searchClient) {\n    if (appId === null || apiKey === null || indexName === null) {\n      var usage = '\\nUsage: instantsearch({\\n  appId: \\'my_application_id\\',\\n  apiKey: \\'my_search_api_key\\',\\n  indexName: \\'my_index_name\\'\\n});';\n      throw new Error(usage);\n    }\n  } else if (searchClient && (indexName === null || appId !== null || apiKey !== null || createAlgoliaClient !== defaultCreateAlgoliaClient)) {\n    var _usage = '\\nUsage: instantsearch({\\n  indexName: \\'my_index_name\\',\\n  searchClient: algoliasearch(\\'appId\\', \\'apiKey\\')\\n});';\n    throw new Error(_usage);\n  }\n};\n/**\n * Widgets are the building blocks of InstantSearch.js. Any\n * valid widget must have at least a `render` or a `init` function.\n * @typedef {Object} Widget\n * @property {function} [render] Called after each search response has been received\n * @property {function} [getConfiguration] Let the widget update the configuration\n * of the search with new parameters\n * @property {function} [init] Called once before the first search\n */\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * @fires Instantsearch#render This event is triggered each time a render is done\n */\n\n\nvar InstantSearch = function (_EventEmitter) {\n  _inherits(InstantSearch, _EventEmitter);\n\n  function InstantSearch(options) {\n    _classCallCheck(this, InstantSearch);\n\n    var _this = _possibleConstructorReturn(this, (InstantSearch.__proto__ || Object.getPrototypeOf(InstantSearch)).call(this));\n\n    var _options$appId = options.appId,\n        appId = _options$appId === undefined ? null : _options$appId,\n        _options$apiKey = options.apiKey,\n        apiKey = _options$apiKey === undefined ? null : _options$apiKey,\n        _options$indexName = options.indexName,\n        indexName = _options$indexName === undefined ? null : _options$indexName,\n        numberLocale = options.numberLocale,\n        _options$searchParame = options.searchParameters,\n        searchParameters = _options$searchParame === undefined ? {} : _options$searchParame,\n        _options$urlSync = options.urlSync,\n        urlSync = _options$urlSync === undefined ? null : _options$urlSync,\n        _options$routing = options.routing,\n        routing = _options$routing === undefined ? null : _options$routing,\n        searchFunction = options.searchFunction,\n        _options$createAlgoli = options.createAlgoliaClient,\n        createAlgoliaClient = _options$createAlgoli === undefined ? defaultCreateAlgoliaClient : _options$createAlgoli,\n        _options$stalledSearc = options.stalledSearchDelay,\n        stalledSearchDelay = _options$stalledSearc === undefined ? 200 : _options$stalledSearc,\n        _options$searchClient = options.searchClient,\n        searchClient = _options$searchClient === undefined ? null : _options$searchClient;\n    checkOptions({\n      appId: appId,\n      apiKey: apiKey,\n      indexName: indexName,\n      createAlgoliaClient: createAlgoliaClient,\n      searchClient: searchClient\n    });\n\n    if (searchClient && typeof searchClient.search !== 'function') {\n      throw new Error('InstantSearch configuration error: `searchClient` must implement a `search(requests)` method.');\n    }\n\n    var client = searchClient || createAlgoliaClient(algoliasearch, appId, apiKey);\n\n    if (typeof client.addAlgoliaAgent === 'function') {\n      client.addAlgoliaAgent('instantsearch.js ' + version);\n    }\n\n    _this.client = client;\n    _this.helper = null;\n    _this.indexName = indexName;\n    _this.searchParameters = _extends({}, searchParameters, {\n      index: indexName\n    });\n    _this.widgets = [];\n    _this.templatesConfig = {\n      helpers: createHelpers({\n        numberLocale: numberLocale\n      }),\n      compileOptions: {}\n    };\n    _this._stalledSearchDelay = stalledSearchDelay;\n\n    if (searchFunction) {\n      _this._searchFunction = searchFunction;\n    }\n\n    if (urlSync !== null) {\n      if (routing !== null) {\n        throw new Error('InstantSearch configuration error: it is not possible to use `urlSync` and `routing` at the same time');\n      }\n\n      warn('`urlSync` option is deprecated and will be removed in the next major version.\\n' + 'You can now use the new `routing` option.');\n\n      if (urlSync === true) {\n        // when using urlSync: true\n        warn('Use it like this: `routing: true`');\n      }\n\n      warn('For advanced use cases, checkout the documentation: https://community.algolia.com/instantsearch.js/v2/guides/routing.html#migrating-from-urlsync');\n    }\n\n    _this.urlSync = urlSync === true ? {} : urlSync;\n    if (routing === true) _this.routing = ROUTING_DEFAULT_OPTIONS;else if (isPlainObject(routing)) _this.routing = _extends({}, ROUTING_DEFAULT_OPTIONS, routing);\n\n    if (options.createAlgoliaClient) {\n      warn('\\n`createAlgoliaClient` option is deprecated and will be removed in the next major version.\\nPlease use `searchClient` instead: https://community.algolia.com/instantsearch.js/v2/instantsearch.html#struct-InstantSearchOptions-searchClient.\\nTo help you migrate, please refer to the migration guide: https://community.algolia.com/instantsearch.js/v2/guides/prepare-for-v3.html');\n    }\n\n    return _this;\n  }\n  /**\n   * Adds a widget. This can be done before and after InstantSearch has been started. Adding a\n   * widget after InstantSearch started is considered **EXPERIMENTAL** and therefore\n   * it is possibly buggy, if you find anything please\n   * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20hot%20addWidget).\n   * @param  {Widget} widget The widget to add to InstantSearch. Widgets are simple objects\n   * that have methods that map the search life cycle in a UI perspective. Usually widgets are\n   * created by [widget factories](widgets.html) like the one provided with InstantSearch.js.\n   * @return {undefined} This method does not return anything\n   */\n\n\n  _createClass(InstantSearch, [{\n    key: 'addWidget',\n    value: function addWidget(widget) {\n      this.addWidgets([widget]);\n    }\n    /**\n     * Adds multiple widgets. This can be done before and after the InstantSearch has been started. This feature\n     * is considered **EXPERIMENTAL** and therefore it is possibly buggy, if you find anything please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20addWidgets).\n     * @param  {Widget[]} widgets The array of widgets to add to InstantSearch.\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'addWidgets',\n    value: function addWidgets(widgets) {\n      var _this2 = this;\n\n      if (!Array.isArray(widgets)) {\n        throw new Error('You need to provide an array of widgets or call `addWidget()`');\n      } // The routing manager widget is always added manually at the last position.\n      // By removing it from the last position and adding it back after, we ensure\n      // it keeps this position.\n      // fixes #3148\n\n\n      var lastWidget = this.widgets.pop();\n      widgets.forEach(function (widget) {\n        // Add the widget to the list of widget\n        if (widget.render === undefined && widget.init === undefined) {\n          throw new Error('Widget definition missing render or init method');\n        }\n\n        _this2.widgets.push(widget);\n      }); // Second part of the fix for #3148\n\n      if (lastWidget) this.widgets.push(lastWidget); // Init the widget directly if instantsearch has been already started\n\n      if (this.started && Boolean(widgets.length)) {\n        this.searchParameters = this.widgets.reduce(enhanceConfiguration({}), _extends({}, this.helper.state));\n        this.helper.setState(this.searchParameters);\n        widgets.forEach(function (widget) {\n          if (widget.init) {\n            widget.init({\n              state: _this2.helper.state,\n              helper: _this2.helper,\n              templatesConfig: _this2.templatesConfig,\n              createURL: _this2._createAbsoluteURL,\n              onHistoryChange: _this2._onHistoryChange,\n              instantSearchInstance: _this2\n            });\n          }\n        });\n        this.helper.search();\n      }\n    }\n    /**\n     * Removes a widget. This can be done after the InstantSearch has been started. This feature\n     * is considered **EXPERIMENTAL** and therefore it is possibly buggy, if you find anything please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20removeWidget).\n     * @param  {Widget} widget The widget instance to remove from InstantSearch. This widget must implement a `dispose()` method in order to be gracefully removed.\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'removeWidget',\n    value: function removeWidget(widget) {\n      this.removeWidgets([widget]);\n    }\n    /**\n     * Removes multiple widgets. This can be done only after the InstantSearch has been started. This feature\n     * is considered **EXPERIMENTAL** and therefore it is possibly buggy, if you find anything please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20addWidgets).\n     * @param  {Widget[]} widgets Array of widgets instances to remove from InstantSearch.\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'removeWidgets',\n    value: function removeWidgets(widgets) {\n      var _this3 = this;\n\n      if (!Array.isArray(widgets)) {\n        throw new Error('You need to provide an array of widgets or call `removeWidget()`');\n      }\n\n      widgets.forEach(function (widget) {\n        if (!_this3.widgets.includes(widget) || typeof widget.dispose !== 'function') {\n          throw new Error('The widget you tried to remove does not implement the dispose method, therefore it is not possible to remove this widget');\n        }\n\n        _this3.widgets = _this3.widgets.filter(function (w) {\n          return w !== widget;\n        });\n        var nextState = widget.dispose({\n          helper: _this3.helper,\n          state: _this3.helper.getState()\n        }); // re-compute remaining widgets to the state\n        // in a case two widgets were using the same configuration but we removed one\n\n        if (nextState) {\n          // We don't want to re-add URlSync `getConfiguration` widget\n          // it can throw errors since it may re-add SearchParameters about something unmounted\n          _this3.searchParameters = _this3.widgets.filter(function (w) {\n            return w.constructor.name !== 'URLSync';\n          }).reduce(enhanceConfiguration({}), _extends({}, nextState));\n\n          _this3.helper.setState(_this3.searchParameters);\n        }\n      }); // If there's multiple call to `removeWidget()` let's wait until they are all made\n      // and then check for widgets.length & make a search on next tick\n      //\n      // This solves an issue where you unmount a page and removing widget by widget\n\n      setTimeout(function () {\n        // no need to trigger a search if we don't have any widgets left\n        if (_this3.widgets.length > 0) {\n          _this3.helper.search();\n        }\n      }, 0);\n    }\n    /**\n     * Clears the cached answers from Algolia and triggers a new search.\n     *\n     * @return {undefined} Does not return anything\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      if (this.helper) {\n        this.helper.clearCache().search();\n      }\n    }\n    /**\n     * Ends the initialization of InstantSearch.js and triggers the\n     * first search. This method should be called after all widgets have been added\n     * to the instance of InstantSearch.js. InstantSearch.js also supports adding and removing\n     * widgets after the start as an **EXPERIMENTAL** feature.\n     *\n     * @return {undefined} Does not return anything\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this4 = this;\n\n      if (!this.widgets) throw new Error('No widgets were added to instantsearch.js');\n      if (this.started) throw new Error('start() has been already called once');\n      var searchParametersFromUrl = void 0;\n\n      if (this.urlSync) {\n        var syncWidget = urlSyncWidget(this.urlSync);\n        this._createURL = syncWidget.createURL.bind(syncWidget);\n\n        this._createAbsoluteURL = function (relative) {\n          return _this4._createURL(relative, {\n            absolute: true\n          });\n        };\n\n        this._onHistoryChange = syncWidget.onHistoryChange.bind(syncWidget);\n        this.widgets.push(syncWidget);\n        searchParametersFromUrl = syncWidget.searchParametersFromUrl;\n      } else if (this.routing) {\n        var routingManager = new RoutingManager(_extends({}, this.routing, {\n          instantSearchInstance: this\n        }));\n        this._onHistoryChange = routingManager.onHistoryChange.bind(routingManager);\n        this._createURL = routingManager.createURL.bind(routingManager);\n        this._createAbsoluteURL = this._createURL;\n        this.widgets.push(routingManager);\n      } else {\n        this._createURL = defaultCreateURL;\n        this._createAbsoluteURL = defaultCreateURL;\n\n        this._onHistoryChange = function () {};\n      }\n\n      this.searchParameters = this.widgets.reduce(enhanceConfiguration(searchParametersFromUrl), this.searchParameters);\n      var helper = algoliasearchHelper(this.client, this.searchParameters.index || this.indexName, this.searchParameters);\n\n      if (this._searchFunction) {\n        this._mainHelperSearch = helper.search.bind(helper);\n\n        helper.search = function () {\n          var helperSearchFunction = algoliasearchHelper({\n            search: function search() {\n              return new Promise(function () {});\n            }\n          }, helper.state.index, helper.state);\n          helperSearchFunction.once('search', function (state) {\n            helper.overrideStateWithoutTriggeringChangeEvent(state);\n\n            _this4._mainHelperSearch();\n          });\n\n          _this4._searchFunction(helperSearchFunction);\n        };\n      }\n\n      this.helper = helper;\n\n      this._init(helper.state, this.helper);\n\n      this.helper.on('result', this._render.bind(this, this.helper));\n      this.helper.on('error', function (e) {\n        _this4.emit('error', e);\n      });\n      this._searchStalledTimer = null;\n      this._isSearchStalled = true;\n      this.helper.search();\n      this.helper.on('search', function () {\n        if (!_this4._isSearchStalled && !_this4._searchStalledTimer) {\n          _this4._searchStalledTimer = setTimeout(function () {\n            _this4._isSearchStalled = true;\n\n            _this4._render(_this4.helper, _this4.helper.lastResults, _this4.helper.lastResults._state);\n          }, _this4._stalledSearchDelay);\n        }\n      }); // track we started the search if we add more widgets,\n      // to init them directly after add\n\n      this.started = true;\n    }\n    /**\n     * Removes all widgets without triggering a search afterwards. This is an **EXPERIMENTAL** feature,\n     * if you find an issue with it, please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20dispose).\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.removeWidgets(this.widgets);\n    }\n  }, {\n    key: 'createURL',\n    value: function createURL(params) {\n      if (!this._createURL) {\n        throw new Error('You need to call start() before calling createURL()');\n      }\n\n      return this._createURL(this.helper.state.setQueryParameters(params));\n    }\n  }, {\n    key: '_render',\n    value: function _render(helper, results, state) {\n      var _this5 = this;\n\n      if (!this.helper.hasPendingRequests()) {\n        clearTimeout(this._searchStalledTimer);\n        this._searchStalledTimer = null;\n        this._isSearchStalled = false;\n      }\n\n      forEach(this.widgets, function (widget) {\n        if (!widget.render) {\n          return;\n        }\n\n        widget.render({\n          templatesConfig: _this5.templatesConfig,\n          results: results,\n          state: state,\n          helper: helper,\n          createURL: _this5._createAbsoluteURL,\n          instantSearchInstance: _this5,\n          searchMetadata: {\n            isSearchStalled: _this5._isSearchStalled\n          }\n        });\n      });\n      /**\n       * Render is triggered when the rendering of the widgets has been completed\n       * after a search.\n       * @event InstantSearch#render\n       */\n\n      this.emit('render');\n    }\n  }, {\n    key: '_init',\n    value: function _init(state, helper) {\n      var _this6 = this;\n\n      forEach(this.widgets, function (widget) {\n        if (widget.init) {\n          widget.init({\n            state: state,\n            helper: helper,\n            templatesConfig: _this6.templatesConfig,\n            createURL: _this6._createAbsoluteURL,\n            onHistoryChange: _this6._onHistoryChange,\n            instantSearchInstance: _this6\n          });\n        }\n      });\n    }\n  }]);\n\n  return InstantSearch;\n}(EventEmitter);\n\nexport function enhanceConfiguration(searchParametersFromUrl) {\n  return function (configuration, widgetDefinition) {\n    if (!widgetDefinition.getConfiguration) return configuration; // Get the relevant partial configuration asked by the widget\n\n    var partialConfiguration = widgetDefinition.getConfiguration(configuration, searchParametersFromUrl);\n\n    var customizer = function customizer(a, b) {\n      // always create a unified array for facets refinements\n      if (Array.isArray(a)) {\n        return union(a, b);\n      } // avoid mutating objects\n\n\n      if (isPlainObject(a)) {\n        return mergeWith({}, a, b, customizer);\n      }\n\n      return undefined;\n    };\n\n    return mergeWith({}, configuration, partialConfiguration, customizer);\n  };\n}\nexport default InstantSearch;","map":{"version":3,"sources":["/home/sow/Bureau/ProjetPerso/Gestion_School/embryo-angular/node_modules/instantsearch.js/es/lib/InstantSearch.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","algoliasearch","algoliasearchHelper","forEach","mergeWith","union","isPlainObject","EventEmitter","urlSyncWidget","RoutingManager","simpleMapping","historyRouter","version","createHelpers","warn","ROUTING_DEFAULT_OPTIONS","stateMapping","router","defaultCreateURL","defaultCreateAlgoliaClient","defaultAlgoliasearch","appId","apiKey","checkOptions","_ref","indexName","createAlgoliaClient","searchClient","usage","Error","_usage","InstantSearch","_EventEmitter","options","_this","getPrototypeOf","_options$appId","undefined","_options$apiKey","_options$indexName","numberLocale","_options$searchParame","searchParameters","_options$urlSync","urlSync","_options$routing","routing","searchFunction","_options$createAlgoli","_options$stalledSearc","stalledSearchDelay","_options$searchClient","search","client","addAlgoliaAgent","helper","index","widgets","templatesConfig","helpers","compileOptions","_stalledSearchDelay","_searchFunction","addWidget","widget","addWidgets","_this2","Array","isArray","lastWidget","pop","render","init","push","started","Boolean","reduce","enhanceConfiguration","state","setState","createURL","_createAbsoluteURL","onHistoryChange","_onHistoryChange","instantSearchInstance","removeWidget","removeWidgets","_this3","includes","dispose","filter","w","nextState","getState","name","setTimeout","refresh","clearCache","start","_this4","searchParametersFromUrl","syncWidget","_createURL","bind","relative","absolute","routingManager","_mainHelperSearch","helperSearchFunction","Promise","once","overrideStateWithoutTriggeringChangeEvent","_init","on","_render","e","emit","_searchStalledTimer","_isSearchStalled","lastResults","_state","params","setQueryParameters","results","_this5","hasPendingRequests","clearTimeout","searchMetadata","isSearchStalled","_this6","configuration","widgetDefinition","getConfiguration","partialConfiguration","customizer","a","b"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// we use the full path to the lite build to solve a meteor.js issue:\n// https://github.com/algolia/instantsearch.js/issues/1024#issuecomment-221618284\nimport algoliasearch from 'algoliasearch/src/browser/builds/algoliasearchLite.js';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport forEach from 'lodash/forEach';\nimport mergeWith from 'lodash/mergeWith';\nimport union from 'lodash/union';\nimport isPlainObject from 'lodash/isPlainObject';\nimport EventEmitter from 'events';\nimport urlSyncWidget from './url-sync.js';\nimport RoutingManager from './RoutingManager.js';\nimport simpleMapping from './stateMappings/simple.js';\nimport historyRouter from './routers/history.js';\nimport version from './version.js';\nimport createHelpers from './createHelpers.js';\nimport { warn } from './utils';\n\nvar ROUTING_DEFAULT_OPTIONS = {\n  stateMapping: simpleMapping(),\n  router: historyRouter()\n};\n\nfunction defaultCreateURL() {\n  return '#';\n}\nvar defaultCreateAlgoliaClient = function defaultCreateAlgoliaClient(defaultAlgoliasearch, appId, apiKey) {\n  return defaultAlgoliasearch(appId, apiKey);\n};\n\nvar checkOptions = function checkOptions(_ref) {\n  var appId = _ref.appId,\n      apiKey = _ref.apiKey,\n      indexName = _ref.indexName,\n      createAlgoliaClient = _ref.createAlgoliaClient,\n      searchClient = _ref.searchClient;\n\n  if (!searchClient) {\n    if (appId === null || apiKey === null || indexName === null) {\n      var usage = '\\nUsage: instantsearch({\\n  appId: \\'my_application_id\\',\\n  apiKey: \\'my_search_api_key\\',\\n  indexName: \\'my_index_name\\'\\n});';\n      throw new Error(usage);\n    }\n  } else if (searchClient && (indexName === null || appId !== null || apiKey !== null || createAlgoliaClient !== defaultCreateAlgoliaClient)) {\n    var _usage = '\\nUsage: instantsearch({\\n  indexName: \\'my_index_name\\',\\n  searchClient: algoliasearch(\\'appId\\', \\'apiKey\\')\\n});';\n    throw new Error(_usage);\n  }\n};\n\n/**\n * Widgets are the building blocks of InstantSearch.js. Any\n * valid widget must have at least a `render` or a `init` function.\n * @typedef {Object} Widget\n * @property {function} [render] Called after each search response has been received\n * @property {function} [getConfiguration] Let the widget update the configuration\n * of the search with new parameters\n * @property {function} [init] Called once before the first search\n */\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * @fires Instantsearch#render This event is triggered each time a render is done\n */\n\nvar InstantSearch = function (_EventEmitter) {\n  _inherits(InstantSearch, _EventEmitter);\n\n  function InstantSearch(options) {\n    _classCallCheck(this, InstantSearch);\n\n    var _this = _possibleConstructorReturn(this, (InstantSearch.__proto__ || Object.getPrototypeOf(InstantSearch)).call(this));\n\n    var _options$appId = options.appId,\n        appId = _options$appId === undefined ? null : _options$appId,\n        _options$apiKey = options.apiKey,\n        apiKey = _options$apiKey === undefined ? null : _options$apiKey,\n        _options$indexName = options.indexName,\n        indexName = _options$indexName === undefined ? null : _options$indexName,\n        numberLocale = options.numberLocale,\n        _options$searchParame = options.searchParameters,\n        searchParameters = _options$searchParame === undefined ? {} : _options$searchParame,\n        _options$urlSync = options.urlSync,\n        urlSync = _options$urlSync === undefined ? null : _options$urlSync,\n        _options$routing = options.routing,\n        routing = _options$routing === undefined ? null : _options$routing,\n        searchFunction = options.searchFunction,\n        _options$createAlgoli = options.createAlgoliaClient,\n        createAlgoliaClient = _options$createAlgoli === undefined ? defaultCreateAlgoliaClient : _options$createAlgoli,\n        _options$stalledSearc = options.stalledSearchDelay,\n        stalledSearchDelay = _options$stalledSearc === undefined ? 200 : _options$stalledSearc,\n        _options$searchClient = options.searchClient,\n        searchClient = _options$searchClient === undefined ? null : _options$searchClient;\n\n\n    checkOptions({\n      appId: appId,\n      apiKey: apiKey,\n      indexName: indexName,\n      createAlgoliaClient: createAlgoliaClient,\n      searchClient: searchClient\n    });\n\n    if (searchClient && typeof searchClient.search !== 'function') {\n      throw new Error('InstantSearch configuration error: `searchClient` must implement a `search(requests)` method.');\n    }\n\n    var client = searchClient || createAlgoliaClient(algoliasearch, appId, apiKey);\n\n    if (typeof client.addAlgoliaAgent === 'function') {\n      client.addAlgoliaAgent('instantsearch.js ' + version);\n    }\n\n    _this.client = client;\n    _this.helper = null;\n    _this.indexName = indexName;\n    _this.searchParameters = _extends({}, searchParameters, { index: indexName });\n    _this.widgets = [];\n    _this.templatesConfig = {\n      helpers: createHelpers({ numberLocale: numberLocale }),\n      compileOptions: {}\n    };\n    _this._stalledSearchDelay = stalledSearchDelay;\n\n    if (searchFunction) {\n      _this._searchFunction = searchFunction;\n    }\n\n    if (urlSync !== null) {\n      if (routing !== null) {\n        throw new Error('InstantSearch configuration error: it is not possible to use `urlSync` and `routing` at the same time');\n      }\n\n      warn('`urlSync` option is deprecated and will be removed in the next major version.\\n' + 'You can now use the new `routing` option.');\n\n      if (urlSync === true) {\n        // when using urlSync: true\n        warn('Use it like this: `routing: true`');\n      }\n\n      warn('For advanced use cases, checkout the documentation: https://community.algolia.com/instantsearch.js/v2/guides/routing.html#migrating-from-urlsync');\n    }\n\n    _this.urlSync = urlSync === true ? {} : urlSync;\n    if (routing === true) _this.routing = ROUTING_DEFAULT_OPTIONS;else if (isPlainObject(routing)) _this.routing = _extends({}, ROUTING_DEFAULT_OPTIONS, routing);\n\n    if (options.createAlgoliaClient) {\n      warn('\\n`createAlgoliaClient` option is deprecated and will be removed in the next major version.\\nPlease use `searchClient` instead: https://community.algolia.com/instantsearch.js/v2/instantsearch.html#struct-InstantSearchOptions-searchClient.\\nTo help you migrate, please refer to the migration guide: https://community.algolia.com/instantsearch.js/v2/guides/prepare-for-v3.html');\n    }\n    return _this;\n  }\n\n  /**\n   * Adds a widget. This can be done before and after InstantSearch has been started. Adding a\n   * widget after InstantSearch started is considered **EXPERIMENTAL** and therefore\n   * it is possibly buggy, if you find anything please\n   * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20hot%20addWidget).\n   * @param  {Widget} widget The widget to add to InstantSearch. Widgets are simple objects\n   * that have methods that map the search life cycle in a UI perspective. Usually widgets are\n   * created by [widget factories](widgets.html) like the one provided with InstantSearch.js.\n   * @return {undefined} This method does not return anything\n   */\n\n\n  _createClass(InstantSearch, [{\n    key: 'addWidget',\n    value: function addWidget(widget) {\n      this.addWidgets([widget]);\n    }\n\n    /**\n     * Adds multiple widgets. This can be done before and after the InstantSearch has been started. This feature\n     * is considered **EXPERIMENTAL** and therefore it is possibly buggy, if you find anything please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20addWidgets).\n     * @param  {Widget[]} widgets The array of widgets to add to InstantSearch.\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'addWidgets',\n    value: function addWidgets(widgets) {\n      var _this2 = this;\n\n      if (!Array.isArray(widgets)) {\n        throw new Error('You need to provide an array of widgets or call `addWidget()`');\n      }\n\n      // The routing manager widget is always added manually at the last position.\n      // By removing it from the last position and adding it back after, we ensure\n      // it keeps this position.\n      // fixes #3148\n      var lastWidget = this.widgets.pop();\n\n      widgets.forEach(function (widget) {\n        // Add the widget to the list of widget\n        if (widget.render === undefined && widget.init === undefined) {\n          throw new Error('Widget definition missing render or init method');\n        }\n\n        _this2.widgets.push(widget);\n      });\n\n      // Second part of the fix for #3148\n      if (lastWidget) this.widgets.push(lastWidget);\n\n      // Init the widget directly if instantsearch has been already started\n      if (this.started && Boolean(widgets.length)) {\n        this.searchParameters = this.widgets.reduce(enhanceConfiguration({}), _extends({}, this.helper.state));\n\n        this.helper.setState(this.searchParameters);\n\n        widgets.forEach(function (widget) {\n          if (widget.init) {\n            widget.init({\n              state: _this2.helper.state,\n              helper: _this2.helper,\n              templatesConfig: _this2.templatesConfig,\n              createURL: _this2._createAbsoluteURL,\n              onHistoryChange: _this2._onHistoryChange,\n              instantSearchInstance: _this2\n            });\n          }\n        });\n\n        this.helper.search();\n      }\n    }\n\n    /**\n     * Removes a widget. This can be done after the InstantSearch has been started. This feature\n     * is considered **EXPERIMENTAL** and therefore it is possibly buggy, if you find anything please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20removeWidget).\n     * @param  {Widget} widget The widget instance to remove from InstantSearch. This widget must implement a `dispose()` method in order to be gracefully removed.\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'removeWidget',\n    value: function removeWidget(widget) {\n      this.removeWidgets([widget]);\n    }\n\n    /**\n     * Removes multiple widgets. This can be done only after the InstantSearch has been started. This feature\n     * is considered **EXPERIMENTAL** and therefore it is possibly buggy, if you find anything please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20addWidgets).\n     * @param  {Widget[]} widgets Array of widgets instances to remove from InstantSearch.\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'removeWidgets',\n    value: function removeWidgets(widgets) {\n      var _this3 = this;\n\n      if (!Array.isArray(widgets)) {\n        throw new Error('You need to provide an array of widgets or call `removeWidget()`');\n      }\n\n      widgets.forEach(function (widget) {\n        if (!_this3.widgets.includes(widget) || typeof widget.dispose !== 'function') {\n          throw new Error('The widget you tried to remove does not implement the dispose method, therefore it is not possible to remove this widget');\n        }\n\n        _this3.widgets = _this3.widgets.filter(function (w) {\n          return w !== widget;\n        });\n\n        var nextState = widget.dispose({\n          helper: _this3.helper,\n          state: _this3.helper.getState()\n        });\n\n        // re-compute remaining widgets to the state\n        // in a case two widgets were using the same configuration but we removed one\n        if (nextState) {\n          // We don't want to re-add URlSync `getConfiguration` widget\n          // it can throw errors since it may re-add SearchParameters about something unmounted\n          _this3.searchParameters = _this3.widgets.filter(function (w) {\n            return w.constructor.name !== 'URLSync';\n          }).reduce(enhanceConfiguration({}), _extends({}, nextState));\n\n          _this3.helper.setState(_this3.searchParameters);\n        }\n      });\n\n      // If there's multiple call to `removeWidget()` let's wait until they are all made\n      // and then check for widgets.length & make a search on next tick\n      //\n      // This solves an issue where you unmount a page and removing widget by widget\n      setTimeout(function () {\n        // no need to trigger a search if we don't have any widgets left\n        if (_this3.widgets.length > 0) {\n          _this3.helper.search();\n        }\n      }, 0);\n    }\n\n    /**\n     * Clears the cached answers from Algolia and triggers a new search.\n     *\n     * @return {undefined} Does not return anything\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      if (this.helper) {\n        this.helper.clearCache().search();\n      }\n    }\n\n    /**\n     * Ends the initialization of InstantSearch.js and triggers the\n     * first search. This method should be called after all widgets have been added\n     * to the instance of InstantSearch.js. InstantSearch.js also supports adding and removing\n     * widgets after the start as an **EXPERIMENTAL** feature.\n     *\n     * @return {undefined} Does not return anything\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this4 = this;\n\n      if (!this.widgets) throw new Error('No widgets were added to instantsearch.js');\n\n      if (this.started) throw new Error('start() has been already called once');\n\n      var searchParametersFromUrl = void 0;\n\n      if (this.urlSync) {\n        var syncWidget = urlSyncWidget(this.urlSync);\n        this._createURL = syncWidget.createURL.bind(syncWidget);\n        this._createAbsoluteURL = function (relative) {\n          return _this4._createURL(relative, { absolute: true });\n        };\n        this._onHistoryChange = syncWidget.onHistoryChange.bind(syncWidget);\n        this.widgets.push(syncWidget);\n        searchParametersFromUrl = syncWidget.searchParametersFromUrl;\n      } else if (this.routing) {\n        var routingManager = new RoutingManager(_extends({}, this.routing, {\n          instantSearchInstance: this\n        }));\n        this._onHistoryChange = routingManager.onHistoryChange.bind(routingManager);\n        this._createURL = routingManager.createURL.bind(routingManager);\n        this._createAbsoluteURL = this._createURL;\n        this.widgets.push(routingManager);\n      } else {\n        this._createURL = defaultCreateURL;\n        this._createAbsoluteURL = defaultCreateURL;\n        this._onHistoryChange = function () {};\n      }\n\n      this.searchParameters = this.widgets.reduce(enhanceConfiguration(searchParametersFromUrl), this.searchParameters);\n\n      var helper = algoliasearchHelper(this.client, this.searchParameters.index || this.indexName, this.searchParameters);\n\n      if (this._searchFunction) {\n        this._mainHelperSearch = helper.search.bind(helper);\n        helper.search = function () {\n          var helperSearchFunction = algoliasearchHelper({\n            search: function search() {\n              return new Promise(function () {});\n            }\n          }, helper.state.index, helper.state);\n          helperSearchFunction.once('search', function (state) {\n            helper.overrideStateWithoutTriggeringChangeEvent(state);\n            _this4._mainHelperSearch();\n          });\n          _this4._searchFunction(helperSearchFunction);\n        };\n      }\n\n      this.helper = helper;\n      this._init(helper.state, this.helper);\n      this.helper.on('result', this._render.bind(this, this.helper));\n      this.helper.on('error', function (e) {\n        _this4.emit('error', e);\n      });\n\n      this._searchStalledTimer = null;\n      this._isSearchStalled = true;\n\n      this.helper.search();\n\n      this.helper.on('search', function () {\n        if (!_this4._isSearchStalled && !_this4._searchStalledTimer) {\n          _this4._searchStalledTimer = setTimeout(function () {\n            _this4._isSearchStalled = true;\n            _this4._render(_this4.helper, _this4.helper.lastResults, _this4.helper.lastResults._state);\n          }, _this4._stalledSearchDelay);\n        }\n      });\n\n      // track we started the search if we add more widgets,\n      // to init them directly after add\n      this.started = true;\n    }\n\n    /**\n     * Removes all widgets without triggering a search afterwards. This is an **EXPERIMENTAL** feature,\n     * if you find an issue with it, please\n     * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20dispose).\n     * @return {undefined} This method does not return anything\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.removeWidgets(this.widgets);\n    }\n  }, {\n    key: 'createURL',\n    value: function createURL(params) {\n      if (!this._createURL) {\n        throw new Error('You need to call start() before calling createURL()');\n      }\n      return this._createURL(this.helper.state.setQueryParameters(params));\n    }\n  }, {\n    key: '_render',\n    value: function _render(helper, results, state) {\n      var _this5 = this;\n\n      if (!this.helper.hasPendingRequests()) {\n        clearTimeout(this._searchStalledTimer);\n        this._searchStalledTimer = null;\n        this._isSearchStalled = false;\n      }\n\n      forEach(this.widgets, function (widget) {\n        if (!widget.render) {\n          return;\n        }\n        widget.render({\n          templatesConfig: _this5.templatesConfig,\n          results: results,\n          state: state,\n          helper: helper,\n          createURL: _this5._createAbsoluteURL,\n          instantSearchInstance: _this5,\n          searchMetadata: {\n            isSearchStalled: _this5._isSearchStalled\n          }\n        });\n      });\n\n      /**\n       * Render is triggered when the rendering of the widgets has been completed\n       * after a search.\n       * @event InstantSearch#render\n       */\n      this.emit('render');\n    }\n  }, {\n    key: '_init',\n    value: function _init(state, helper) {\n      var _this6 = this;\n\n      forEach(this.widgets, function (widget) {\n        if (widget.init) {\n          widget.init({\n            state: state,\n            helper: helper,\n            templatesConfig: _this6.templatesConfig,\n            createURL: _this6._createAbsoluteURL,\n            onHistoryChange: _this6._onHistoryChange,\n            instantSearchInstance: _this6\n          });\n        }\n      });\n    }\n  }]);\n\n  return InstantSearch;\n}(EventEmitter);\n\nexport function enhanceConfiguration(searchParametersFromUrl) {\n  return function (configuration, widgetDefinition) {\n    if (!widgetDefinition.getConfiguration) return configuration;\n\n    // Get the relevant partial configuration asked by the widget\n    var partialConfiguration = widgetDefinition.getConfiguration(configuration, searchParametersFromUrl);\n\n    var customizer = function customizer(a, b) {\n      // always create a unified array for facets refinements\n      if (Array.isArray(a)) {\n        return union(a, b);\n      }\n\n      // avoid mutating objects\n      if (isPlainObject(a)) {\n        return mergeWith({}, a, b, customizer);\n      }\n\n      return undefined;\n    };\n\n    return mergeWith({}, configuration, partialConfiguration, customizer);\n  };\n}\n\nexport default InstantSearch;"]},"metadata":{},"sourceType":"module"}