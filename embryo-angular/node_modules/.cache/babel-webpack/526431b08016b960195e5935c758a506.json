{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nimport find from 'lodash/find';\nimport isEqual from 'lodash/isEqual';\nimport { checkRendering, warn } from '../../lib/utils.js';\nvar usage = 'Usage:\\nvar customBreadcrumb = connectBreadcrumb(function renderFn(params, isFirstRendering) {\\n  // params = {\\n  //   createURL,\\n  //   items,\\n  //   refine,\\n  //   instantSearchInstance,\\n  //   widgetParams,\\n  // }\\n});\\nsearch.addWidget(\\n  customBreadcrumb({\\n    attributes,\\n    [ rootPath = null ],\\n    [ transformItems ]\\n  })\\n);\\nFull documentation available at https://community.algolia.com/instantsearch.js/v2/connectors/connectBreadcrumb.html\\n';\n/**\n * @typedef {Object} BreadcrumbItem\n * @property {string} name Name of the category or subcategory.\n * @property {string} value Value of breadcrumb item.\n */\n\n/**\n * @typedef {Object} CustomBreadcrumbWidgetOptions\n * @property {string[]} attributes Attributes to use to generate the hierarchy of the breadcrumb.\n * @property {string} [rootPath = null] Prefix path to use if the first level is not the root level.\n * @property {function(object[]):object[]} [transformItems] Function to transform the items passed to the templates.\n *\n * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n */\n\n/**\n * @typedef {Object} BreadcrumbRenderingOptions\n * @property {function(item.value): string} createURL Creates an url for the next state for a clicked item. The special value `null` is used for the `Home` (or root) item of the breadcrumb and will return an empty array.\n * @property {BreadcrumbItem[]} items Values to be rendered.\n * @property {function(item.value)} refine Sets the path of the hierarchical filter and triggers a new search.\n * @property {Object} widgetParams All original `CustomBreadcrumbWidgetOptions` forwarded to the `renderFn`.\n */\n\n/**\n * **Breadcrumb** connector provides the logic to build a custom widget\n * that will give the user the ability to see the current path in a hierarchical facet.\n *\n * This is commonly used in websites that have a large amount of content organized in a hierarchical manner (usually e-commerce websites).\n * @type {Connector}\n * @canonical https://www.algolia.com/doc/api-reference/widgets/breadcrumb/js/\n * @param {function(BreadcrumbRenderingOptions, boolean)} renderFn Rendering function for the custom **Breadcrumb* widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomBreadcrumbWidgetOptions)} Re-usable widget factory for a custom **Breadcrumb** widget.\n */\n\nexport default function connectBreadcrumb(renderFn, unmountFn) {\n  checkRendering(renderFn, usage);\n  return function () {\n    var widgetParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var attributes = widgetParams.attributes,\n        _widgetParams$separat = widgetParams.separator,\n        separator = _widgetParams$separat === undefined ? ' > ' : _widgetParams$separat,\n        _widgetParams$rootPat = widgetParams.rootPath,\n        rootPath = _widgetParams$rootPat === undefined ? null : _widgetParams$rootPat,\n        _widgetParams$transfo = widgetParams.transformItems,\n        transformItems = _widgetParams$transfo === undefined ? function (items) {\n      return items;\n    } : _widgetParams$transfo;\n\n    var _attributes = _slicedToArray(attributes, 1),\n        hierarchicalFacetName = _attributes[0];\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(usage);\n    }\n\n    return {\n      getConfiguration: function getConfiguration(currentConfiguration) {\n        if (currentConfiguration.hierarchicalFacets) {\n          var isFacetSet = find(currentConfiguration.hierarchicalFacets, function (_ref) {\n            var name = _ref.name;\n            return name === hierarchicalFacetName;\n          });\n\n          if (isFacetSet) {\n            if (!isEqual(isFacetSet.attributes, attributes) || isFacetSet.separator !== separator) {\n              warn('Using Breadcrumb & HierarchicalMenu on the same facet with different options. Adding that one will override the configuration of the HierarchicalMenu. Check your options.');\n            }\n\n            return {};\n          }\n        }\n\n        return {\n          hierarchicalFacets: [{\n            attributes: attributes,\n            name: hierarchicalFacetName,\n            separator: separator,\n            rootPath: rootPath\n          }]\n        };\n      },\n      init: function init(_ref2) {\n        var createURL = _ref2.createURL,\n            helper = _ref2.helper,\n            instantSearchInstance = _ref2.instantSearchInstance;\n\n        this._createURL = function (facetValue) {\n          if (!facetValue) {\n            var breadcrumb = helper.getHierarchicalFacetBreadcrumb(hierarchicalFacetName);\n\n            if (breadcrumb.length > 0) {\n              return createURL(helper.state.toggleRefinement(hierarchicalFacetName, breadcrumb[0]));\n            }\n          }\n\n          return createURL(helper.state.toggleRefinement(hierarchicalFacetName, facetValue));\n        };\n\n        this._refine = function (facetValue) {\n          if (!facetValue) {\n            var breadcrumb = helper.getHierarchicalFacetBreadcrumb(hierarchicalFacetName);\n\n            if (breadcrumb.length > 0) {\n              helper.toggleRefinement(hierarchicalFacetName, breadcrumb[0]).search();\n            }\n          } else {\n            helper.toggleRefinement(hierarchicalFacetName, facetValue).search();\n          }\n        };\n\n        renderFn({\n          createURL: this._createURL,\n          canRefine: false,\n          instantSearchInstance: instantSearchInstance,\n          items: [],\n          refine: this._refine,\n          widgetParams: widgetParams\n        }, true);\n      },\n      render: function render(_ref3) {\n        var instantSearchInstance = _ref3.instantSearchInstance,\n            results = _ref3.results,\n            state = _ref3.state;\n\n        var _state$hierarchicalFa = _slicedToArray(state.hierarchicalFacets, 1),\n            facetName = _state$hierarchicalFa[0].name;\n\n        var facetValues = results.getFacetValues(facetName);\n        var data = Array.isArray(facetValues.data) ? facetValues.data : [];\n        var items = transformItems(shiftItemsValues(prepareItems(data)));\n        renderFn({\n          canRefine: items.length > 0,\n          createURL: this._createURL,\n          instantSearchInstance: instantSearchInstance,\n          items: items,\n          refine: this._refine,\n          widgetParams: widgetParams\n        }, false);\n      },\n      dispose: function dispose() {\n        unmountFn();\n      }\n    };\n  };\n}\n\nfunction prepareItems(data) {\n  return data.reduce(function (result, currentItem) {\n    if (currentItem.isRefined) {\n      result.push({\n        name: currentItem.name,\n        value: currentItem.path\n      });\n\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array) {\n  return array.map(function (x, idx) {\n    return {\n      name: x.name,\n      value: idx + 1 === array.length ? null : array[idx + 1].value\n    };\n  });\n}","map":{"version":3,"sources":["/home/sow/Bureau/ProjetPerso/Gestion_School/embryo-angular/node_modules/instantsearch.js/es/connectors/breadcrumb/connectBreadcrumb.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","find","isEqual","checkRendering","warn","usage","connectBreadcrumb","renderFn","unmountFn","widgetParams","arguments","attributes","_widgetParams$separat","separator","_widgetParams$rootPat","rootPath","_widgetParams$transfo","transformItems","items","_attributes","hierarchicalFacetName","Error","getConfiguration","currentConfiguration","hierarchicalFacets","isFacetSet","_ref","name","init","_ref2","createURL","helper","instantSearchInstance","_createURL","facetValue","breadcrumb","getHierarchicalFacetBreadcrumb","state","toggleRefinement","_refine","search","canRefine","refine","render","_ref3","results","_state$hierarchicalFa","facetName","facetValues","getFacetValues","data","shiftItemsValues","prepareItems","dispose","reduce","result","currentItem","isRefined","path","concat","array","map","x","idx"],"mappings":"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","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nimport find from 'lodash/find';\nimport isEqual from 'lodash/isEqual';\nimport { checkRendering, warn } from '../../lib/utils.js';\n\nvar usage = 'Usage:\\nvar customBreadcrumb = connectBreadcrumb(function renderFn(params, isFirstRendering) {\\n  // params = {\\n  //   createURL,\\n  //   items,\\n  //   refine,\\n  //   instantSearchInstance,\\n  //   widgetParams,\\n  // }\\n});\\nsearch.addWidget(\\n  customBreadcrumb({\\n    attributes,\\n    [ rootPath = null ],\\n    [ transformItems ]\\n  })\\n);\\nFull documentation available at https://community.algolia.com/instantsearch.js/v2/connectors/connectBreadcrumb.html\\n';\n\n/**\n * @typedef {Object} BreadcrumbItem\n * @property {string} name Name of the category or subcategory.\n * @property {string} value Value of breadcrumb item.\n */\n\n/**\n * @typedef {Object} CustomBreadcrumbWidgetOptions\n * @property {string[]} attributes Attributes to use to generate the hierarchy of the breadcrumb.\n * @property {string} [rootPath = null] Prefix path to use if the first level is not the root level.\n * @property {function(object[]):object[]} [transformItems] Function to transform the items passed to the templates.\n *\n * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n */\n\n/**\n * @typedef {Object} BreadcrumbRenderingOptions\n * @property {function(item.value): string} createURL Creates an url for the next state for a clicked item. The special value `null` is used for the `Home` (or root) item of the breadcrumb and will return an empty array.\n * @property {BreadcrumbItem[]} items Values to be rendered.\n * @property {function(item.value)} refine Sets the path of the hierarchical filter and triggers a new search.\n * @property {Object} widgetParams All original `CustomBreadcrumbWidgetOptions` forwarded to the `renderFn`.\n */\n\n/**\n * **Breadcrumb** connector provides the logic to build a custom widget\n * that will give the user the ability to see the current path in a hierarchical facet.\n *\n * This is commonly used in websites that have a large amount of content organized in a hierarchical manner (usually e-commerce websites).\n * @type {Connector}\n * @canonical https://www.algolia.com/doc/api-reference/widgets/breadcrumb/js/\n * @param {function(BreadcrumbRenderingOptions, boolean)} renderFn Rendering function for the custom **Breadcrumb* widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomBreadcrumbWidgetOptions)} Re-usable widget factory for a custom **Breadcrumb** widget.\n */\nexport default function connectBreadcrumb(renderFn, unmountFn) {\n  checkRendering(renderFn, usage);\n  return function () {\n    var widgetParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var attributes = widgetParams.attributes,\n        _widgetParams$separat = widgetParams.separator,\n        separator = _widgetParams$separat === undefined ? ' > ' : _widgetParams$separat,\n        _widgetParams$rootPat = widgetParams.rootPath,\n        rootPath = _widgetParams$rootPat === undefined ? null : _widgetParams$rootPat,\n        _widgetParams$transfo = widgetParams.transformItems,\n        transformItems = _widgetParams$transfo === undefined ? function (items) {\n      return items;\n    } : _widgetParams$transfo;\n\n    var _attributes = _slicedToArray(attributes, 1),\n        hierarchicalFacetName = _attributes[0];\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(usage);\n    }\n\n    return {\n      getConfiguration: function getConfiguration(currentConfiguration) {\n        if (currentConfiguration.hierarchicalFacets) {\n          var isFacetSet = find(currentConfiguration.hierarchicalFacets, function (_ref) {\n            var name = _ref.name;\n            return name === hierarchicalFacetName;\n          });\n          if (isFacetSet) {\n            if (!isEqual(isFacetSet.attributes, attributes) || isFacetSet.separator !== separator) {\n              warn('Using Breadcrumb & HierarchicalMenu on the same facet with different options. Adding that one will override the configuration of the HierarchicalMenu. Check your options.');\n            }\n            return {};\n          }\n        }\n\n        return {\n          hierarchicalFacets: [{\n            attributes: attributes,\n            name: hierarchicalFacetName,\n            separator: separator,\n            rootPath: rootPath\n          }]\n        };\n      },\n\n      init: function init(_ref2) {\n        var createURL = _ref2.createURL,\n            helper = _ref2.helper,\n            instantSearchInstance = _ref2.instantSearchInstance;\n\n        this._createURL = function (facetValue) {\n          if (!facetValue) {\n            var breadcrumb = helper.getHierarchicalFacetBreadcrumb(hierarchicalFacetName);\n            if (breadcrumb.length > 0) {\n              return createURL(helper.state.toggleRefinement(hierarchicalFacetName, breadcrumb[0]));\n            }\n          }\n          return createURL(helper.state.toggleRefinement(hierarchicalFacetName, facetValue));\n        };\n\n        this._refine = function (facetValue) {\n          if (!facetValue) {\n            var breadcrumb = helper.getHierarchicalFacetBreadcrumb(hierarchicalFacetName);\n            if (breadcrumb.length > 0) {\n              helper.toggleRefinement(hierarchicalFacetName, breadcrumb[0]).search();\n            }\n          } else {\n            helper.toggleRefinement(hierarchicalFacetName, facetValue).search();\n          }\n        };\n\n        renderFn({\n          createURL: this._createURL,\n          canRefine: false,\n          instantSearchInstance: instantSearchInstance,\n          items: [],\n          refine: this._refine,\n          widgetParams: widgetParams\n        }, true);\n      },\n      render: function render(_ref3) {\n        var instantSearchInstance = _ref3.instantSearchInstance,\n            results = _ref3.results,\n            state = _ref3.state;\n\n        var _state$hierarchicalFa = _slicedToArray(state.hierarchicalFacets, 1),\n            facetName = _state$hierarchicalFa[0].name;\n\n        var facetValues = results.getFacetValues(facetName);\n        var data = Array.isArray(facetValues.data) ? facetValues.data : [];\n        var items = transformItems(shiftItemsValues(prepareItems(data)));\n\n        renderFn({\n          canRefine: items.length > 0,\n          createURL: this._createURL,\n          instantSearchInstance: instantSearchInstance,\n          items: items,\n          refine: this._refine,\n          widgetParams: widgetParams\n        }, false);\n      },\n      dispose: function dispose() {\n        unmountFn();\n      }\n    };\n  };\n}\n\nfunction prepareItems(data) {\n  return data.reduce(function (result, currentItem) {\n    if (currentItem.isRefined) {\n      result.push({\n        name: currentItem.name,\n        value: currentItem.path\n      });\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array) {\n  return array.map(function (x, idx) {\n    return {\n      name: x.name,\n      value: idx + 1 === array.length ? null : array[idx + 1].value\n    };\n  });\n}"]},"metadata":{},"sourceType":"module"}