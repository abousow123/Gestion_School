{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport urlHelper from 'algoliasearch-helper/src/url';\nimport isEqual from 'lodash/isEqual';\nvar AlgoliaSearchHelper = algoliasearchHelper.AlgoliaSearchHelper;\n/**\n * @typedef {object} UrlUtil\n * @property {string} character the character used in the url\n * @property {function} onpopstate add an event listener for the URL change\n * @property {function} pushState creates a new entry in the browser history\n * @property {function} readUrl reads the query string of the parameters\n */\n\n/**\n * Handles the legacy browsers\n * @type {UrlUtil}\n */\n\nvar hashUrlUtils = {\n  ignoreNextPopState: false,\n  character: '#',\n  onpopstate: function onpopstate(cb) {\n    var _this = this;\n\n    this._onHashChange = function (hash) {\n      if (_this.ignoreNextPopState) {\n        _this.ignoreNextPopState = false;\n        return;\n      }\n\n      cb(hash);\n    };\n\n    window.addEventListener('hashchange', this._onHashChange);\n  },\n  pushState: function pushState(qs) {\n    // hash change or location assign does trigger an hashchange event\n    // so every time we change it manually, we inform the code\n    // to ignore the next hashchange event\n    // see https://github.com/algolia/instantsearch.js/issues/2012\n    this.ignoreNextPopState = true;\n    window.location.assign(getFullURL(this.createURL(qs)));\n  },\n  createURL: function createURL(qs) {\n    return window.location.search + this.character + qs;\n  },\n  readUrl: function readUrl() {\n    return window.location.hash.slice(1);\n  },\n  dispose: function dispose() {\n    window.removeEventListener('hashchange', this._onHashChange);\n    window.location.assign(getFullURL(''));\n  }\n};\n/**\n * Handles the modern API\n * @type {UrlUtil}\n */\n\nvar modernUrlUtils = {\n  character: '?',\n  onpopstate: function onpopstate(cb) {\n    this._onPopState = function () {\n      return cb.apply(undefined, arguments);\n    };\n\n    window.addEventListener('popstate', this._onPopState);\n  },\n  pushState: function pushState(qs, _ref) {\n    var getHistoryState = _ref.getHistoryState;\n    window.history.pushState(getHistoryState(), '', getFullURL(this.createURL(qs)));\n  },\n  createURL: function createURL(qs) {\n    return this.character + qs + document.location.hash;\n  },\n  readUrl: function readUrl() {\n    return window.location.search.slice(1);\n  },\n  dispose: function dispose() {\n    window.removeEventListener('popstate', this._onPopState);\n    window.history.pushState(null, null, getFullURL(''));\n  }\n}; // we always push the full url to the url bar. Not a relative one.\n// So that we handle cases like using a <base href>, see\n// https://github.com/algolia/instantsearch.js/issues/790 for the original issue\n\nfunction getFullURL(relative) {\n  return getLocationOrigin() + window.location.pathname + relative;\n} // IE <= 11 has no location.origin or buggy\n\n\nfunction getLocationOrigin() {\n  // eslint-disable-next-line max-len\n  return window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n} // see InstantSearch.js file for urlSync options\n\n\nvar URLSync = function () {\n  function URLSync(urlUtils, options) {\n    _classCallCheck(this, URLSync);\n\n    this.urlUtils = urlUtils;\n    this.originalConfig = null;\n    this.mapping = options.mapping || {};\n\n    this.getHistoryState = options.getHistoryState || function () {\n      return null;\n    };\n\n    this.threshold = options.threshold || 700;\n    this.trackedParameters = options.trackedParameters || ['query', 'attribute:*', 'index', 'page', 'hitsPerPage'];\n    this.firstRender = true;\n    this.searchParametersFromUrl = AlgoliaSearchHelper.getConfigurationFromQueryString(this.urlUtils.readUrl(), {\n      mapping: this.mapping\n    });\n  }\n\n  _createClass(URLSync, [{\n    key: 'init',\n    value: function init(_ref2) {\n      var state = _ref2.state;\n      this.initState = state;\n    }\n  }, {\n    key: 'getConfiguration',\n    value: function getConfiguration(currentConfiguration) {\n      // we need to create a REAL helper to then get its state. Because some parameters\n      // like hierarchicalFacet.rootPath are then triggering a default refinement that would\n      // be not present if it was not going trough the SearchParameters constructor\n      this.originalConfig = algoliasearchHelper({}, currentConfiguration.index, currentConfiguration).state;\n      return this.searchParametersFromUrl;\n    }\n  }, {\n    key: 'render',\n    value: function render(_ref3) {\n      var _this2 = this;\n\n      var helper = _ref3.helper,\n          state = _ref3.state;\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.onHistoryChange(this.onPopState.bind(this, helper));\n        helper.on('change', function (s) {\n          return _this2.renderURLFromState(s);\n        });\n        var initStateQs = this.getQueryString(this.initState);\n        var stateQs = this.getQueryString(state);\n\n        if (initStateQs !== stateQs) {\n          // force update the URL, if the state has changed since the initial URL read\n          // We do this in order to make a URL update when there is search function\n          // that prevent the search of the initial rendering\n          // See: https://github.com/algolia/instantsearch.js/issues/2523#issuecomment-339356157\n          this.renderURLFromState(state);\n        }\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose(_ref4) {\n      var helper = _ref4.helper;\n      helper.removeListener('change', this.renderURLFromState);\n      this.urlUtils.dispose();\n    }\n  }, {\n    key: 'onPopState',\n    value: function onPopState(helper, fullState) {\n      clearTimeout(this.urlUpdateTimeout); // compare with helper.state\n\n      var partialHelperState = helper.getState(this.trackedParameters);\n\n      var fullHelperState = _extends({}, this.originalConfig, partialHelperState);\n\n      if (isEqual(fullHelperState, fullState)) return;\n      helper.overrideStateWithoutTriggeringChangeEvent(fullState).search();\n    }\n  }, {\n    key: 'renderURLFromState',\n    value: function renderURLFromState(state) {\n      var _this3 = this;\n\n      var qs = this.getQueryString(state);\n      clearTimeout(this.urlUpdateTimeout);\n      this.urlUpdateTimeout = setTimeout(function () {\n        _this3.urlUtils.pushState(qs, {\n          getHistoryState: _this3.getHistoryState\n        });\n      }, this.threshold);\n    }\n  }, {\n    key: 'getQueryString',\n    value: function getQueryString(state) {\n      var currentQueryString = this.urlUtils.readUrl();\n      var foreignConfig = AlgoliaSearchHelper.getForeignConfigurationInQueryString(currentQueryString, {\n        mapping: this.mapping\n      });\n      return urlHelper.getQueryStringFromState(state.filter(this.trackedParameters), {\n        moreAttributes: foreignConfig,\n        mapping: this.mapping,\n        safe: true\n      });\n    } // External APIs\n\n  }, {\n    key: 'createURL',\n    value: function createURL(state, _ref5) {\n      var absolute = _ref5.absolute;\n      var filteredState = state.filter(this.trackedParameters);\n      var relative = this.urlUtils.createURL(algoliasearchHelper.url.getQueryStringFromState(filteredState, {\n        mapping: this.mapping\n      }));\n      return absolute ? getFullURL(relative) : relative;\n    }\n  }, {\n    key: 'onHistoryChange',\n    value: function onHistoryChange(fn) {\n      var _this4 = this;\n\n      this.urlUtils.onpopstate(function () {\n        var qs = _this4.urlUtils.readUrl();\n\n        var partialState = AlgoliaSearchHelper.getConfigurationFromQueryString(qs, {\n          mapping: _this4.mapping\n        });\n\n        var fullState = _extends({}, _this4.originalConfig, partialState);\n\n        fn(fullState);\n      });\n    }\n  }]);\n\n  return URLSync;\n}();\n/**\n * Instantiate a url sync widget. This widget let you synchronize the search\n * parameters with the URL. It can operate with legacy API and hash or it can use\n * the modern history API. By default, it will use the modern API, but if you are\n * looking for compatibility with IE8 and IE9, then you should set 'useHash' to\n * true.\n * @param {object} options all the parameters to configure the URL synchronization. It\n * may contain the following keys :\n *  - threshold:number time in ms after which a new state is created in the browser\n * history. The default value is 700.\n *  - trackedParameters:string[] parameters that will be synchronized in the\n * URL. By default, it will track the query, all the refinable attributes (facets and numeric\n * filters), the index and the page.\n *  - useHash:boolean if set to true, the url will be hash based. Otherwise,\n * it'll use the query parameters using the modern history API.\n * @return {object} the widget instance\n */\n\n\nfunction urlSync() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var useHash = options.useHash || false;\n  var customUrlUtils = options.urlUtils;\n  var urlUtils = customUrlUtils || (useHash ? hashUrlUtils : modernUrlUtils);\n  return new URLSync(urlUtils, options);\n}\n\nexport default urlSync;","map":{"version":3,"sources":["/home/sow/Bureau/ProjetPerso/Gestion_School/embryo-angular/node_modules/instantsearch.js/es/lib/url-sync.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","algoliasearchHelper","urlHelper","isEqual","AlgoliaSearchHelper","hashUrlUtils","ignoreNextPopState","character","onpopstate","cb","_this","_onHashChange","hash","window","addEventListener","pushState","qs","location","getFullURL","createURL","search","readUrl","slice","dispose","removeEventListener","modernUrlUtils","_onPopState","apply","undefined","_ref","getHistoryState","history","document","relative","getLocationOrigin","pathname","protocol","hostname","port","URLSync","urlUtils","options","originalConfig","mapping","threshold","trackedParameters","firstRender","searchParametersFromUrl","getConfigurationFromQueryString","value","init","_ref2","state","initState","getConfiguration","currentConfiguration","index","render","_ref3","_this2","helper","onHistoryChange","onPopState","bind","on","s","renderURLFromState","initStateQs","getQueryString","stateQs","_ref4","removeListener","fullState","clearTimeout","urlUpdateTimeout","partialHelperState","getState","fullHelperState","overrideStateWithoutTriggeringChangeEvent","_this3","setTimeout","currentQueryString","foreignConfig","getForeignConfigurationInQueryString","getQueryStringFromState","filter","moreAttributes","safe","_ref5","absolute","filteredState","url","fn","_this4","partialState","urlSync","useHash","customUrlUtils"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport urlHelper from 'algoliasearch-helper/src/url';\nimport isEqual from 'lodash/isEqual';\n\nvar AlgoliaSearchHelper = algoliasearchHelper.AlgoliaSearchHelper;\n\n/**\n * @typedef {object} UrlUtil\n * @property {string} character the character used in the url\n * @property {function} onpopstate add an event listener for the URL change\n * @property {function} pushState creates a new entry in the browser history\n * @property {function} readUrl reads the query string of the parameters\n */\n\n/**\n * Handles the legacy browsers\n * @type {UrlUtil}\n */\nvar hashUrlUtils = {\n  ignoreNextPopState: false,\n  character: '#',\n  onpopstate: function onpopstate(cb) {\n    var _this = this;\n\n    this._onHashChange = function (hash) {\n      if (_this.ignoreNextPopState) {\n        _this.ignoreNextPopState = false;\n        return;\n      }\n\n      cb(hash);\n    };\n\n    window.addEventListener('hashchange', this._onHashChange);\n  },\n  pushState: function pushState(qs) {\n    // hash change or location assign does trigger an hashchange event\n    // so every time we change it manually, we inform the code\n    // to ignore the next hashchange event\n    // see https://github.com/algolia/instantsearch.js/issues/2012\n    this.ignoreNextPopState = true;\n    window.location.assign(getFullURL(this.createURL(qs)));\n  },\n  createURL: function createURL(qs) {\n    return window.location.search + this.character + qs;\n  },\n  readUrl: function readUrl() {\n    return window.location.hash.slice(1);\n  },\n  dispose: function dispose() {\n    window.removeEventListener('hashchange', this._onHashChange);\n    window.location.assign(getFullURL(''));\n  }\n};\n\n/**\n * Handles the modern API\n * @type {UrlUtil}\n */\nvar modernUrlUtils = {\n  character: '?',\n  onpopstate: function onpopstate(cb) {\n    this._onPopState = function () {\n      return cb.apply(undefined, arguments);\n    };\n    window.addEventListener('popstate', this._onPopState);\n  },\n  pushState: function pushState(qs, _ref) {\n    var getHistoryState = _ref.getHistoryState;\n\n    window.history.pushState(getHistoryState(), '', getFullURL(this.createURL(qs)));\n  },\n  createURL: function createURL(qs) {\n    return this.character + qs + document.location.hash;\n  },\n  readUrl: function readUrl() {\n    return window.location.search.slice(1);\n  },\n  dispose: function dispose() {\n    window.removeEventListener('popstate', this._onPopState);\n    window.history.pushState(null, null, getFullURL(''));\n  }\n};\n\n// we always push the full url to the url bar. Not a relative one.\n// So that we handle cases like using a <base href>, see\n// https://github.com/algolia/instantsearch.js/issues/790 for the original issue\nfunction getFullURL(relative) {\n  return getLocationOrigin() + window.location.pathname + relative;\n}\n\n// IE <= 11 has no location.origin or buggy\nfunction getLocationOrigin() {\n  // eslint-disable-next-line max-len\n  return window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n}\n\n// see InstantSearch.js file for urlSync options\n\nvar URLSync = function () {\n  function URLSync(urlUtils, options) {\n    _classCallCheck(this, URLSync);\n\n    this.urlUtils = urlUtils;\n    this.originalConfig = null;\n    this.mapping = options.mapping || {};\n    this.getHistoryState = options.getHistoryState || function () {\n      return null;\n    };\n    this.threshold = options.threshold || 700;\n    this.trackedParameters = options.trackedParameters || ['query', 'attribute:*', 'index', 'page', 'hitsPerPage'];\n    this.firstRender = true;\n\n    this.searchParametersFromUrl = AlgoliaSearchHelper.getConfigurationFromQueryString(this.urlUtils.readUrl(), { mapping: this.mapping });\n  }\n\n  _createClass(URLSync, [{\n    key: 'init',\n    value: function init(_ref2) {\n      var state = _ref2.state;\n\n      this.initState = state;\n    }\n  }, {\n    key: 'getConfiguration',\n    value: function getConfiguration(currentConfiguration) {\n      // we need to create a REAL helper to then get its state. Because some parameters\n      // like hierarchicalFacet.rootPath are then triggering a default refinement that would\n      // be not present if it was not going trough the SearchParameters constructor\n      this.originalConfig = algoliasearchHelper({}, currentConfiguration.index, currentConfiguration).state;\n      return this.searchParametersFromUrl;\n    }\n  }, {\n    key: 'render',\n    value: function render(_ref3) {\n      var _this2 = this;\n\n      var helper = _ref3.helper,\n          state = _ref3.state;\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.onHistoryChange(this.onPopState.bind(this, helper));\n        helper.on('change', function (s) {\n          return _this2.renderURLFromState(s);\n        });\n\n        var initStateQs = this.getQueryString(this.initState);\n        var stateQs = this.getQueryString(state);\n        if (initStateQs !== stateQs) {\n          // force update the URL, if the state has changed since the initial URL read\n          // We do this in order to make a URL update when there is search function\n          // that prevent the search of the initial rendering\n          // See: https://github.com/algolia/instantsearch.js/issues/2523#issuecomment-339356157\n          this.renderURLFromState(state);\n        }\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose(_ref4) {\n      var helper = _ref4.helper;\n\n      helper.removeListener('change', this.renderURLFromState);\n      this.urlUtils.dispose();\n    }\n  }, {\n    key: 'onPopState',\n    value: function onPopState(helper, fullState) {\n      clearTimeout(this.urlUpdateTimeout);\n      // compare with helper.state\n      var partialHelperState = helper.getState(this.trackedParameters);\n      var fullHelperState = _extends({}, this.originalConfig, partialHelperState);\n\n      if (isEqual(fullHelperState, fullState)) return;\n\n      helper.overrideStateWithoutTriggeringChangeEvent(fullState).search();\n    }\n  }, {\n    key: 'renderURLFromState',\n    value: function renderURLFromState(state) {\n      var _this3 = this;\n\n      var qs = this.getQueryString(state);\n      clearTimeout(this.urlUpdateTimeout);\n      this.urlUpdateTimeout = setTimeout(function () {\n        _this3.urlUtils.pushState(qs, { getHistoryState: _this3.getHistoryState });\n      }, this.threshold);\n    }\n  }, {\n    key: 'getQueryString',\n    value: function getQueryString(state) {\n      var currentQueryString = this.urlUtils.readUrl();\n      var foreignConfig = AlgoliaSearchHelper.getForeignConfigurationInQueryString(currentQueryString, { mapping: this.mapping });\n\n      return urlHelper.getQueryStringFromState(state.filter(this.trackedParameters), {\n        moreAttributes: foreignConfig,\n        mapping: this.mapping,\n        safe: true\n      });\n    }\n\n    // External APIs\n\n  }, {\n    key: 'createURL',\n    value: function createURL(state, _ref5) {\n      var absolute = _ref5.absolute;\n\n      var filteredState = state.filter(this.trackedParameters);\n\n      var relative = this.urlUtils.createURL(algoliasearchHelper.url.getQueryStringFromState(filteredState, {\n        mapping: this.mapping\n      }));\n\n      return absolute ? getFullURL(relative) : relative;\n    }\n  }, {\n    key: 'onHistoryChange',\n    value: function onHistoryChange(fn) {\n      var _this4 = this;\n\n      this.urlUtils.onpopstate(function () {\n        var qs = _this4.urlUtils.readUrl();\n        var partialState = AlgoliaSearchHelper.getConfigurationFromQueryString(qs, { mapping: _this4.mapping });\n        var fullState = _extends({}, _this4.originalConfig, partialState);\n        fn(fullState);\n      });\n    }\n  }]);\n\n  return URLSync;\n}();\n\n/**\n * Instantiate a url sync widget. This widget let you synchronize the search\n * parameters with the URL. It can operate with legacy API and hash or it can use\n * the modern history API. By default, it will use the modern API, but if you are\n * looking for compatibility with IE8 and IE9, then you should set 'useHash' to\n * true.\n * @param {object} options all the parameters to configure the URL synchronization. It\n * may contain the following keys :\n *  - threshold:number time in ms after which a new state is created in the browser\n * history. The default value is 700.\n *  - trackedParameters:string[] parameters that will be synchronized in the\n * URL. By default, it will track the query, all the refinable attributes (facets and numeric\n * filters), the index and the page.\n *  - useHash:boolean if set to true, the url will be hash based. Otherwise,\n * it'll use the query parameters using the modern history API.\n * @return {object} the widget instance\n */\n\n\nfunction urlSync() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var useHash = options.useHash || false;\n  var customUrlUtils = options.urlUtils;\n\n  var urlUtils = customUrlUtils || (useHash ? hashUrlUtils : modernUrlUtils);\n\n  return new URLSync(urlUtils, options);\n}\n\nexport default urlSync;"]},"metadata":{},"sourceType":"module"}