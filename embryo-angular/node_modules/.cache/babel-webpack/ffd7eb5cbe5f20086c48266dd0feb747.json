{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport isEqual from 'lodash/isEqual';\n\nvar RoutingManager = function () {\n  function RoutingManager() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        instantSearchInstance = _ref.instantSearchInstance,\n        router = _ref.router,\n        stateMapping = _ref.stateMapping;\n\n    _classCallCheck(this, RoutingManager);\n\n    this.originalConfig = null;\n    this.firstRender = true;\n    this.router = router;\n    this.stateMapping = stateMapping;\n    this.instantSearchInstance = instantSearchInstance;\n    this.originalUIState = this.stateMapping.routeToState(this.router.read());\n  }\n\n  _createClass(RoutingManager, [{\n    key: 'init',\n    value: function init(_ref2) {\n      var state = _ref2.state; // store the initial state from the storage\n      // so that we can compare it with the state after the first render\n      // in case the searchFunction has modifyied it.\n\n      this.initState = this.getAllUIStates({\n        searchParameters: state\n      });\n    }\n  }, {\n    key: 'getConfiguration',\n    value: function getConfiguration(currentConfiguration) {\n      // we need to create a REAL helper to then get its state. Because some parameters\n      // like hierarchicalFacet.rootPath are then triggering a default refinement that would\n      // be not present if it was not going trough the SearchParameters constructor\n      this.originalConfig = algoliasearchHelper({}, currentConfiguration.index, currentConfiguration).state; // The content of getAllSearchParameters is destructured to return a plain object\n\n      return _extends({}, this.getAllSearchParameters({\n        currentSearchParameters: this.originalConfig,\n        uiState: this.originalUIState\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render(_ref3) {\n      var state = _ref3.state;\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.setupRouting(state);\n      }\n    }\n  }, {\n    key: 'setupRouting',\n    value: function setupRouting(state) {\n      var _this = this;\n\n      var helper = this.instantSearchInstance.helper;\n      this.router.onUpdate(function (route) {\n        var uiState = _this.stateMapping.routeToState(route);\n\n        var currentUIState = _this.getAllUIStates({\n          searchParameters: helper.state\n        });\n\n        if (isEqual(uiState, currentUIState)) return;\n\n        var searchParameters = _this.getAllSearchParameters({\n          currentSearchParameters: state,\n          instantSearchInstance: _this.instantSearchInstance,\n          uiState: uiState\n        });\n\n        var fullHelperState = _extends({}, _this.originalConfig, searchParameters);\n\n        if (isEqual(fullHelperState, searchParameters)) return;\n        helper.overrideStateWithoutTriggeringChangeEvent(searchParameters).search();\n      });\n\n      this.renderURLFromState = function (searchParameters) {\n        var uiState = _this.getAllUIStates({\n          searchParameters: searchParameters\n        });\n\n        var route = _this.stateMapping.stateToRoute(uiState);\n\n        _this.router.write(route);\n      };\n\n      helper.on('change', this.renderURLFromState); // Compare initial state and post first render state, in order\n      // to see if the query has been changed by a searchFunction\n\n      var firstRenderState = this.getAllUIStates({\n        searchParameters: state\n      });\n\n      if (!isEqual(this.initState, firstRenderState)) {\n        // force update the URL, if the state has changed since the initial URL read\n        // We do this in order to make a URL update when there is search function\n        // that prevent the search of the initial rendering\n        // See: https://github.com/algolia/instantsearch.js/issues/2523#issuecomment-339356157\n        var route = this.stateMapping.stateToRoute(firstRenderState);\n        this.router.write(route);\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.renderURLFromState) {\n        this.instantSearchInstance.helper.removeListener('change', this.renderURLFromState);\n      }\n\n      this.router.dispose();\n    }\n  }, {\n    key: 'getAllSearchParameters',\n    value: function getAllSearchParameters(_ref4) {\n      var currentSearchParameters = _ref4.currentSearchParameters,\n          uiState = _ref4.uiState;\n      var widgets = this.instantSearchInstance.widgets;\n      var searchParameters = widgets.reduce(function (sp, w) {\n        if (!w.getWidgetSearchParameters) return sp;\n        return w.getWidgetSearchParameters(sp, {\n          uiState: uiState\n        });\n      }, currentSearchParameters);\n      return searchParameters;\n    }\n  }, {\n    key: 'getAllUIStates',\n    value: function getAllUIStates(_ref5) {\n      var searchParameters = _ref5.searchParameters;\n      var _instantSearchInstanc = this.instantSearchInstance,\n          widgets = _instantSearchInstanc.widgets,\n          helper = _instantSearchInstanc.helper;\n      var uiState = widgets.filter(function (w) {\n        return Boolean(w.getWidgetState);\n      }).reduce(function (u, w) {\n        return w.getWidgetState(u, {\n          helper: helper,\n          searchParameters: searchParameters\n        });\n      }, {});\n      return uiState;\n    } // External API's\n\n  }, {\n    key: 'createURL',\n    value: function createURL(state) {\n      var uiState = this.getAllUIStates({\n        searchParameters: state\n      });\n      var route = this.stateMapping.stateToRoute(uiState);\n      return this.router.createURL(route);\n    }\n  }, {\n    key: 'onHistoryChange',\n    value: function onHistoryChange(fn) {\n      var _this2 = this;\n\n      var helper = this.instantSearchInstance.helper;\n      this.router.onUpdate(function (route) {\n        var uiState = _this2.stateMapping.routeToState(route);\n\n        var currentUIState = _this2.getAllUIStates({\n          searchParameters: helper.state\n        });\n\n        if (isEqual(uiState, currentUIState)) return;\n\n        var searchParameters = _this2.getAllSearchParameters({\n          currentSearchParameters: helper.state,\n          instantSearchInstance: _this2.instantSearchInstance,\n          uiState: uiState\n        });\n\n        var fullSearchParameters = _extends({}, _this2.originalConfig, searchParameters);\n\n        fn(fullSearchParameters);\n      });\n      return;\n    }\n  }]);\n\n  return RoutingManager;\n}();\n\nexport default RoutingManager;","map":{"version":3,"sources":["/home/sow/Bureau/ProjetPerso/Gestion_School/embryo-angular/node_modules/instantsearch.js/es/lib/RoutingManager.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","algoliasearchHelper","isEqual","RoutingManager","_ref","undefined","instantSearchInstance","router","stateMapping","originalConfig","firstRender","originalUIState","routeToState","read","value","init","_ref2","state","initState","getAllUIStates","searchParameters","getConfiguration","currentConfiguration","index","getAllSearchParameters","currentSearchParameters","uiState","render","_ref3","setupRouting","_this","helper","onUpdate","route","currentUIState","fullHelperState","overrideStateWithoutTriggeringChangeEvent","search","renderURLFromState","stateToRoute","write","on","firstRenderState","dispose","removeListener","_ref4","widgets","reduce","sp","w","getWidgetSearchParameters","_ref5","_instantSearchInstanc","filter","Boolean","getWidgetState","u","createURL","onHistoryChange","fn","_this2","fullSearchParameters"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport isEqual from 'lodash/isEqual';\n\nvar RoutingManager = function () {\n  function RoutingManager() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        instantSearchInstance = _ref.instantSearchInstance,\n        router = _ref.router,\n        stateMapping = _ref.stateMapping;\n\n    _classCallCheck(this, RoutingManager);\n\n    this.originalConfig = null;\n    this.firstRender = true;\n\n    this.router = router;\n    this.stateMapping = stateMapping;\n    this.instantSearchInstance = instantSearchInstance;\n\n    this.originalUIState = this.stateMapping.routeToState(this.router.read());\n  }\n\n  _createClass(RoutingManager, [{\n    key: 'init',\n    value: function init(_ref2) {\n      var state = _ref2.state;\n\n      // store the initial state from the storage\n      // so that we can compare it with the state after the first render\n      // in case the searchFunction has modifyied it.\n      this.initState = this.getAllUIStates({\n        searchParameters: state\n      });\n    }\n  }, {\n    key: 'getConfiguration',\n    value: function getConfiguration(currentConfiguration) {\n      // we need to create a REAL helper to then get its state. Because some parameters\n      // like hierarchicalFacet.rootPath are then triggering a default refinement that would\n      // be not present if it was not going trough the SearchParameters constructor\n      this.originalConfig = algoliasearchHelper({}, currentConfiguration.index, currentConfiguration).state;\n      // The content of getAllSearchParameters is destructured to return a plain object\n      return _extends({}, this.getAllSearchParameters({\n        currentSearchParameters: this.originalConfig,\n        uiState: this.originalUIState\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render(_ref3) {\n      var state = _ref3.state;\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.setupRouting(state);\n      }\n    }\n  }, {\n    key: 'setupRouting',\n    value: function setupRouting(state) {\n      var _this = this;\n\n      var helper = this.instantSearchInstance.helper;\n\n      this.router.onUpdate(function (route) {\n        var uiState = _this.stateMapping.routeToState(route);\n        var currentUIState = _this.getAllUIStates({\n          searchParameters: helper.state\n        });\n\n        if (isEqual(uiState, currentUIState)) return;\n\n        var searchParameters = _this.getAllSearchParameters({\n          currentSearchParameters: state,\n          instantSearchInstance: _this.instantSearchInstance,\n          uiState: uiState\n        });\n\n        var fullHelperState = _extends({}, _this.originalConfig, searchParameters);\n\n        if (isEqual(fullHelperState, searchParameters)) return;\n\n        helper.overrideStateWithoutTriggeringChangeEvent(searchParameters).search();\n      });\n\n      this.renderURLFromState = function (searchParameters) {\n        var uiState = _this.getAllUIStates({\n          searchParameters: searchParameters\n        });\n        var route = _this.stateMapping.stateToRoute(uiState);\n        _this.router.write(route);\n      };\n      helper.on('change', this.renderURLFromState);\n\n      // Compare initial state and post first render state, in order\n      // to see if the query has been changed by a searchFunction\n\n      var firstRenderState = this.getAllUIStates({\n        searchParameters: state\n      });\n\n      if (!isEqual(this.initState, firstRenderState)) {\n        // force update the URL, if the state has changed since the initial URL read\n        // We do this in order to make a URL update when there is search function\n        // that prevent the search of the initial rendering\n        // See: https://github.com/algolia/instantsearch.js/issues/2523#issuecomment-339356157\n        var route = this.stateMapping.stateToRoute(firstRenderState);\n        this.router.write(route);\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.renderURLFromState) {\n        this.instantSearchInstance.helper.removeListener('change', this.renderURLFromState);\n      }\n      this.router.dispose();\n    }\n  }, {\n    key: 'getAllSearchParameters',\n    value: function getAllSearchParameters(_ref4) {\n      var currentSearchParameters = _ref4.currentSearchParameters,\n          uiState = _ref4.uiState;\n      var widgets = this.instantSearchInstance.widgets;\n\n      var searchParameters = widgets.reduce(function (sp, w) {\n        if (!w.getWidgetSearchParameters) return sp;\n        return w.getWidgetSearchParameters(sp, {\n          uiState: uiState\n        });\n      }, currentSearchParameters);\n      return searchParameters;\n    }\n  }, {\n    key: 'getAllUIStates',\n    value: function getAllUIStates(_ref5) {\n      var searchParameters = _ref5.searchParameters;\n      var _instantSearchInstanc = this.instantSearchInstance,\n          widgets = _instantSearchInstanc.widgets,\n          helper = _instantSearchInstanc.helper;\n\n      var uiState = widgets.filter(function (w) {\n        return Boolean(w.getWidgetState);\n      }).reduce(function (u, w) {\n        return w.getWidgetState(u, {\n          helper: helper,\n          searchParameters: searchParameters\n        });\n      }, {});\n\n      return uiState;\n    }\n\n    // External API's\n\n  }, {\n    key: 'createURL',\n    value: function createURL(state) {\n      var uiState = this.getAllUIStates({\n        searchParameters: state\n      });\n      var route = this.stateMapping.stateToRoute(uiState);\n      return this.router.createURL(route);\n    }\n  }, {\n    key: 'onHistoryChange',\n    value: function onHistoryChange(fn) {\n      var _this2 = this;\n\n      var helper = this.instantSearchInstance.helper;\n\n      this.router.onUpdate(function (route) {\n        var uiState = _this2.stateMapping.routeToState(route);\n        var currentUIState = _this2.getAllUIStates({\n          searchParameters: helper.state\n        });\n\n        if (isEqual(uiState, currentUIState)) return;\n\n        var searchParameters = _this2.getAllSearchParameters({\n          currentSearchParameters: helper.state,\n          instantSearchInstance: _this2.instantSearchInstance,\n          uiState: uiState\n        });\n\n        var fullSearchParameters = _extends({}, _this2.originalConfig, searchParameters);\n\n        fn(fullSearchParameters);\n      });\n      return;\n    }\n  }]);\n\n  return RoutingManager;\n}();\n\nexport default RoutingManager;"]},"metadata":{},"sourceType":"module"}