import { Input, Component, Output, EventEmitter, Inject, PLATFORM_ID, VERSION, forwardRef, NgModule, ContentChild, TemplateRef, ViewChild, KeyValueDiffers } from '@angular/core';
import { isPlatformBrowser, CommonModule } from '@angular/common';
import * as algoliasearchProxy from 'algoliasearch/lite';
import algoliasearchProxy__default, {  } from 'algoliasearch/lite';
import instantsearch from 'instantsearch.js/es';
import { connectBreadcrumb, connectClearAll, connectCurrentRefinedValues, connectHierarchicalMenu, connectHitsPerPage, connectHits, connectInfiniteHits, connectMenu, connectNumericRefinementList, connectNumericSelector, connectPagination, connectRange, connectRefinementList, connectSearchBox, connectSortBySelector, connectStarRating, connectStats, connectToggle, connectConfigure } from 'instantsearch.js/es/connectors';
import { __rest } from 'tslib';
import { create } from 'nouislider';
import * as algoliasearchProxy$1 from 'algoliasearch/index';
import algoliasearchProxy__default$1, {  } from 'algoliasearch/index';
import * as encodeProxy from 'querystring-es3/encode';
import encodeProxy__default, {  } from 'querystring-es3/encode';
import { AlgoliaSearchHelper } from 'algoliasearch-helper';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} widgetName
 * @return {?}
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["*"];
function NgAisBreadcrumb_div_1_li_4_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵtext(1, "\n            >\n          ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("separator"));
} }
function NgAisBreadcrumb_div_1_li_4_a_4_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 7);
    ɵngcc0.ɵɵlistener("click", function NgAisBreadcrumb_div_1_li_4_a_4_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const item_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.handleClick($event, item_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r4.cx("link"));
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r4.state.createURL(item_r2.value), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n            ", item_r2.name, "\n          ");
} }
function NgAisBreadcrumb_div_1_li_4_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n            ", item_r2.name, "\n          ");
} }
function NgAisBreadcrumb_div_1_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisBreadcrumb_div_1_li_4_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const item_r2 = ctx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.handleClick($event, item_r2); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵtemplate(2, NgAisBreadcrumb_div_1_li_4_span_2_Template, 2, 2, "span", 3);
    ɵngcc0.ɵɵtext(3, "\n          ");
    ɵngcc0.ɵɵtemplate(4, NgAisBreadcrumb_div_1_li_4_a_4_Template, 2, 4, "a", 4);
    ɵngcc0.ɵɵtext(5, "\n\n          ");
    ɵngcc0.ɵɵtemplate(6, NgAisBreadcrumb_div_1_li_4_span_6_Template, 2, 1, "span", 5);
    ɵngcc0.ɵɵtext(7, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("item", item_r2.isLast ? "selected" : undefined));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", item_r2.separator);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !item_r2.isLast);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", item_r2.isLast);
} }
function NgAisBreadcrumb_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵtemplate(4, NgAisBreadcrumb_div_1_li_4_Template, 8, 5, "li", 1);
    ɵngcc0.ɵɵtext(5, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
} }
function NgAisClearRefinements_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementStart(2, "button", 1);
    ɵngcc0.ɵɵlistener("click", function NgAisClearRefinements_div_1_Template_button_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.handleClick($event); });
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("button") + (!ctx_r0.state.hasRefinements ? " " + ctx_r0.cx("button", "disabled") : ""));
    ɵngcc0.ɵɵproperty("disabled", !ctx_r0.state.hasRefinements);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r0.buttonLabel, "\n      ");
} }
function NgAisCurrentRefinements_div_1_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisCurrentRefinements_div_1_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.handleClearAllClick($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("reset"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r1.clearRefinementsLabel, "\n      ");
} }
function NgAisCurrentRefinements_div_1_ul_4_span_7_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "button", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisCurrentRefinements_div_1_ul_4_span_7_Template_button_click_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const item_r8 = ctx.$implicit; const ctx_r9 = ɵngcc0.ɵɵnextContext(3); return ctx_r9.handleClick($event, item_r8); });
    ɵngcc0.ɵɵtext(6, "\u2715");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n          ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r8 = ctx.$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r7.cx("category"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r7.cx("categoryLabel"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r8.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r7.cx("delete"));
} }
function NgAisCurrentRefinements_div_1_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul");
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵelementStart(2, "li");
    ɵngcc0.ɵɵtext(3, "\n          ");
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n\n          ");
    ɵngcc0.ɵɵtemplate(7, NgAisCurrentRefinements_div_1_ul_4_span_7_Template, 8, 7, "span", 2);
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(9, "\n      ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const refinement_r6 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("item"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", refinement_r6.label, ":");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", refinement_r6.items);
} }
function NgAisCurrentRefinements_div_1_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisCurrentRefinements_div_1_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.handleClearAllClick($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("reset"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r3.clearRefinementsLabel, "\n      ");
} }
function NgAisCurrentRefinements_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵtemplate(2, NgAisCurrentRefinements_div_1_button_2_Template, 2, 3, "button", 1);
    ɵngcc0.ɵɵtext(3, "\n\n      ");
    ɵngcc0.ɵɵtemplate(4, NgAisCurrentRefinements_div_1_ul_4_Template, 10, 8, "ul", 2);
    ɵngcc0.ɵɵtext(5, "\n\n      ");
    ɵngcc0.ɵɵtemplate(6, NgAisCurrentRefinements_div_1_button_6_Template, 2, 3, "button", 1);
    ɵngcc0.ɵɵtext(7, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.clearRefinements === "before" || ctx_r0.clearRefinements === true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.refinements);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.clearRefinements === "after");
} }
function NgAisHierarchicalMenu_div_1_ais_hierarchical_menu_item_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ais-hierarchical-menu-item", 2);
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("item", item_r2)("createURL", ctx_r1.state.createURL)("refine", ctx_r1.state.refine);
} }
function NgAisHierarchicalMenu_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵtemplate(4, NgAisHierarchicalMenu_div_1_ais_hierarchical_menu_item_4_Template, 2, 3, "ais-hierarchical-menu-item", 1);
    ɵngcc0.ɵɵtext(5, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list") + " " + ctx_r0.cx("list", "lvl0"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
} }
function NgAisHierarchicalMenuItem_ul_12_ais_hierarchical_menu_item_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ais-hierarchical-menu-item", 4);
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("item", child_r2)("createURL", ctx_r1.createURL)("refine", ctx_r1.refine)("lvl", ctx_r1.lvl + 1);
} }
function NgAisHierarchicalMenuItem_ul_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul");
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵtemplate(2, NgAisHierarchicalMenuItem_ul_12_ais_hierarchical_menu_item_2_Template, 2, 4, "ais-hierarchical-menu-item", 3);
    ɵngcc0.ɵɵtext(3, "\n      ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.getListClass(ctx_r0.item));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.item.data);
} }
function NgAisHitsPerPage_div_1_option_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("option"));
    ɵngcc0.ɵɵproperty("value", item_r2.value)("selected", item_r2.isRefined);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n          ", item_r2.label, "\n        ");
} }
function NgAisHitsPerPage_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementStart(2, "select", 1);
    ɵngcc0.ɵɵlistener("change", function NgAisHitsPerPage_div_1_Template_select_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.state.refine($event.target.value); });
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵtemplate(4, NgAisHitsPerPage_div_1_option_4_Template, 2, 5, "option", 2);
    ɵngcc0.ɵɵtext(5, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("select"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisHits_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisHits_div_6_li_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "ais-highlight", 3);
    ɵngcc0.ɵɵtext(3, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n          ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const hit_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("item"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("hit", hit_r3);
} }
function NgAisHits_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtext(3, "\n          ");
    ɵngcc0.ɵɵtemplate(4, NgAisHits_div_6_li_4_Template, 5, 3, "li", 2);
    ɵngcc0.ɵɵtext(5, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n      ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.state.hits);
} }
function NgAisInfiniteHits_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NgAisInfiniteHits_div_6_li_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "ais-highlight", 4);
    ɵngcc0.ɵɵtext(3, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n          ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const hit_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("item"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("hit", hit_r4);
} }
function NgAisInfiniteHits_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtext(3, "\n          ");
    ɵngcc0.ɵɵtemplate(4, NgAisInfiniteHits_div_6_li_4_Template, 5, 3, "li", 3);
    ɵngcc0.ɵɵtext(5, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n      ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.state.hits);
} }
function NgAisInfiniteHits_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function NgAisInfiniteHits_button_8_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.showMore($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("showMore"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.state.isLastPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r2.showMoreLabel, "\n      ");
} }
function NgAisMenu_div_1_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisMenu_div_1_li_4_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const item_r3 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.handleClick($event, item_r3.value); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 4);
    ɵngcc0.ɵɵlistener("click", function NgAisMenu_div_1_li_4_Template_a_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const item_r3 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.handleClick($event, item_r3.value); });
    ɵngcc0.ɵɵtext(3, "\n            ");
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n            ");
    ɵngcc0.ɵɵelementStart(7, "span");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(9, "\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(10, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r3 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.getItemClass(item_r3));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("link"));
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r1.state.createURL(item_r3.value), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r3.label);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("count"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r3.count);
} }
function NgAisMenu_div_1_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function NgAisMenu_div_1_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.state.toggleShowMore(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.showMoreClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r2.state.isShowingMore ? ctx_r2.showLessLabel : ctx_r2.showMoreLabel, "\n      ");
} }
function NgAisMenu_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵtemplate(4, NgAisMenu_div_1_li_4_Template, 11, 11, "li", 1);
    ɵngcc0.ɵɵtext(5, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n\n      ");
    ɵngcc0.ɵɵtemplate(7, NgAisMenu_div_1_button_7_Template, 2, 3, "button", 2);
    ɵngcc0.ɵɵtext(8, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showMoreLimit && ctx_r0.state.canToggleShowMore);
} }
function NgAisNumericMenu_div_1_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisNumericMenu_div_1_li_4_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const item_r2 = ctx.$implicit; const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.refine($event, item_r2); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "label");
    ɵngcc0.ɵɵtext(3, "\n            ");
    ɵngcc0.ɵɵelement(4, "input", 3);
    ɵngcc0.ɵɵtext(5, "\n            ");
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(9, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.getItemClass(item_r2));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("radio"));
    ɵngcc0.ɵɵproperty("checked", item_r2.isRefined);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("labelText"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r2.label);
} }
function NgAisNumericMenu_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementStart(2, "ul");
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵtemplate(4, NgAisNumericMenu_div_1_li_4_Template, 10, 10, "li", 1);
    ɵngcc0.ɵɵtext(5, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisNumericSelector_option_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("option"));
    ɵngcc0.ɵɵproperty("value", item_r1.value)("selected", item_r1.value === ctx_r0.state.currentRefinement);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n          ", item_r1.label, "\n        ");
} }
function NgAisPagination_li_5_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_5_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.refine($event, 0); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵtext(3, "\n            \u2039\u2039\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("item") + " " + ctx_r0.cx("item", "firstPage") + (ctx_r0.state.currentRefinement === 0 ? " " + ctx_r0.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r0.state.createURL(0), ɵngcc0.ɵɵsanitizeUrl);
} }
function NgAisPagination_li_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_7_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.refine($event, ctx_r7.state.currentRefinement - 1); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵtext(3, "\n            \u2039\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("item") + " " + ctx_r1.cx("item", "previousPage") + (ctx_r1.state.currentRefinement === 0 ? " " + ctx_r1.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r1.state.createURL(ctx_r1.state.currentRefinement - 1), ɵngcc0.ɵɵsanitizeUrl);
} }
function NgAisPagination_li_9_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_9_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const page_r9 = ctx.$implicit; const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.refine($event, page_r9); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r9 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("item") + " " + ctx_r2.cx("item", "page") + (ctx_r2.state.currentRefinement === page_r9 ? " " + ctx_r2.cx("item", "selected") : ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r2.state.createURL(page_r9), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n            ", page_r9 + 1, "\n          ");
} }
function NgAisPagination_li_11_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_11_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.refine($event, ctx_r12.state.currentRefinement + 1); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵtext(3, "\n            \u203A\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("item") + " " + ctx_r3.cx("item", "nextPage") + (ctx_r3.state.currentRefinement + 1 === ctx_r3.state.nbPages ? " " + ctx_r3.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r3.state.createURL(ctx_r3.state.currentRefinement + 1), ɵngcc0.ɵɵsanitizeUrl);
} }
function NgAisPagination_li_13_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵlistener("click", function NgAisPagination_li_13_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.refine($event, ctx_r14.state.nbPages - 1); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵtext(3, "\n            \u203A\u203A\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r4.cx("item") + " " + ctx_r4.cx("item", "lastPage") + (ctx_r4.state.currentRefinement + 1 === ctx_r4.state.nbPages ? " " + ctx_r4.cx("item", "disabled") : ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r4.cx("link"));
    ɵngcc0.ɵɵproperty("href", ctx_r4.state.createURL(ctx_r4.state.nbPages - 1), ɵngcc0.ɵɵsanitizeUrl);
} }
const _c1 = ["sliderContainer"];
function NgAisRefinementList_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n        ");
    ɵngcc0.ɵɵelementStart(2, "ais-facets-search", 3);
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n      ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("searchBox"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("search", ctx_r1.state.searchForItems)("searchPlaceholder", ctx_r1.searchPlaceholder);
} }
function NgAisRefinementList_div_1_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 4);
    ɵngcc0.ɵɵlistener("click", function NgAisRefinementList_div_1_li_6_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const item_r4 = ctx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.refine($event, item_r4); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "label");
    ɵngcc0.ɵɵtext(3, "\n            ");
    ɵngcc0.ɵɵelement(4, "input", 5);
    ɵngcc0.ɵɵtext(5, "\n            ");
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7, "\n              ");
    ɵngcc0.ɵɵelement(8, "ais-highlight", 6);
    ɵngcc0.ɵɵtext(9, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(10, "\n            ");
    ɵngcc0.ɵɵelementStart(11, "span");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(14, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r4 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.getItemClass(item_r4));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("label"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("checkbox"));
    ɵngcc0.ɵɵpropertyInterpolate("value", item_r4.value);
    ɵngcc0.ɵɵproperty("checked", item_r4.isRefined);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("labelText"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("hit", item_r4);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassMap(ctx_r2.cx("count"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r4.count);
} }
function NgAisRefinementList_div_1_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 4);
    ɵngcc0.ɵɵlistener("click", function NgAisRefinementList_div_1_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.state.toggleShowMore(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.cx("showMore"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r3.state.isShowingMore ? ctx_r3.showLessLabel : ctx_r3.showMoreLabel, "\n      ");
} }
function NgAisRefinementList_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵtemplate(2, NgAisRefinementList_div_1_div_2_Template, 5, 4, "div", 0);
    ɵngcc0.ɵɵtext(3, "\n\n      ");
    ɵngcc0.ɵɵelementStart(4, "ul");
    ɵngcc0.ɵɵtext(5, "\n        ");
    ɵngcc0.ɵɵtemplate(6, NgAisRefinementList_div_1_li_6_Template, 15, 14, "li", 1);
    ɵngcc0.ɵɵtext(7, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n\n      ");
    ɵngcc0.ɵɵtemplate(9, NgAisRefinementList_div_1_button_9_Template, 2, 3, "button", 2);
    ɵngcc0.ɵɵtext(10, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.searchable);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showMoreLimit && ctx_r0.state.canToggleShowMore);
} }
const _c2 = ["searchBox"];
function NgAisSortBy_option_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("option"));
    ɵngcc0.ɵɵproperty("value", item_r1.value)("selected", item_r1.value === ctx_r0.state.currentRefinement);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n          ", item_r1.label, "\n        ");
} }
function NgAisRatingMenu_div_1_li_17__svg_svg_4__svg_use_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "use", 14);
    ɵngcc0.ɵɵtext(1, "\n              ");
    ɵngcc0.ɵɵelementEnd();
} }
function NgAisRatingMenu_div_1_li_17__svg_svg_4__svg_use_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "use", 15);
    ɵngcc0.ɵɵtext(1, "\n              ");
    ɵngcc0.ɵɵelementEnd();
} }
function NgAisRatingMenu_div_1_li_17__svg_svg_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 11);
    ɵngcc0.ɵɵtext(1, "\n              ");
    ɵngcc0.ɵɵtemplate(2, NgAisRatingMenu_div_1_li_17__svg_svg_4__svg_use_2_Template, 2, 0, "use", 12);
    ɵngcc0.ɵɵtext(3, "\n\n              ");
    ɵngcc0.ɵɵtemplate(4, NgAisRatingMenu_div_1_li_17__svg_svg_4__svg_use_4_Template, 2, 0, "use", 13);
    ɵngcc0.ɵɵtext(5, "\n            ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const star_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.cx("starIcon"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", star_r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !star_r4);
} }
function NgAisRatingMenu_div_1_li_17_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function NgAisRatingMenu_div_1_li_17_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const item_r2 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.handleClick($event, item_r2.value); });
    ɵngcc0.ɵɵtext(1, "\n          ");
    ɵngcc0.ɵɵelementStart(2, "a", 8);
    ɵngcc0.ɵɵlistener("click", function NgAisRatingMenu_div_1_li_17_Template_a_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const item_r2 = ctx.$implicit; const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.handleClick($event, item_r2.value); });
    ɵngcc0.ɵɵtext(3, "\n            ");
    ɵngcc0.ɵɵtemplate(4, NgAisRatingMenu_div_1_li_17__svg_svg_4_Template, 6, 3, "svg", 9);
    ɵngcc0.ɵɵtext(5, "\n\n            ");
    ɵngcc0.ɵɵelementStart(6, "span", 10);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n            ");
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(11, "\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.getItemClass(item_r2));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("link"));
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r1.state.createURL(item_r2.value), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", item_r2.stars);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("label"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.andUpLabel);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("count"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r2.count);
} }
function NgAisRatingMenu_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(2, "svg", 1);
    ɵngcc0.ɵɵtext(3, "\n        ");
    ɵngcc0.ɵɵelementStart(4, "symbol", 2);
    ɵngcc0.ɵɵtext(5, "\n          ");
    ɵngcc0.ɵɵelement(6, "path", 3);
    ɵngcc0.ɵɵtext(7, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementStart(9, "symbol", 4);
    ɵngcc0.ɵɵtext(10, "\n          ");
    ɵngcc0.ɵɵelement(11, "path", 5);
    ɵngcc0.ɵɵtext(12, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(14, "\n\n      ");
    ɵngcc0.ɵɵnamespaceHTML();
    ɵngcc0.ɵɵelementStart(15, "ul");
    ɵngcc0.ɵɵtext(16, "\n        ");
    ɵngcc0.ɵɵtemplate(17, NgAisRatingMenu_div_1_li_17_Template, 13, 12, "li", 6);
    ɵngcc0.ɵɵtext(18, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(19, "\n    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.cx());
    ɵngcc0.ɵɵadvance(15);
    ɵngcc0.ɵɵclassMap(ctx_r0.cx("list"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.state.items);
} }
function NgAisStats_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1, "\n      ");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function NgAisStats_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1.cx("text"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2("\n        ", ctx_r1.state.nbHits, " results found in ", ctx_r1.state.processingTimeMS, "ms.\n      ");
} }
function NgAisPanel_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r0.header, "\n      ");
} }
function NgAisPanel_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r1.footer, "\n      ");
} }
function bem(widgetName) {
    /** @type {?} */
    const cx = (/**
     * @param {?=} element
     * @param {?=} subElement
     * @return {?}
     */
    function (element, subElement) {
        if (element) {
            /** @type {?} */
            const scoppedWidgetName = `ais-${widgetName}-${element}`;
            // output `ais-Widget-Header|Body|Footer ais-Header|Body|Footer`
            if (element === 'header' || element === 'body' || element === 'footer') {
                /** @type {?} */
                const nonScoppedWidgetName = `ais-${element}`;
                return `${scoppedWidgetName} ${nonScoppedWidgetName}`;
            }
            // output `ais-Widget-Xyz--abc`
            if (subElement) {
                return `${scoppedWidgetName}--${subElement}`;
            }
            // output `ais-Widget-Xyz`
            return scoppedWidgetName;
        }
        // output `ais-Widget`
        return `ais-${widgetName}`;
    });
    return cx;
}
/**
 * @param {?=} input
 * @return {?}
 */
function parseNumberInput(input) {
    return typeof input === 'string' ? parseInt(input, 10) : input;
}
/**
 * @param {...?} args
 * @return {?}
 */
function noop(...args) { }
/**
 * @param {?} s
 * @return {?}
 */
function capitalize(s) {
    return s.charAt(0).toUpperCase() + s.slice(1);
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Widget {
}
class BaseWidget {
    /**
     * @param {?} widgetName
     */
    constructor(widgetName) {
        this.state = {};
        this.updateState = (/**
         * @param {?} state
         * @param {?} isFirstRendering
         * @return {?}
         */
        (state, isFirstRendering) => {
            if (isFirstRendering) {
                return Promise.resolve().then((/**
                 * @return {?}
                 */
                () => {
                    this.state = state;
                }));
            }
            this.state = state;
        });
        this.cx = bem(widgetName);
    }
    /**
     * @param {?} connector
     * @param {?=} options
     * @return {?}
     */
    createWidget(connector, options = {}) {
        this.widget = connector(this.updateState, noop)(options);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // add widget to the InstantSearch Instance
        this.instantSearchParent.addWidget(this.widget);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (isPlatformBrowser(this.instantSearchParent.platformId)) {
            this.instantSearchParent.removeWidget(this.widget);
        }
    }
    // helper method for genering item list className
    /**
     * @param {?} item
     * @return {?}
     */
    getItemClass(item) {
        /** @type {?} */
        let className = this.cx('item');
        if (item.isRefined) {
            className = `${className} ${this.cx('item', 'selected')}`;
        }
        return className;
    }
}
BaseWidget.ɵfac = function BaseWidget_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
BaseWidget.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseWidget, inputs: { autoHideContainer: "autoHideContainer" } });
BaseWidget.propDecorators = {
    autoHideContainer: [{ type: Input }]
};


/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const VERSION$1 = '2.3.0';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const algoliasearch = algoliasearchProxy__default || algoliasearchProxy;
class NgAisInstantSearch {
    /**
     * @param {?} platformId
     */
    constructor(platformId) {
        this.platformId = platformId;
        this.instanceName = 'default';
        this.change = new EventEmitter();
        this.onRender = (/**
         * @return {?}
         */
        () => {
            this.change.emit({
                results: this.instantSearchInstance.helper.lastResults,
                state: this.instantSearchInstance.helper.state,
            });
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createInstantSearchInstance(this.config);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.instantSearchInstance.start();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.instantSearchInstance.removeListener('render', this.onRender);
        this.instantSearchInstance.dispose();
    }
    /**
     * @param {?} config
     * @return {?}
     */
    createInstantSearchInstance(config) {
        // add default searchParameters with highlighting config
        if (!config.searchParameters)
            config.searchParameters = {};
        Object.assign(config.searchParameters, {
            highlightPreTag: '__ais-highlight__',
            highlightPostTag: '__/ais-highlight__',
        });
        // remove URLSync widget if on SSR
        if (!isPlatformBrowser(this.platformId)) {
            if (typeof config.urlSync !== 'undefined')
                delete config.urlSync;
            if (typeof config.routing !== 'undefined')
                delete config.routing;
        }
        if (!config.searchClient && !config.createAlgoliaClient) {
            /** @type {?} */
            const client = algoliasearch(config.appId, config.apiKey);
            config.searchClient = client;
            config.appId = undefined;
            config.apiKey = undefined;
        }
        // custom algolia client agent
        if (typeof config.searchClient.addAlgoliaAgent === 'function') {
            // add user agents
            config.searchClient.addAlgoliaAgent(`angular (${VERSION.full})`);
            config.searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION$1})`);
        }
        this.instantSearchInstance = instantsearch(config);
        this.instantSearchInstance.on('render', this.onRender);
    }
    /**
     * @param {?} widget
     * @return {?}
     */
    addWidget(widget) {
        this.instantSearchInstance.addWidget(widget);
    }
    /**
     * @param {?} widget
     * @return {?}
     */
    removeWidget(widget) {
        this.instantSearchInstance.removeWidget(widget);
    }
    /**
     * @return {?}
     */
    refresh() {
        this.instantSearchInstance.refresh();
    }
}
NgAisInstantSearch.ɵfac = function NgAisInstantSearch_Factory(t) { return new (t || NgAisInstantSearch)(ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
NgAisInstantSearch.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisInstantSearch, selectors: [["ais-instantsearch"]], inputs: { instanceName: "instanceName", config: "config" }, outputs: { change: "change" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NgAisInstantSearch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
/** @nocollapse */
NgAisInstantSearch.ctorParameters = () => [
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
NgAisInstantSearch.propDecorators = {
    config: [{ type: Input }],
    instanceName: [{ type: Input }],
    change: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInstantSearch, [{
        type: Component,
        args: [{
                selector: 'ais-instantsearch',
                template: `<ng-content></ng-content>`
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { instanceName: [{
            type: Input
        }], change: [{
            type: Output
        }], config: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisBreadcrumb extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('Breadcrumb');
        this.instantSearchParent = instantSearchParent;
        this.state = {
            createURL: noop,
            items: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    get items() {
        return this.state.items.map((/**
         * @param {?} item
         * @param {?} idx
         * @return {?}
         */
        (item, idx) => (Object.assign({}, item, { separator: idx !== 0, isLast: idx === this.state.items.length - 1 }))));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectBreadcrumb, {
            attributes: this.attributes,
            rootPath: this.rootPath,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    handleClick(event, item) {
        event.preventDefault();
        event.stopPropagation();
        if (item.value) {
            this.state.refine(item.value);
        }
    }
}
NgAisBreadcrumb.ɵfac = function NgAisBreadcrumb_Factory(t) { return new (t || NgAisBreadcrumb)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisBreadcrumb.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisBreadcrumb, selectors: [["ais-breadcrumb"]], inputs: { attributes: "attributes", rootPath: "rootPath" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], ["aria-hidden", "true", 3, "class", 4, "ngIf"], [3, "class", "href", "click", 4, "ngIf"], [4, "ngIf"], ["aria-hidden", "true"], [3, "href", "click"]], template: function NgAisBreadcrumb_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisBreadcrumb_div_1_Template, 7, 5, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisBreadcrumb.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisBreadcrumb.propDecorators = {
    attributes: [{ type: Input }],
    rootPath: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisBreadcrumb, [{
        type: Component,
        args: [{
                selector: 'ais-breadcrumb',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list')">
        <li
          *ngFor="let item of items"
          [class]="cx('item', item.isLast ? 'selected' : undefined)"
          (click)="handleClick($event, item)"
        >
          <span
            *ngIf="item.separator"
            [class]="cx('separator')"
            aria-hidden="true"
          >
            >
          </span>
          <a
            [class]="cx('link')"
            href="{{state.createURL(item.value)}}"
            *ngIf="!item.isLast"
            (click)="handleClick($event, item)"
          >
            {{item.name}}
          </a>

          <span *ngIf="item.isLast">
            {{item.name}}
          </span>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { attributes: [{
            type: Input
        }], rootPath: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisBreadcrumbModule {
}
NgAisBreadcrumbModule.ɵfac = function NgAisBreadcrumbModule_Factory(t) { return new (t || NgAisBreadcrumbModule)(); };
NgAisBreadcrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisBreadcrumbModule });
NgAisBreadcrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisBreadcrumbModule, { declarations: function () { return [NgAisBreadcrumb]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisBreadcrumb]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisBreadcrumbModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisBreadcrumb],
                entryComponents: [NgAisBreadcrumb],
                exports: [NgAisBreadcrumb],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisClearRefinements extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('ClearRefinements');
        this.instantSearchParent = instantSearchParent;
        this.buttonLabel = 'Clear refinements';
        this.clearsQuery = false;
        this.excludeAttributes = [];
        this.state = {
            hasRefinements: false,
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return !this.state.hasRefinements && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // we need to `createWidget` from `ngOnInit` to have `@Input()` intialized
        this.createWidget(connectClearAll, {
            clearsQuery: this.clearsQuery,
            excludeAttributes: this.excludeAttributes,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleClick(event) {
        event.preventDefault();
        if (this.state.hasRefinements) {
            this.state.refine();
        }
    }
}
NgAisClearRefinements.ɵfac = function NgAisClearRefinements_Factory(t) { return new (t || NgAisClearRefinements)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisClearRefinements.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisClearRefinements, selectors: [["ais-clear-refinements"]], inputs: { buttonLabel: "buttonLabel", clearsQuery: "clearsQuery", excludeAttributes: "excludeAttributes" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "disabled", "click"]], template: function NgAisClearRefinements_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisClearRefinements_div_1_Template, 5, 6, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
/** @nocollapse */
NgAisClearRefinements.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisClearRefinements.propDecorators = {
    buttonLabel: [{ type: Input }],
    clearsQuery: [{ type: Input }],
    excludeAttributes: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisClearRefinements, [{
        type: Component,
        args: [{
                selector: 'ais-clear-refinements',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <button
        [class]="cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')"
        (click)="handleClick($event)"
        [disabled]="!state.hasRefinements"
      >
        {{buttonLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { buttonLabel: [{
            type: Input
        }], clearsQuery: [{
            type: Input
        }], excludeAttributes: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisClearRefinementsModule {
}
NgAisClearRefinementsModule.ɵfac = function NgAisClearRefinementsModule_Factory(t) { return new (t || NgAisClearRefinementsModule)(); };
NgAisClearRefinementsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisClearRefinementsModule });
NgAisClearRefinementsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisClearRefinementsModule, { declarations: function () { return [NgAisClearRefinements]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisClearRefinements]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisClearRefinementsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisClearRefinements],
                entryComponents: [NgAisClearRefinements],
                exports: [NgAisClearRefinements],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisCurrentRefinements extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('CurrentRefinements');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.clearRefinements = 'after';
        this.clearRefinementsLabel = 'Clear refinements';
        // connector options
        this.onlyListedAttributes = false;
        this.clearsQuery = false;
        this.attributes = [];
        this.state = {
            attributes: {},
            clearAllClick: noop,
            clearAllURL: noop,
            createURL: noop,
            refine: noop,
            refinements: [],
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.refinements.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    get refinements() {
        /** @type {?} */
        const items = typeof this.transformItems === 'function'
            ? this.transformItems(this.state.refinements)
            : this.state.refinements;
        // group refinements by category? (attributeName && type)
        return items.reduce((/**
         * @param {?} res
         * @param {?} __1
         * @return {?}
         */
        (res, _a) => {
            var { type, attributeName } = _a, refinement = __rest(_a, ["type", "attributeName"]);
            /** @type {?} */
            const match = res.find((/**
             * @param {?} r
             * @return {?}
             */
            r => r.attributeName === attributeName && r.type === type));
            if (match) {
                match.items.push(Object.assign({ type, attributeName }, refinement));
            }
            else {
                res.push({
                    type,
                    attributeName,
                    label: capitalize(attributeName),
                    items: [Object.assign({ type, attributeName }, refinement)],
                });
            }
            return res;
        }), []);
    }
    /**
     * @return {?}
     */
    get json() {
        return JSON.stringify(this.refinements, null, 4);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectCurrentRefinedValues, {
            attributes: this.attributes,
            clearsQuery: this.clearsQuery,
            onlyListedAttributes: this.onlyListedAttributes,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} refinement
     * @return {?}
     */
    handleClick(event, refinement) {
        event.preventDefault();
        this.state.refine(refinement);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleClearAllClick(event) {
        event.preventDefault();
        this.state.clearAllClick();
    }
}
NgAisCurrentRefinements.ɵfac = function NgAisCurrentRefinements_Factory(t) { return new (t || NgAisCurrentRefinements)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisCurrentRefinements.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisCurrentRefinements, selectors: [["ais-current-refinements"]], inputs: { clearRefinements: "clearRefinements", clearRefinementsLabel: "clearRefinementsLabel", onlyListedAttributes: "onlyListedAttributes", clearsQuery: "clearsQuery", attributes: "attributes", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngIf"], [3, "class", 4, "ngFor", "ngForOf"], [3, "click"]], template: function NgAisCurrentRefinements_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisCurrentRefinements_div_1_Template, 8, 5, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisCurrentRefinements.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisCurrentRefinements.propDecorators = {
    clearRefinements: [{ type: Input }],
    clearRefinementsLabel: [{ type: Input }],
    transformItems: [{ type: Input }],
    onlyListedAttributes: [{ type: Input }],
    clearsQuery: [{ type: Input }],
    attributes: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisCurrentRefinements, [{
        type: Component,
        args: [{
                selector: 'ais-current-refinements',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <button
        [class]="cx('reset')"
        (click)="handleClearAllClick($event)"
        *ngIf="clearRefinements === 'before' || clearRefinements === true">
        {{clearRefinementsLabel}}
      </button>

      <ul
        [class]="cx('list')"
        *ngFor="let refinement of refinements"
      >
        <li [class]="cx('item')">
          <span [class]="cx('label')">{{refinement.label}}:</span>

          <span
            [class]="cx('category')"
            *ngFor="let item of refinement.items"
          >
            <span [class]="cx('categoryLabel')">{{item.name}}</span>
            <button [class]="cx('delete')" (click)="handleClick($event, item)">✕</button>
          </span>
        </li>
      </ul>

      <button
        [class]="cx('reset')"
        (click)="handleClearAllClick($event)"
        *ngIf="clearRefinements === 'after'">
        {{clearRefinementsLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { clearRefinements: [{
            type: Input
        }], clearRefinementsLabel: [{
            type: Input
        }], onlyListedAttributes: [{
            type: Input
        }], clearsQuery: [{
            type: Input
        }], attributes: [{
            type: Input
        }], transformItems: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisCurrentRefinementsModule {
}
NgAisCurrentRefinementsModule.ɵfac = function NgAisCurrentRefinementsModule_Factory(t) { return new (t || NgAisCurrentRefinementsModule)(); };
NgAisCurrentRefinementsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisCurrentRefinementsModule });
NgAisCurrentRefinementsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisCurrentRefinementsModule, { declarations: function () { return [NgAisCurrentRefinements]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisCurrentRefinements]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisCurrentRefinementsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisCurrentRefinements],
                entryComponents: [NgAisCurrentRefinements],
                exports: [NgAisCurrentRefinements],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHierarchicalMenu extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('HierarchicalMenu');
        this.instantSearchParent = instantSearchParent;
        this.separator = ' > ';
        this.limit = 10;
        this.state = {
            createURL: noop,
            items: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    get items() {
        return typeof this.transformItems === 'function'
            ? this.transformItems(this.state.items)
            : this.state.items;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectHierarchicalMenu, {
            limit: parseNumberInput(this.limit),
            attributes: this.attributes,
            rootPath: this.rootPath,
            separator: this.separator,
            showParentLevel: this.showParentLevel,
            sortBy: this.sortBy,
        });
        super.ngOnInit();
    }
}
NgAisHierarchicalMenu.ɵfac = function NgAisHierarchicalMenu_Factory(t) { return new (t || NgAisHierarchicalMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisHierarchicalMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisHierarchicalMenu, selectors: [["ais-hierarchical-menu"]], inputs: { separator: "separator", limit: "limit", transformItems: "transformItems", attributes: "attributes", rootPath: "rootPath", showParentLevel: "showParentLevel", sortBy: "sortBy" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "item", "createURL", "refine", 4, "ngFor", "ngForOf"], [3, "item", "createURL", "refine"]], template: function NgAisHierarchicalMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisHierarchicalMenu_div_1_Template, 7, 5, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHierarchicalMenuItem]; }, encapsulation: 2 });
/** @nocollapse */
NgAisHierarchicalMenu.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisHierarchicalMenu.propDecorators = {
    transformItems: [{ type: Input }],
    attributes: [{ type: Input }],
    separator: [{ type: Input }],
    rootPath: [{ type: Input }],
    showParentLevel: [{ type: Input }],
    limit: [{ type: Input }],
    sortBy: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHierarchicalMenu, [{
        type: Component,
        args: [{
                selector: 'ais-hierarchical-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list') + ' ' + cx('list', 'lvl0')">
        <ais-hierarchical-menu-item
          *ngFor="let item of items"
          [item]="item"
          [createURL]="state.createURL"
          [refine]="state.refine"
        >
        </ais-hierarchical-menu-item>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { separator: [{
            type: Input
        }], limit: [{
            type: Input
        }], transformItems: [{
            type: Input
        }], attributes: [{
            type: Input
        }], rootPath: [{
            type: Input
        }], showParentLevel: [{
            type: Input
        }], sortBy: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHierarchicalMenuItem {
    constructor() {
        this.lvl = 1;
        this.cx = bem('HierarchicalMenu');
    }
    /**
     * @param {?} item
     * @return {?}
     */
    getItemClass(item) {
        /** @type {?} */
        let className = this.cx('item');
        if (item.isRefined) {
            className = `${className} ${this.cx('item', 'selected')}`;
        }
        if (this.isArray(item.data) && item.data.length > 0) {
            className = `${className} ${this.cx('item', 'parent')}`;
        }
        return className;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    getListClass(item) {
        return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx('list', `lvl${this.lvl}`)}`;
    }
    /**
     * @param {?} potentialArray
     * @return {?}
     */
    isArray(potentialArray) {
        return Array.isArray(potentialArray);
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    handleClick(event, item) {
        event.preventDefault();
        event.stopPropagation();
        this.refine(item.value);
    }
}
NgAisHierarchicalMenuItem.ɵfac = function NgAisHierarchicalMenuItem_Factory(t) { return new (t || NgAisHierarchicalMenuItem)(); };
NgAisHierarchicalMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisHierarchicalMenuItem, selectors: [["ais-hierarchical-menu-item"]], inputs: { lvl: "lvl", refine: "refine", createURL: "createURL", item: "item" }, decls: 15, vars: 12, consts: [[3, "click"], [3, "href", "click"], [3, "class", 4, "ngIf"], [3, "item", "createURL", "refine", "lvl", 4, "ngFor", "ngForOf"], [3, "item", "createURL", "refine", "lvl"]], template: function NgAisHierarchicalMenuItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "li", 0);
        ɵngcc0.ɵɵlistener("click", function NgAisHierarchicalMenuItem_Template_li_click_1_listener($event) { return ctx.handleClick($event, ctx.item); });
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "a", 1);
        ɵngcc0.ɵɵlistener("click", function NgAisHierarchicalMenuItem_Template_a_click_3_listener($event) { return ctx.handleClick($event, ctx.item); });
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵelementStart(5, "span");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n        ");
        ɵngcc0.ɵɵelementStart(8, "span");
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(10, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(11, "\n\n      ");
        ɵngcc0.ɵɵtemplate(12, NgAisHierarchicalMenuItem_ul_12_Template, 4, 3, "ul", 2);
        ɵngcc0.ɵɵtext(13, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(14, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.getItemClass(ctx.item));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("link"));
        ɵngcc0.ɵɵpropertyInterpolate("href", ctx.createURL(ctx.item.value), ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.item.label);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("count"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.item.count);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.item.isRefined && ctx.isArray(ctx.item.data) && ctx.item.data.length > 0);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHierarchicalMenuItem], encapsulation: 2 });
NgAisHierarchicalMenuItem.propDecorators = {
    lvl: [{ type: Input }],
    refine: [{ type: Input }],
    createURL: [{ type: Input }],
    item: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHierarchicalMenuItem, [{
        type: Component,
        args: [{
                selector: 'ais-hierarchical-menu-item',
                template: `
    <li
      [class]="getItemClass(item)"
      (click)="handleClick($event, item)"
    >
      <a
        [class]="cx('link')"
        href="{{createURL(item.value)}}"
        (click)="handleClick($event, item)"
      >
        <span [class]="cx('label')">{{item.label}}</span>
        <span [class]="cx('count')">{{item.count}}</span>
      </a>

      <ul
        [class]="getListClass(item)"
        *ngIf="item.isRefined && isArray(item.data) && item.data.length > 0"
      >
        <ais-hierarchical-menu-item
          *ngFor="let child of item.data"
          [item]="child"
          [createURL]="createURL"
          [refine]="refine"
          [lvl]="lvl + 1"
        >
        </ais-hierarchical-menu-item>
      </ul>
    </li>
  `
            }]
    }], function () { return []; }, { lvl: [{
            type: Input
        }], refine: [{
            type: Input
        }], createURL: [{
            type: Input
        }], item: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHierarchicalMenuModule {
}
NgAisHierarchicalMenuModule.ɵfac = function NgAisHierarchicalMenuModule_Factory(t) { return new (t || NgAisHierarchicalMenuModule)(); };
NgAisHierarchicalMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisHierarchicalMenuModule });
NgAisHierarchicalMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHierarchicalMenuModule, { declarations: function () { return [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisHierarchicalMenu]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHierarchicalMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],
                entryComponents: [NgAisHierarchicalMenu],
                exports: [NgAisHierarchicalMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHitsPerPage extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('HitsPerPage');
        this.instantSearchParent = instantSearchParent;
        this.state = {
            items: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectHitsPerPage, { items: this.items });
        super.ngOnInit();
    }
}
NgAisHitsPerPage.ɵfac = function NgAisHitsPerPage_Factory(t) { return new (t || NgAisHitsPerPage)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisHitsPerPage.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisHitsPerPage, selectors: [["ais-hits-per-page"]], inputs: { items: "items" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "change"], [3, "class", "value", "selected", 4, "ngFor", "ngForOf"], [3, "value", "selected"]], template: function NgAisHitsPerPage_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisHitsPerPage_div_1_Template, 7, 5, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisHitsPerPage.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisHitsPerPage.propDecorators = {
    items: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHitsPerPage, [{
        type: Component,
        args: [{
                selector: 'ais-hits-per-page',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <select
        [class]="cx('select')"
        (change)="state.refine($event.target.value)"
      >
        <option
          [class]="cx('option')"
          *ngFor="let item of state.items"
          [value]="item.value"
          [selected]="item.isRefined"
        >
          {{item.label}}
        </option>
      </select>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { items: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHitsPerPageModule {
}
NgAisHitsPerPageModule.ɵfac = function NgAisHitsPerPageModule_Factory(t) { return new (t || NgAisHitsPerPageModule)(); };
NgAisHitsPerPageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisHitsPerPageModule });
NgAisHitsPerPageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHitsPerPageModule, { declarations: function () { return [NgAisHitsPerPage]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisHitsPerPage]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHitsPerPageModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHitsPerPage],
                entryComponents: [NgAisHitsPerPage],
                exports: [NgAisHitsPerPage],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const get = require('lodash/get');
class NgAisHighlight {
    constructor() {
        this.tagName = 'em';
        this.cx = bem('Highlight');
    }
    /**
     * @return {?}
     */
    get content() {
        if (this.attribute === 'highlighted') {
            return this.hit.highlighted
                ? this.replaceWithTagName(this.hit.highlighted)
                : this.hit.label;
        }
        if (this.hit.hasOwnProperty('_highlightResult')) {
            /** @type {?} */
            const attributeHighlighted = get(this.hit._highlightResult, this.attribute);
            // check that the attributeHighlighted is a string
            if (attributeHighlighted !== undefined &&
                typeof attributeHighlighted.value === 'string') {
                return this.replaceWithTagName(attributeHighlighted.value);
            }
        }
        /** @type {?} */
        const fallback = get(this.hit, this.attribute);
        if (!fallback) {
            console.warn(`Could not find attribute [${this.attribute}] into hit object, will display an empty string.`);
            return '';
        }
        return fallback;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    replaceWithTagName(value) {
        return value
            .replace(new RegExp('<em>', 'g'), `<${this.tagName} class="${this.cx('highlighted')}">`)
            .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);
    }
}
NgAisHighlight.ɵfac = function NgAisHighlight_Factory(t) { return new (t || NgAisHighlight)(); };
NgAisHighlight.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisHighlight, selectors: [["ais-highlight"]], inputs: { tagName: "tagName", attribute: "attribute", hit: "hit" }, decls: 1, vars: 3, consts: [[3, "innerHtml"]], template: function NgAisHighlight_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵproperty("innerHtml", ctx.content, ɵngcc0.ɵɵsanitizeHtml);
    } }, encapsulation: 2 });
NgAisHighlight.propDecorators = {
    attribute: [{ type: Input }],
    hit: [{ type: Input }],
    tagName: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHighlight, [{
        type: Component,
        args: [{
                selector: 'ais-highlight',
                template: `<span [class]="cx()" [innerHtml]="content"></span>`
            }]
    }], function () { return []; }, { tagName: [{
            type: Input
        }], attribute: [{
            type: Input
        }], hit: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHighlightModule {
}
NgAisHighlightModule.ɵfac = function NgAisHighlightModule_Factory(t) { return new (t || NgAisHighlightModule)(); };
NgAisHighlightModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisHighlightModule });
NgAisHighlightModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHighlightModule, { declarations: function () { return [NgAisHighlight]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisHighlight]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHighlightModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHighlight],
                entryComponents: [NgAisHighlight],
                exports: [NgAisHighlight],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHits extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('Hits');
        this.instantSearchParent = instantSearchParent;
        // inner widget state returned from connector
        this.state = { hits: [], results: {} };
        this.updateState = (/**
         * @param {?} state
         * @param {?} isFirstRendering
         * @return {?}
         */
        (state, isFirstRendering) => {
            if (isFirstRendering)
                return;
            this.state = Object.assign({}, state, { results: state.results, hits: typeof this.transformItems === 'function'
                    ? this.transformItems(state.hits)
                    : state.hits });
        });
        this.createWidget(connectHits, { escapeHits: true });
    }
}
NgAisHits.ɵfac = function NgAisHits_Factory(t) { return new (t || NgAisHits)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisHits.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisHits, selectors: [["ais-hits"]], contentQueries: function NgAisHits_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 5, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [3, "class", 4, "ngFor", "ngForOf"], ["attribute", "name", 3, "hit"]], template: function NgAisHits_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵtemplate(3, NgAisHits_ng_container_3_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtext(4, "\n\n      ");
        ɵngcc0.ɵɵtext(5, "\n      ");
        ɵngcc0.ɵɵtemplate(6, NgAisHits_div_6_Template, 7, 3, "div", 1);
        ɵngcc0.ɵɵtext(7, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.state);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHighlight], encapsulation: 2 });
/** @nocollapse */
NgAisHits.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisHits.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef,] }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHits, [{
        type: Component,
        args: [{
                selector: 'ais-hits',
                template: `
    <div [class]="cx()">
      <ng-container *ngTemplateOutlet="template; context: state"></ng-container>

      <!-- default rendering if no template specified -->
      <div *ngIf="!template">
        <ul [class]="cx('list')">
          <li
            [class]="cx('item')"
            *ngFor="let hit of state.hits"
          >
            <ais-highlight attribute="name" [hit]="hit">
            </ais-highlight>
          </li>
        </ul>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { template: [{
            type: ContentChild,
            args: [TemplateRef]
        }], transformItems: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisHitsModule {
}
NgAisHitsModule.ɵfac = function NgAisHitsModule_Factory(t) { return new (t || NgAisHitsModule)(); };
NgAisHitsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisHitsModule });
NgAisHitsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgAisHighlightModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisHitsModule, { declarations: function () { return [NgAisHits]; }, imports: function () { return [CommonModule, NgAisHighlightModule]; }, exports: function () { return [NgAisHits]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisHitsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisHits],
                entryComponents: [NgAisHits],
                exports: [NgAisHits],
                imports: [CommonModule, NgAisHighlightModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisInfiniteHits extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('InfiniteHits');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.showMoreLabel = 'Show more results';
        // inner widget state returned from connector
        this.state = {
            hits: [],
            isLastPage: false,
            showMore: noop,
            results: {},
        };
        this.updateState = (/**
         * @param {?} state
         * @param {?} isFirstRendering
         * @return {?}
         */
        (state, isFirstRendering) => {
            if (isFirstRendering)
                return;
            this.state = Object.assign({}, state, { results: state.results, hits: typeof this.transformItems === 'function'
                    ? this.transformItems(state.hits)
                    : state.hits });
        });
        this.createWidget(connectInfiniteHits, { escapeHits: true });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    showMore(event) {
        event.preventDefault();
        this.state.showMore();
    }
}
NgAisInfiniteHits.ɵfac = function NgAisInfiniteHits_Factory(t) { return new (t || NgAisInfiniteHits)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisInfiniteHits.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisInfiniteHits, selectors: [["ais-infinite-hits"]], contentQueries: function NgAisInfiniteHits_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { showMoreLabel: "showMoreLabel", transformItems: "transformItems" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 11, vars: 6, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [3, "class", "disabled", "click", 4, "ngIf"], [3, "class", 4, "ngFor", "ngForOf"], ["attribute", "name", 3, "hit"], [3, "disabled", "click"]], template: function NgAisInfiniteHits_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵtemplate(3, NgAisInfiniteHits_ng_container_3_Template, 1, 0, "ng-container", 0);
        ɵngcc0.ɵɵtext(4, "\n\n      ");
        ɵngcc0.ɵɵtext(5, "\n      ");
        ɵngcc0.ɵɵtemplate(6, NgAisInfiniteHits_div_6_Template, 7, 3, "div", 1);
        ɵngcc0.ɵɵtext(7, "\n\n      ");
        ɵngcc0.ɵɵtemplate(8, NgAisInfiniteHits_button_8_Template, 2, 4, "button", 2);
        ɵngcc0.ɵɵtext(9, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(10, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.state);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisHighlight], encapsulation: 2 });
/** @nocollapse */
NgAisInfiniteHits.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisInfiniteHits.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef,] }],
    showMoreLabel: [{ type: Input }],
    transformItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInfiniteHits, [{
        type: Component,
        args: [{
                selector: 'ais-infinite-hits',
                template: `
    <div [class]="cx()">
      <ng-container *ngTemplateOutlet="template; context: state"></ng-container>

      <!-- default rendering if no template specified -->
      <div *ngIf="!template">
        <ul [class]="cx('list')">
          <li
            [class]="cx('item')"
            *ngFor="let hit of state.hits"
          >
            <ais-highlight attribute="name" [hit]="hit">
            </ais-highlight>
          </li>
        </ul>
      </div>

      <button
        [class]="cx('showMore')"
        (click)="showMore($event)"
        [disabled]="state.isLastPage"
        *ngIf="!template"
      >
        {{showMoreLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { showMoreLabel: [{
            type: Input
        }], template: [{
            type: ContentChild,
            args: [TemplateRef]
        }], transformItems: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisInfiniteHitsModule {
}
NgAisInfiniteHitsModule.ɵfac = function NgAisInfiniteHitsModule_Factory(t) { return new (t || NgAisInfiniteHitsModule)(); };
NgAisInfiniteHitsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisInfiniteHitsModule });
NgAisInfiniteHitsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgAisHighlightModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisInfiniteHitsModule, { declarations: function () { return [NgAisInfiniteHits]; }, imports: function () { return [CommonModule, NgAisHighlightModule]; }, exports: function () { return [NgAisInfiniteHits]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInfiniteHitsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisInfiniteHits],
                entryComponents: [NgAisInfiniteHits],
                exports: [NgAisInfiniteHits],
                imports: [CommonModule, NgAisHighlightModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisInstantSearchModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: NgAisInstantSearchModule,
            providers: [],
        };
    }
}
NgAisInstantSearchModule.ɵfac = function NgAisInstantSearchModule_Factory(t) { return new (t || NgAisInstantSearchModule)(); };
NgAisInstantSearchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisInstantSearchModule });
NgAisInstantSearchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisInstantSearchModule, { declarations: function () { return [NgAisInstantSearch]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisInstantSearch]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisInstantSearchModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisInstantSearch],
                entryComponents: [NgAisInstantSearch],
                exports: [NgAisInstantSearch],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisMenu extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('Menu');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.showMoreLabel = 'Show more';
        this.showLessLabel = 'Show less';
        this.limit = 10;
        this.state = {
            canRefine: false,
            canToggleShowMore: false,
            createURL: noop,
            isShowingMore: false,
            items: [],
            refine: noop,
            toggleShowMore: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    get showMoreClass() {
        /** @type {?} */
        let className = this.cx('showMore');
        if (!this.state.canToggleShowMore) {
            className = `${className} ${this.cx('showMore', 'disabled')}`;
        }
        return className;
    }
    /**
     * @return {?}
     */
    get items() {
        return typeof this.transformItems === 'function'
            ? this.transformItems(this.state.items)
            : this.state.items;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectMenu, {
            limit: parseNumberInput(this.limit),
            showMoreLimit: parseNumberInput(this.showMoreLimit),
            attributeName: this.attribute,
            sortBy: this.sortBy,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} value
     * @return {?}
     */
    handleClick(event, value) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(value);
    }
}
NgAisMenu.ɵfac = function NgAisMenu_Factory(t) { return new (t || NgAisMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisMenu, selectors: [["ais-menu"]], inputs: { showMoreLabel: "showMoreLabel", showLessLabel: "showLessLabel", limit: "limit", transformItems: "transformItems", attribute: "attribute", showMoreLimit: "showMoreLimit", sortBy: "sortBy" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "class", "click", 4, "ngIf"], [3, "click"], [3, "href", "click"]], template: function NgAisMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisMenu_div_1_Template, 9, 6, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisMenu.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisMenu.propDecorators = {
    showMoreLabel: [{ type: Input }],
    showLessLabel: [{ type: Input }],
    transformItems: [{ type: Input }],
    attribute: [{ type: Input }],
    limit: [{ type: Input }],
    showMoreLimit: [{ type: Input }],
    sortBy: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisMenu, [{
        type: Component,
        args: [{
                selector: 'ais-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list')">
        <li
          [class]="getItemClass(item)"
          *ngFor="let item of items"
          (click)="handleClick($event, item.value)"
        >
          <a
            href="{{state.createURL(item.value)}}"
            [class]="cx('link')"
            (click)="handleClick($event, item.value)"
          >
            <span [class]="cx('label')">{{item.label}}</span>
            <span [class]="cx('count')">{{item.count}}</span>
          </a>
        </li>
      </ul>

      <button
        *ngIf="showMoreLimit && state.canToggleShowMore"
        (click)="state.toggleShowMore()"
        [class]="showMoreClass"
      >
        {{state.isShowingMore ? showLessLabel : showMoreLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { showMoreLabel: [{
            type: Input
        }], showLessLabel: [{
            type: Input
        }], limit: [{
            type: Input
        }], transformItems: [{
            type: Input
        }], attribute: [{
            type: Input
        }], showMoreLimit: [{
            type: Input
        }], sortBy: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisMenuModule {
}
NgAisMenuModule.ɵfac = function NgAisMenuModule_Factory(t) { return new (t || NgAisMenuModule)(); };
NgAisMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisMenuModule });
NgAisMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisMenuModule, { declarations: function () { return [NgAisMenu]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisMenu]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisMenu],
                entryComponents: [NgAisMenu],
                exports: [NgAisMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisNumericMenu extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('NumericMenu');
        this.instantSearchParent = instantSearchParent;
        this.state = {
            createURL: noop,
            items: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectNumericRefinementList, {
            attributeName: this.attribute,
            options: this.items,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    refine(event, item) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(item.value);
    }
}
NgAisNumericMenu.ɵfac = function NgAisNumericMenu_Factory(t) { return new (t || NgAisNumericMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisNumericMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisNumericMenu, selectors: [["ais-numeric-menu"]], inputs: { attribute: "attribute", items: "items" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], ["type", "radio", "name", "NumericMenu", 3, "checked"]], template: function NgAisNumericMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisNumericMenu_div_1_Template, 7, 5, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisNumericMenu.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisNumericMenu.propDecorators = {
    attribute: [{ type: Input }],
    items: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisNumericMenu, [{
        type: Component,
        args: [{
                selector: 'ais-numeric-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <ul [class]="cx('list')">
        <li
          [class]="getItemClass(item)"
          *ngFor="let item of state.items"
          (click)="refine($event, item)"
        >
          <label [class]="cx('label')">
            <input
              [class]="cx('radio')"
              type="radio"
              name="NumericMenu"
              [checked]="item.isRefined"
            />
            <span [class]="cx('labelText')">{{item.label}}</span>
          </label>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { attribute: [{
            type: Input
        }], items: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisNumericMenuModule {
}
NgAisNumericMenuModule.ɵfac = function NgAisNumericMenuModule_Factory(t) { return new (t || NgAisNumericMenuModule)(); };
NgAisNumericMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisNumericMenuModule });
NgAisNumericMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisNumericMenuModule, { declarations: function () { return [NgAisNumericMenu]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisNumericMenu]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisNumericMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisNumericMenu],
                entryComponents: [NgAisNumericMenu],
                exports: [NgAisNumericMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisNumericSelector extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('NumericSelector');
        this.instantSearchParent = instantSearchParent;
        this.operator = '=';
        this.state = {
            currentRefinement: null,
            options: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectNumericSelector, {
            attributeName: this.attribute,
            operator: this.operator,
            options: this.items,
        });
        super.ngOnInit();
    }
}
NgAisNumericSelector.ɵfac = function NgAisNumericSelector_Factory(t) { return new (t || NgAisNumericSelector)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisNumericSelector.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisNumericSelector, selectors: [["ais-numeric-selector"]], inputs: { operator: "operator", attribute: "attribute", items: "items" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 5, consts: [[3, "change"], [3, "class", "value", "selected", 4, "ngFor", "ngForOf"], [3, "value", "selected"]], template: function NgAisNumericSelector_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "select", 0);
        ɵngcc0.ɵɵlistener("change", function NgAisNumericSelector_Template_select_change_3_listener($event) { return ctx.state.refine($event.target.value); });
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵtemplate(5, NgAisNumericSelector_option_5_Template, 2, 5, "option", 1);
        ɵngcc0.ɵɵtext(6, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx(""));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("select"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.state.options);
    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisNumericSelector.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisNumericSelector.propDecorators = {
    attribute: [{ type: Input }],
    operator: [{ type: Input }],
    items: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisNumericSelector, [{
        type: Component,
        args: [{
                selector: 'ais-numeric-selector',
                template: `
    <div [class]="cx('')">
      <select
        [class]="cx('select')"
        (change)="state.refine($event.target.value)"
      >
        <option
          [class]="cx('option')"
          *ngFor="let item of state.options"
          [value]="item.value"
          [selected]="item.value === state.currentRefinement"
        >
          {{item.label}}
        </option>
      </select>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { operator: [{
            type: Input
        }], attribute: [{
            type: Input
        }], items: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisNumericSelectorModule {
}
NgAisNumericSelectorModule.ɵfac = function NgAisNumericSelectorModule_Factory(t) { return new (t || NgAisNumericSelectorModule)(); };
NgAisNumericSelectorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisNumericSelectorModule });
NgAisNumericSelectorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisNumericSelectorModule, { declarations: function () { return [NgAisNumericSelector]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisNumericSelector]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisNumericSelectorModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisNumericSelector],
                entryComponents: [NgAisNumericSelector],
                exports: [NgAisNumericSelector],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const range = require('lodash/range');
class NgAisPagination extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('Pagination');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.showFirst = true;
        this.showLast = false;
        this.showPrevious = true;
        this.showNext = true;
        this.padding = 3;
        this.state = {
            createURL: noop,
            currentRefinement: 0,
            nbHits: 0,
            nbPages: 0,
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get pages() {
        const { nbPages, currentRefinement } = this.state;
        /** @type {?} */
        const pagesArray = Array.apply(null, { length: nbPages }).map(Number.call, Number);
        /** @type {?} */
        const pagesPadding = typeof this.padding === 'string'
            ? parseInt(this.padding, 10)
            : this.padding;
        if (pagesPadding && pagesPadding > 0) {
            // should not display pages that does not exists
            if (nbPages < pagesPadding * 2 + 1) {
                return pagesArray;
            }
            /** @type {?} */
            const minDelta = currentRefinement - pagesPadding - 1;
            /** @type {?} */
            const maxDelta = currentRefinement + pagesPadding + 1;
            if (minDelta < 0) {
                return range(0, currentRefinement + pagesPadding + Math.abs(minDelta));
            }
            if (maxDelta > nbPages) {
                return range(currentRefinement - pagesPadding - (maxDelta - nbPages), nbPages);
            }
            return range(currentRefinement - pagesPadding, currentRefinement + pagesPadding + 1);
        }
        return pagesArray;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectPagination, {
            maxPages: parseNumberInput(this.totalPages),
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} page
     * @return {?}
     */
    refine(event, page) {
        event.stopPropagation();
        event.preventDefault();
        if (page < 0 ||
            page === this.state.currentRefinement ||
            page >= this.state.nbPages) {
            return;
        }
        this.state.refine(page);
    }
}
NgAisPagination.ɵfac = function NgAisPagination_Factory(t) { return new (t || NgAisPagination)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisPagination, selectors: [["ais-pagination"]], inputs: { showFirst: "showFirst", showLast: "showLast", showPrevious: "showPrevious", showNext: "showNext", padding: "padding", totalPages: "totalPages" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 17, vars: 9, consts: [[3, "class", "click", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], [3, "href"]], template: function NgAisPagination_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "ul");
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵtemplate(5, NgAisPagination_li_5_Template, 5, 5, "li", 0);
        ɵngcc0.ɵɵtext(6, "\n\n        ");
        ɵngcc0.ɵɵtemplate(7, NgAisPagination_li_7_Template, 5, 5, "li", 0);
        ɵngcc0.ɵɵtext(8, "\n\n        ");
        ɵngcc0.ɵɵtemplate(9, NgAisPagination_li_9_Template, 5, 6, "li", 1);
        ɵngcc0.ɵɵtext(10, "\n\n        ");
        ɵngcc0.ɵɵtemplate(11, NgAisPagination_li_11_Template, 5, 5, "li", 0);
        ɵngcc0.ɵɵtext(12, "\n\n        ");
        ɵngcc0.ɵɵtemplate(13, NgAisPagination_li_13_Template, 5, 5, "li", 0);
        ɵngcc0.ɵɵtext(14, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(15, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(16, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("list"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showFirst);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPrevious);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.pages);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNext);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showLast);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisPagination.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisPagination.propDecorators = {
    showFirst: [{ type: Input }],
    showLast: [{ type: Input }],
    showPrevious: [{ type: Input }],
    showNext: [{ type: Input }],
    padding: [{ type: Input }],
    totalPages: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPagination, [{
        type: Component,
        args: [{
                selector: 'ais-pagination',
                template: `
    <div [class]="cx()">
      <ul [class]="cx('list')">
        <li
          *ngIf="showFirst"
          (click)="refine($event, 0)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'firstPage') +
            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(0)"
            [class]="cx('link')"
          >
            ‹‹
          </a>
        </li>

        <li
          *ngIf="showPrevious"
          (click)="refine($event, state.currentRefinement - 1)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'previousPage') +
            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(state.currentRefinement - 1)"
            [class]="cx('link')"
          >
            ‹
          </a>
        </li>

        <li
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'page') +
            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')
          "
          *ngFor="let page of pages"
          (click)="refine($event, page)"
        >
          <a
            [class]="cx('link')"
            [href]="state.createURL(page)"
          >
            {{page + 1}}
          </a>
        </li>

        <li
          *ngIf="showNext"
          (click)="refine($event, state.currentRefinement + 1)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'nextPage') +
            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(state.currentRefinement + 1)"
            [class]="cx('link')"
          >
            ›
          </a>
        </li>

        <li
          *ngIf="showLast"
          (click)="refine($event, state.nbPages - 1)"
          [class]="
            cx('item') +
            ' ' +
            cx('item', 'lastPage') +
            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')
          "
        >
          <a
            [href]="state.createURL(state.nbPages - 1)"
            [class]="cx('link')"
          >
            ››
          </a>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { showFirst: [{
            type: Input
        }], showLast: [{
            type: Input
        }], showPrevious: [{
            type: Input
        }], showNext: [{
            type: Input
        }], padding: [{
            type: Input
        }], totalPages: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisPaginationModule {
}
NgAisPaginationModule.ɵfac = function NgAisPaginationModule_Factory(t) { return new (t || NgAisPaginationModule)(); };
NgAisPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisPaginationModule });
NgAisPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisPaginationModule, { declarations: function () { return [NgAisPagination]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisPagination]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPaginationModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisPagination],
                entryComponents: [NgAisPagination],
                exports: [NgAisPagination],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRangeSlider extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('RangeSlider');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.pips = true;
        this.tooltips = true;
        this.precision = 2;
        this.state = {
            range: { min: 0, max: 1 },
            refine: noop,
            start: [0, 1],
        };
        this.updateState = (/**
         * @param {?} state
         * @param {?} isFirstRendering
         * @return {?}
         */
        (state, isFirstRendering) => {
            if (isFirstRendering) {
                // create slider
                /** @type {?} */
                const config = {
                    animate: false,
                    behaviour: 'snap',
                    connect: true,
                    range: { min: 0, max: 1 },
                    start: [0, 1],
                    step: this.step,
                    tooltips: this.tooltips && [
                        { to: this.formatTooltip },
                        { to: this.formatTooltip },
                    ],
                };
                if (this.pips === true || typeof this.pips === 'undefined') {
                    Object.assign(config, {
                        pips: {
                            density: 3,
                            mode: 'positions',
                            stepped: true,
                            values: [0, 50, 100],
                        },
                    });
                }
                else if (this.pips !== undefined) {
                    Object.assign(config, { pips: this.pips });
                }
                this.slider = create(this.sliderContainer.nativeElement, config);
                // register listen events
                this.sliderContainer.nativeElement.noUiSlider.on('change', this.handleChange);
            }
            // update component inner state
            this.state = state;
            // update the slider state
            const { range: { min, max }, start, } = state;
            /** @type {?} */
            const disabled = min === max;
            /** @type {?} */
            const range = disabled ? { min, max: max + 0.0001 } : { min, max };
            this.slider.updateOptions({ disabled, range, start });
        });
        this.handleChange = (/**
         * @param {?} values
         * @return {?}
         */
        (values) => {
            this.state.refine(values);
        });
        this.formatTooltip = (/**
         * @param {?} value
         * @return {?}
         */
        (value) => {
            return value.toFixed(parseNumberInput(this.precision));
        });
    }
    /**
     * @return {?}
     */
    get step() {
        // compute step from the precision value
        /** @type {?} */
        const precision = parseNumberInput(this.precision) || 2;
        return 1 / Math.pow(10, precision);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectRange, {
            attributeName: this.attribute,
            max: parseNumberInput(this.max),
            min: parseNumberInput(this.min),
            precision: parseNumberInput(this.precision),
        });
        super.ngOnInit();
    }
}
NgAisRangeSlider.ɵfac = function NgAisRangeSlider_Factory(t) { return new (t || NgAisRangeSlider)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisRangeSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisRangeSlider, selectors: [["ais-range-slider"]], viewQuery: function NgAisRangeSlider_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c1, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sliderContainer = _t.first);
    } }, inputs: { pips: "pips", tooltips: "tooltips", precision: "precision", attribute: "attribute", min: "min", max: "max" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 4, consts: [["sliderContainer", ""]], template: function NgAisRangeSlider_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵelement(5, "div", null, 0);
        ɵngcc0.ɵɵtext(7, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(9, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("body"));
    } }, encapsulation: 2 });
/** @nocollapse */
NgAisRangeSlider.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisRangeSlider.propDecorators = {
    sliderContainer: [{ type: ViewChild, args: ['sliderContainer',] }],
    pips: [{ type: Input }],
    tooltips: [{ type: Input }],
    attribute: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    precision: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeSlider, [{
        type: Component,
        args: [{
                selector: 'ais-range-slider',
                template: `
    <div [class]="cx()">
      <div [class]="cx('body')">
        <div #sliderContainer></div>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { pips: [{
            type: Input
        }], tooltips: [{
            type: Input
        }], precision: [{
            type: Input
        }], sliderContainer: [{
            type: ViewChild,
            args: ['sliderContainer']
        }], attribute: [{
            type: Input
        }], min: [{
            type: Input
        }], max: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRangeSliderModule {
}
NgAisRangeSliderModule.ɵfac = function NgAisRangeSliderModule_Factory(t) { return new (t || NgAisRangeSliderModule)(); };
NgAisRangeSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisRangeSliderModule });
NgAisRangeSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRangeSliderModule, { declarations: function () { return [NgAisRangeSlider]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisRangeSlider]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeSliderModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRangeSlider],
                entryComponents: [NgAisRangeSlider],
                exports: [NgAisRangeSlider],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRefinementList extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('RefinementList');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.showMoreLabel = 'Show more';
        this.showLessLabel = 'Show less';
        this.searchPlaceholder = 'Search here...';
        this.operator = 'or';
        this.limit = 10;
        this.state = {
            canRefine: false,
            canToggleShowMore: false,
            createURL: noop,
            isShowingMore: false,
            items: [],
            refine: noop,
            toggleShowMore: noop,
            searchForItems: noop,
            isFormSearch: false,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    get items() {
        return typeof this.transformItems === 'function'
            ? this.transformItems(this.state.items)
            : this.state.items;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectRefinementList, {
            limit: parseNumberInput(this.limit),
            showMoreLimit: parseNumberInput(this.showMoreLimit),
            attributeName: this.attribute,
            operator: this.operator,
            sortBy: this.sortBy,
            escapeFacetValues: true,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    refine(event, item) {
        event.preventDefault();
        event.stopPropagation();
        if (this.state.canRefine) {
            // update UI directly, it will update the checkbox state
            item.isRefined = !item.isRefined;
            // refine through Algolia API
            this.state.refine(item.value);
        }
    }
}
NgAisRefinementList.ɵfac = function NgAisRefinementList_Factory(t) { return new (t || NgAisRefinementList)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisRefinementList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisRefinementList, selectors: [["ais-refinement-list"]], inputs: { showMoreLabel: "showMoreLabel", showLessLabel: "showLessLabel", searchPlaceholder: "searchPlaceholder", operator: "operator", limit: "limit", transformItems: "transformItems", searchable: "searchable", attribute: "attribute", showMoreLimit: "showMoreLimit", sortBy: "sortBy" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "class", "click", 4, "ngIf"], [3, "search", "searchPlaceholder"], [3, "click"], ["type", "checkbox", 3, "value", "checked"], ["attribute", "highlighted", 3, "hit"]], template: function NgAisRefinementList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisRefinementList_div_1_Template, 11, 7, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgAisFacetsSearch, NgAisHighlight]; }, encapsulation: 2 });
/** @nocollapse */
NgAisRefinementList.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisRefinementList.propDecorators = {
    showMoreLabel: [{ type: Input }],
    showLessLabel: [{ type: Input }],
    transformItems: [{ type: Input }],
    searchable: [{ type: Input }],
    searchPlaceholder: [{ type: Input }],
    attribute: [{ type: Input }],
    operator: [{ type: Input }],
    limit: [{ type: Input }],
    showMoreLimit: [{ type: Input }],
    sortBy: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRefinementList, [{
        type: Component,
        args: [{
                selector: 'ais-refinement-list',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <div
        *ngIf="searchable"
        [class]="cx('searchBox')"
      >
        <ais-facets-search
          [search]="state.searchForItems"
          [searchPlaceholder]="searchPlaceholder"
        >
        </ais-facets-search>
      </div>

      <ul [class]="cx('list')">
        <li
          [class]="getItemClass(item)"
          *ngFor="let item of items"
          (click)="refine($event, item)"
        >
          <label [class]="cx('label')">
            <input
              [class]="cx('checkbox')"
              type="checkbox"
              value="{{item.value}}"
              [checked]="item.isRefined"
            />
            <span [class]="cx('labelText')">
              <ais-highlight attribute="highlighted" [hit]="item"></ais-highlight>
            </span>
            <span [class]="cx('count')">{{item.count}}</span>
          </label>
        </li>
      </ul>

      <button
        [class]="cx('showMore')"
        *ngIf="showMoreLimit && state.canToggleShowMore"
        (click)="state.toggleShowMore()"
      >
        {{state.isShowingMore ? showLessLabel : showMoreLabel}}
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { showMoreLabel: [{
            type: Input
        }], showLessLabel: [{
            type: Input
        }], searchPlaceholder: [{
            type: Input
        }], operator: [{
            type: Input
        }], limit: [{
            type: Input
        }], transformItems: [{
            type: Input
        }], searchable: [{
            type: Input
        }], attribute: [{
            type: Input
        }], showMoreLimit: [{
            type: Input
        }], sortBy: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisFacetsSearch {
    constructor() {
        this.cx = bem('SearchBox');
        this.searchQuery = '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    handleChange(value) {
        this.searchQuery = value;
        this.search(value);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleSubmit(event) {
        event.preventDefault();
        this.search(this.searchQuery);
    }
}
NgAisFacetsSearch.ɵfac = function NgAisFacetsSearch_Factory(t) { return new (t || NgAisFacetsSearch)(); };
NgAisFacetsSearch.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisFacetsSearch, selectors: [["ais-facets-search"]], inputs: { searchPlaceholder: "searchPlaceholder", search: "search" }, decls: 25, vars: 14, consts: [["novalidate", "", 3, "submit"], ["autocapitalize", "off", "autocorrect", "off", "role", "textbox", "spellcheck", "false", "type", "text", 3, "placeholder", "value", "input"], ["title", "Submit the search query.", "type", "submit"], ["viewBox", "0 0 40 40", "width", "10", "height", "10", 3, "ngClass"], ["d", "M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"], ["type", "reset", "title", "Clear the search query.", "hidden", ""], ["viewBox", "0 0 20 20", "width", "10", "height", "10", 3, "ngClass"], ["d", "M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"]], template: function NgAisFacetsSearch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "form", 0);
        ɵngcc0.ɵɵlistener("submit", function NgAisFacetsSearch_Template_form_submit_3_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵelementStart(5, "input", 1);
        ɵngcc0.ɵɵlistener("input", function NgAisFacetsSearch_Template_input_input_5_listener($event) { return ctx.handleChange($event.target.value); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(6, "\n\n        ");
        ɵngcc0.ɵɵelementStart(7, "button", 2);
        ɵngcc0.ɵɵtext(8, "\n          ");
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(9, "svg", 3);
        ɵngcc0.ɵɵtext(10, "\n            ");
        ɵngcc0.ɵɵelement(11, "path", 4);
        ɵngcc0.ɵɵtext(12, "\n          ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(13, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(14, "\n\n        ");
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(15, "button", 5);
        ɵngcc0.ɵɵtext(16, "\n          ");
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(17, "svg", 6);
        ɵngcc0.ɵɵtext(18, "\n            ");
        ɵngcc0.ɵɵelement(19, "path", 7);
        ɵngcc0.ɵɵtext(20, "\n          ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(21, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(22, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(23, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(24, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("form"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("input"));
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.searchPlaceholder);
        ɵngcc0.ɵɵproperty("value", ctx.searchQuery);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("submit"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("submitIcon"));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵclassMap(ctx.cx("reset"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("resetIcon"));
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
NgAisFacetsSearch.propDecorators = {
    searchPlaceholder: [{ type: Input }],
    search: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisFacetsSearch, [{
        type: Component,
        args: [{
                selector: 'ais-facets-search',
                template: `
    <div [class]="cx()">
      <form
        [class]="cx('form')"
        (submit)="handleSubmit($event)"
        novalidate
      >
        <input
          [class]="cx('input')"
          autocapitalize="off"
          autocorrect="off"
          placeholder="{{searchPlaceholder}}"
          role="textbox"
          spellcheck="false"
          type="text"
          [value]="searchQuery"
          (input)="handleChange($event.target.value)"
        />

        <button
          [class]="cx('submit')"
          title="Submit the search query."
          type="submit"
        >
          <svg
            [ngClass]="cx('submitIcon')"
            viewBox="0 0 40 40"
            width="10"
            height="10"
          >
            <path d="M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"></path>
          </svg>
        </button>

        <button
          [class]="cx('reset')"
          type="reset"
          title="Clear the search query."
          hidden
        >
          <svg
            [ngClass]="cx('resetIcon')"
            viewBox="0 0 20 20"
            width="10"
            height="10"
          >
            <path d="M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"></path>
          </svg>
        </button>
      </form>
    </div>
  `
            }]
    }], function () { return []; }, { searchPlaceholder: [{
            type: Input
        }], search: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRefinementListModule {
}
NgAisRefinementListModule.ɵfac = function NgAisRefinementListModule_Factory(t) { return new (t || NgAisRefinementListModule)(); };
NgAisRefinementListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisRefinementListModule });
NgAisRefinementListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgAisHighlightModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRefinementListModule, { declarations: function () { return [NgAisRefinementList, NgAisFacetsSearch]; }, imports: function () { return [CommonModule, NgAisHighlightModule]; }, exports: function () { return [NgAisRefinementList]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRefinementListModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRefinementList, NgAisFacetsSearch],
                entryComponents: [NgAisRefinementList],
                exports: [NgAisRefinementList],
                imports: [CommonModule, NgAisHighlightModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisSearchBox extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('SearchBox');
        this.instantSearchParent = instantSearchParent;
        this.placeholder = 'Search';
        this.submitTitle = 'Submit';
        this.resetTitle = 'Reset';
        this.searchAsYouType = true;
        this.autofocus = false;
        // Output events
        // form
        this.submit = new EventEmitter();
        this.reset = new EventEmitter();
        // input
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
        this.state = {
            query: '',
            refine: noop,
        };
        this.createWidget(connectSearchBox);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.autofocus) {
            this.searchBox.nativeElement.focus();
        }
    }
    /**
     * @param {?} query
     * @return {?}
     */
    handleChange(query) {
        this.change.emit(query);
        if (this.searchAsYouType) {
            this.state.refine(query);
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleSubmit(event) {
        // send submit event to parent component
        this.submit.emit(event);
        event.preventDefault();
        if (!this.searchAsYouType) {
            this.state.refine(this.searchBox.nativeElement.value);
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleReset(event) {
        // send reset event to parent component
        this.reset.emit(event);
        // reset search
        this.state.refine('');
    }
}
NgAisSearchBox.ɵfac = function NgAisSearchBox_Factory(t) { return new (t || NgAisSearchBox)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisSearchBox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisSearchBox, selectors: [["ais-search-box"]], viewQuery: function NgAisSearchBox_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c2, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchBox = _t.first);
    } }, inputs: { placeholder: "placeholder", submitTitle: "submitTitle", resetTitle: "resetTitle", searchAsYouType: "searchAsYouType", autofocus: "autofocus" }, outputs: { submit: "submit", reset: "reset", change: "change", focus: "focus", blur: "blur" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 26, vars: 17, consts: [["novalidate", "", 3, "submit"], ["autocapitalize", "off", "autocorrect", "off", "role", "textbox", "spellcheck", "false", "type", "text", 3, "placeholder", "value", "input", "focus", "blur"], ["searchBox", ""], ["type", "submit", 3, "title"], ["viewBox", "0 0 40 40", "width", "40", "height", "40", 3, "ngClass"], ["d", "M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"], ["type", "reset", 3, "title", "hidden", "click"], ["viewBox", "0 0 20 20", "width", "20", "height", "20", 3, "ngClass"], ["d", "M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"]], template: function NgAisSearchBox_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "form", 0);
        ɵngcc0.ɵɵlistener("submit", function NgAisSearchBox_Template_form_submit_3_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵelementStart(5, "input", 1, 2);
        ɵngcc0.ɵɵlistener("input", function NgAisSearchBox_Template_input_input_5_listener($event) { return ctx.handleChange($event.target.value); })("focus", function NgAisSearchBox_Template_input_focus_5_listener($event) { return ctx.focus.emit($event); })("blur", function NgAisSearchBox_Template_input_blur_5_listener($event) { return ctx.blur.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n\n        ");
        ɵngcc0.ɵɵelementStart(8, "button", 3);
        ɵngcc0.ɵɵtext(9, "\n          ");
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(10, "svg", 4);
        ɵngcc0.ɵɵtext(11, "\n            ");
        ɵngcc0.ɵɵelement(12, "path", 5);
        ɵngcc0.ɵɵtext(13, "\n          ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(14, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(15, "\n\n        ");
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(16, "button", 6);
        ɵngcc0.ɵɵlistener("click", function NgAisSearchBox_Template_button_click_16_listener($event) { return ctx.handleReset($event); });
        ɵngcc0.ɵɵtext(17, "\n          ");
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(18, "svg", 7);
        ɵngcc0.ɵɵtext(19, "\n            ");
        ɵngcc0.ɵɵelement(20, "path", 8);
        ɵngcc0.ɵɵtext(21, "\n          ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(22, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(23, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(24, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(25, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("form"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("input"));
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵproperty("value", ctx.state.query);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMap(ctx.cx("submit"));
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.submitTitle);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("submitIcon"));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵclassMap(ctx.cx("reset"));
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.resetTitle);
        ɵngcc0.ɵɵproperty("hidden", !ctx.state.query || ctx.state.query && !ctx.state.query.trim());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.cx("resetIcon"));
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
/** @nocollapse */
NgAisSearchBox.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisSearchBox.propDecorators = {
    searchBox: [{ type: ViewChild, args: ['searchBox',] }],
    placeholder: [{ type: Input }],
    submitTitle: [{ type: Input }],
    resetTitle: [{ type: Input }],
    searchAsYouType: [{ type: Input }],
    autofocus: [{ type: Input }],
    submit: [{ type: Output }],
    reset: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }],
    blur: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSearchBox, [{
        type: Component,
        args: [{
                selector: 'ais-search-box',
                template: `
    <div [class]="cx()">
      <form
        [class]="cx('form')"
        novalidate
        (submit)="handleSubmit($event)"
      >
        <input
          [class]="cx('input')"
          autocapitalize="off"
          autocorrect="off"
          placeholder="{{placeholder}}"
          role="textbox"
          spellcheck="false"
          type="text"
          [value]="state.query"
          (input)="handleChange($event.target.value)"
          (focus)="focus.emit($event)"
          (blur)="blur.emit($event)"
          #searchBox
        />

        <button
          [class]="cx('submit')"
          type="submit"
          title="{{submitTitle}}"
        >
          <svg
            [ngClass]="cx('submitIcon')"
            viewBox="0 0 40 40"
            width="40"
            height="40"
          >
            <path d="M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"></path>
          </svg>
        </button>

        <button
          [class]="cx('reset')"
          type="reset"
          title="{{resetTitle}}"
          (click)="handleReset($event)"
          [hidden]="!state.query || (state.query && !state.query.trim())">
          <svg
            [ngClass]="cx('resetIcon')"
            viewBox="0 0 20 20"
            width="20"
            height="20"
          >
            <path d="M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"></path>
          </svg>
        </button>
      </form>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { placeholder: [{
            type: Input
        }], submitTitle: [{
            type: Input
        }], resetTitle: [{
            type: Input
        }], searchAsYouType: [{
            type: Input
        }], autofocus: [{
            type: Input
        }], submit: [{
            type: Output
        }], reset: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], blur: [{
            type: Output
        }], searchBox: [{
            type: ViewChild,
            args: ['searchBox']
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisSearchBoxModule {
}
NgAisSearchBoxModule.ɵfac = function NgAisSearchBoxModule_Factory(t) { return new (t || NgAisSearchBoxModule)(); };
NgAisSearchBoxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisSearchBoxModule });
NgAisSearchBoxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisSearchBoxModule, { declarations: function () { return [NgAisSearchBox]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisSearchBox]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSearchBoxModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisSearchBox],
                entryComponents: [NgAisSearchBox],
                exports: [NgAisSearchBox],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisSortBy extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('SortBy');
        this.instantSearchParent = instantSearchParent;
        this.state = {
            currentRefinement: null,
            options: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectSortBySelector, { indices: this.items });
        super.ngOnInit();
    }
}
NgAisSortBy.ɵfac = function NgAisSortBy_Factory(t) { return new (t || NgAisSortBy)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisSortBy.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisSortBy, selectors: [["ais-sort-by"]], inputs: { items: "items" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 5, consts: [[3, "change"], [3, "class", "value", "selected", 4, "ngFor", "ngForOf"], [3, "value", "selected"]], template: function NgAisSortBy_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "select", 0);
        ɵngcc0.ɵɵlistener("change", function NgAisSortBy_Template_select_change_3_listener($event) { return ctx.state.refine($event.target.value); });
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵtemplate(5, NgAisSortBy_option_5_Template, 2, 5, "option", 1);
        ɵngcc0.ɵɵtext(6, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("select"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.state.options);
    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2 });
/** @nocollapse */
NgAisSortBy.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisSortBy.propDecorators = {
    items: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSortBy, [{
        type: Component,
        args: [{
                selector: 'ais-sort-by',
                template: `
    <div [class]="cx()">
      <select
        [class]="cx('select')"
        (change)="state.refine($event.target.value)"
      >
        <option
          [class]="cx('option')"
          *ngFor="let item of state.options"
          [value]="item.value"
          [selected]="item.value === state.currentRefinement"
        >
          {{item.label}}
        </option>
      </select>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { items: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisSortByModule {
}
NgAisSortByModule.ɵfac = function NgAisSortByModule_Factory(t) { return new (t || NgAisSortByModule)(); };
NgAisSortByModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisSortByModule });
NgAisSortByModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisSortByModule, { declarations: function () { return [NgAisSortBy]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisSortBy]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisSortByModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisSortBy],
                entryComponents: [NgAisSortBy],
                exports: [NgAisSortBy],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRatingMenu extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('RatingMenu');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.andUpLabel = '& Up';
        this.max = 5;
        this.state = {
            createURL: noop,
            hasNoResults: false,
            items: [],
            refine: noop,
        };
    }
    /**
     * @return {?}
     */
    get isHidden() {
        return this.state.items.length === 0 && this.autoHideContainer;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectStarRating, {
            attributeName: this.attribute,
            max: this.max,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} value
     * @return {?}
     */
    handleClick(event, value) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(value);
    }
}
NgAisRatingMenu.ɵfac = function NgAisRatingMenu_Factory(t) { return new (t || NgAisRatingMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisRatingMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisRatingMenu, selectors: [["ais-rating-menu"]], inputs: { andUpLabel: "andUpLabel", max: "max", attribute: "attribute" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[3, "class", 4, "ngIf"], [2, "display", "none"], ["id", "ais-StarRating-starSymbol", "viewBox", "0 0 24 24", "width", "24", "height", "24"], ["d", "M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"], ["id", "ais-StarRating-starEmptySymbol", "viewBox", "0 0 24 24", "width", "24", "height", "24"], ["d", "M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], [3, "href", "click"], ["aria-hidden", "true", 3, "ngClass", 4, "ngFor", "ngForOf"], ["aria-hidden", "true"], ["aria-hidden", "true", 3, "ngClass"], [0, "xlink", "href", "#ais-StarRating-starSymbol", 4, "ngIf"], [0, "xlink", "href", "#ais-StarRating-starEmptySymbol", 4, "ngIf"], [0, "xlink", "href", "#ais-StarRating-starSymbol"], [0, "xlink", "href", "#ais-StarRating-starEmptySymbol"]], template: function NgAisRatingMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵtemplate(1, NgAisRatingMenu_div_1_Template, 20, 5, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isHidden);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], encapsulation: 2 });
/** @nocollapse */
NgAisRatingMenu.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisRatingMenu.propDecorators = {
    andUpLabel: [{ type: Input }],
    attribute: [{ type: Input }],
    max: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRatingMenu, [{
        type: Component,
        args: [{
                selector: 'ais-rating-menu',
                template: `
    <div
      [class]="cx()"
      *ngIf="!isHidden"
    >
      <svg style="display:none;">
        <symbol
          id="ais-StarRating-starSymbol"
          viewBox="0 0 24 24"
          width="24"
          height="24"
        >
          <path d="M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"/>
        </symbol>
        <symbol
          id="ais-StarRating-starEmptySymbol"
          viewBox="0 0 24 24"
          width="24"
          height="24"
        >
          <path d="M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"/>
        </symbol>
      </svg>

      <ul [class]="cx('list')">
        <li
          *ngFor="let item of state.items"
          [class]="getItemClass(item)"
          (click)="handleClick($event, item.value)"
        >
          <a
            href="{{state.createURL(item.value)}}"
            [class]="cx('link')"
            (click)="handleClick($event, item.value)"
          >
            <svg
              *ngFor="let star of item.stars"
              [ngClass]="cx('starIcon')"
              aria-hidden="true"
            >
              <use
                *ngIf="star"
                xlink:href="#ais-StarRating-starSymbol"
              >
              </use>

              <use
                *ngIf="!star"
                xlink:href="#ais-StarRating-starEmptySymbol"
              >
              </use>
            </svg>

            <span [class]="cx('label')" aria-hidden="true">{{andUpLabel}}</span>
            <span [class]="cx('count')">{{item.count}}</span>
          </a>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { andUpLabel: [{
            type: Input
        }], max: [{
            type: Input
        }], attribute: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRatingMenuModule {
}
NgAisRatingMenuModule.ɵfac = function NgAisRatingMenuModule_Factory(t) { return new (t || NgAisRatingMenuModule)(); };
NgAisRatingMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisRatingMenuModule });
NgAisRatingMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRatingMenuModule, { declarations: function () { return [NgAisRatingMenu]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisRatingMenu]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRatingMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRatingMenu],
                entryComponents: [NgAisRatingMenu],
                exports: [NgAisRatingMenu],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisStats extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('Stats');
        this.instantSearchParent = instantSearchParent;
        this.state = {
            hitPerPage: 0,
            nbHits: 0,
            nbPages: 0,
            page: 0,
            processingTimeMS: 0,
            query: '',
        };
        this.createWidget(connectStats);
    }
    /**
     * @return {?}
     */
    get templateContext() {
        return { state: this.state };
    }
}
NgAisStats.ɵfac = function NgAisStats_Factory(t) { return new (t || NgAisStats)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisStats.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisStats, selectors: [["ais-stats"]], contentQueries: function NgAisStats_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 8, vars: 5, consts: [[4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "class", 4, "ngIf"]], template: function NgAisStats_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵtemplate(3, NgAisStats_ng_container_3_Template, 2, 0, "ng-container", 0);
        ɵngcc0.ɵɵtext(4, "\n\n      ");
        ɵngcc0.ɵɵtemplate(5, NgAisStats_span_5_Template, 2, 4, "span", 1);
        ɵngcc0.ɵɵtext(6, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ctx.templateContext);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], encapsulation: 2 });
/** @nocollapse */
NgAisStats.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisStats.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef,] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisStats, [{
        type: Component,
        args: [{
                selector: 'ais-stats',
                template: `
    <div [class]="cx()">
      <ng-container *ngTemplateOutlet="template; context: templateContext">
      </ng-container>

      <span *ngIf="!template" [class]="cx('text')">
        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.
      </span>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { template: [{
            type: ContentChild,
            args: [TemplateRef]
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisStatsModule {
}
NgAisStatsModule.ɵfac = function NgAisStatsModule_Factory(t) { return new (t || NgAisStatsModule)(); };
NgAisStatsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisStatsModule });
NgAisStatsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisStatsModule, { declarations: function () { return [NgAisStats]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisStats]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisStatsModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisStats],
                entryComponents: [NgAisStats],
                exports: [NgAisStats],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisToggle extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('ToggleRefinement');
        this.instantSearchParent = instantSearchParent;
        this.values = { on: true, off: undefined };
        this.state = {
            createURL: noop,
            refine: noop,
            value: {},
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectToggle, {
            attributeName: this.attribute,
            label: this.label,
            values: this.values,
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleClick(event) {
        event.preventDefault();
        event.stopPropagation();
        this.state.refine(this.state.value);
    }
}
NgAisToggle.ɵfac = function NgAisToggle_Factory(t) { return new (t || NgAisToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisToggle, selectors: [["ais-toggle"]], inputs: { values: "values", attribute: "attribute", label: "label" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 21, vars: 18, consts: [[3, "click"], ["type", "checkbox", 3, "value", "checked"]], template: function NgAisToggle_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "ul");
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵelementStart(5, "li", 0);
        ɵngcc0.ɵɵlistener("click", function NgAisToggle_Template_li_click_5_listener($event) { return ctx.handleClick($event); });
        ɵngcc0.ɵɵtext(6, "\n          ");
        ɵngcc0.ɵɵelementStart(7, "label");
        ɵngcc0.ɵɵtext(8, "\n            ");
        ɵngcc0.ɵɵelement(9, "input", 1);
        ɵngcc0.ɵɵtext(10, "\n\n            ");
        ɵngcc0.ɵɵelementStart(11, "span");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(13, "\n\n            ");
        ɵngcc0.ɵɵelementStart(14, "span");
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(16, "\n          ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(17, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(18, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(19, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(20, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("list"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("item"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("checkbox"));
        ɵngcc0.ɵɵpropertyInterpolate("value", ctx.state.value.name);
        ɵngcc0.ɵɵproperty("checked", ctx.state.value.isRefined);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("labelText"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("\n              ", ctx.label || ctx.state.value.name, "\n            ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("count"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.state.value.count);
    } }, encapsulation: 2 });
/** @nocollapse */
NgAisToggle.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisToggle.propDecorators = {
    attribute: [{ type: Input }],
    label: [{ type: Input }],
    values: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisToggle, [{
        type: Component,
        args: [{
                selector: 'ais-toggle',
                template: `
    <div [class]="cx()">
      <ul [class]="cx('list')">
        <li
          [class]="cx('item')"
          (click)="handleClick($event)">
          <label [class]="cx('label')">
            <input
              [class]="cx('checkbox')"
              type="checkbox"
              value="{{state.value.name}}"
              [checked]="state.value.isRefined"
            />

            <span [class]="cx('labelText')">
              {{label || state.value.name}}
            </span>

            <span [class]="cx('count')">{{state.value.count}}</span>
          </label>
        </li>
      </ul>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { values: [{
            type: Input
        }], attribute: [{
            type: Input
        }], label: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisToggleModule {
}
NgAisToggleModule.ɵfac = function NgAisToggleModule_Factory(t) { return new (t || NgAisToggleModule)(); };
NgAisToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisToggleModule });
NgAisToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisToggleModule, { declarations: function () { return [NgAisToggle]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisToggle]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisToggleModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisToggle],
                entryComponents: [NgAisToggle],
                exports: [NgAisToggle],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRangeInput extends BaseWidget {
    /**
     * @param {?} instantSearchParent
     */
    constructor(instantSearchParent) {
        super('RangeInput');
        this.instantSearchParent = instantSearchParent;
        // render options
        this.currency = '$';
        this.separator = 'to';
        this.submitLabel = 'Go';
        this.precision = 2;
        // inner state
        this.minInputValue = '';
        this.maxInputValue = '';
        this.state = {
            range: { min: undefined, max: undefined },
            refine: noop,
            start: [0, 0],
        };
    }
    /**
     * @return {?}
     */
    get step() {
        /** @type {?} */
        const precision = parseNumberInput(this.precision) || 2;
        return 1 / Math.pow(10, precision);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectRange, {
            attributeName: this.attribute,
            max: parseNumberInput(this.max),
            min: parseNumberInput(this.min),
            precision: parseNumberInput(this.precision),
        });
        super.ngOnInit();
    }
    /**
     * @param {?} event
     * @param {?} type
     * @return {?}
     */
    handleChange(event, type) {
        /** @type {?} */
        const value = parseNumberInput(event.target.value);
        if (type === 'min') {
            this.minInputValue = value;
        }
        else {
            this.maxInputValue = value;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleSubmit(event) {
        event.preventDefault();
        this.state.refine([this.minInputValue, this.maxInputValue]);
    }
}
NgAisRangeInput.ɵfac = function NgAisRangeInput_Factory(t) { return new (t || NgAisRangeInput)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisRangeInput.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisRangeInput, selectors: [["ais-range-input"]], inputs: { currency: "currency", separator: "separator", submitLabel: "submitLabel", precision: "precision", attribute: "attribute", min: "min", max: "max" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 29, vars: 34, consts: [["novalidate", "", 3, "submit"], ["type", "number", 3, "min", "max", "placeholder", "value", "step", "change"], [3, "click"]], template: function NgAisRangeInput_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵelementStart(3, "form", 0);
        ɵngcc0.ɵɵlistener("submit", function NgAisRangeInput_Template_form_submit_3_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵtext(4, "\n        ");
        ɵngcc0.ɵɵelementStart(5, "label");
        ɵngcc0.ɵɵtext(6, "\n          ");
        ɵngcc0.ɵɵelementStart(7, "span");
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(9, "\n          ");
        ɵngcc0.ɵɵelementStart(10, "input", 1);
        ɵngcc0.ɵɵlistener("change", function NgAisRangeInput_Template_input_change_10_listener($event) { return ctx.handleChange($event, "min"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(11, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(12, "\n\n        ");
        ɵngcc0.ɵɵelementStart(13, "span");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(15, "\n\n        ");
        ɵngcc0.ɵɵelementStart(16, "label");
        ɵngcc0.ɵɵtext(17, "\n          ");
        ɵngcc0.ɵɵelementStart(18, "span");
        ɵngcc0.ɵɵtext(19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(20, "\n          ");
        ɵngcc0.ɵɵelementStart(21, "input", 1);
        ɵngcc0.ɵɵlistener("change", function NgAisRangeInput_Template_input_change_21_listener($event) { return ctx.handleChange($event, "max"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(22, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(23, "\n\n        ");
        ɵngcc0.ɵɵelementStart(24, "button", 2);
        ɵngcc0.ɵɵlistener("click", function NgAisRangeInput_Template_button_click_24_listener($event) { return ctx.handleSubmit($event); });
        ɵngcc0.ɵɵtext(25);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(26, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(27, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(28, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cx());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("form"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("currency"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.currency);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("input", "min"));
        ɵngcc0.ɵɵproperty("min", ctx.state.range.min)("max", ctx.state.range.max)("placeholder", ctx.state.range.min)("value", ctx.minInputValue)("step", ctx.step);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMap(ctx.cx("separator"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.separator);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("label"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("currency"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.currency);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.cx("input", "max"));
        ɵngcc0.ɵɵproperty("min", ctx.state.range.min)("max", ctx.state.range.max)("placeholder", ctx.state.range.max)("value", ctx.maxInputValue)("step", ctx.step);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMap(ctx.cx("submit"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("\n          ", ctx.submitLabel, "\n        ");
    } }, encapsulation: 2 });
/** @nocollapse */
NgAisRangeInput.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisRangeInput.propDecorators = {
    currency: [{ type: Input }],
    separator: [{ type: Input }],
    submitLabel: [{ type: Input }],
    attribute: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    precision: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeInput, [{
        type: Component,
        args: [{
                selector: 'ais-range-input',
                template: `
    <div [class]="cx()">
      <form
        [class]="cx('form')"
        (submit)="handleSubmit($event)"
        novalidate
      >
        <label [class]="cx('label')">
          <span [class]="cx('currency')">{{currency}}</span>
          <input
            [class]="cx('input', 'min')"
            type="number"
            [min]="state.range.min"
            [max]="state.range.max"
            [placeholder]="state.range.min"
            [value]="minInputValue"
            [step]="step"
            (change)="handleChange($event, 'min')"
          />
        </label>

        <span [class]="cx('separator')">{{separator}}</span>

        <label [class]="cx('label')">
          <span [class]="cx('currency')">{{currency}}</span>
          <input
            [class]="cx('input', 'max')"
            type="number"
            [min]="state.range.min"
            [max]="state.range.max"
            [placeholder]="state.range.max"
            [value]="maxInputValue"
            [step]="step"
            (change)="handleChange($event, 'max')"
          />
        </label>

        <button
          [class]="cx('submit')"
          (click)="handleSubmit($event)"
        >
          {{submitLabel}}
        </button>
      </form>
    </div>
  `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { currency: [{
            type: Input
        }], separator: [{
            type: Input
        }], submitLabel: [{
            type: Input
        }], precision: [{
            type: Input
        }], attribute: [{
            type: Input
        }], min: [{
            type: Input
        }], max: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisRangeInputModule {
}
NgAisRangeInputModule.ɵfac = function NgAisRangeInputModule_Factory(t) { return new (t || NgAisRangeInputModule)(); };
NgAisRangeInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisRangeInputModule });
NgAisRangeInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRangeInputModule, { declarations: function () { return [NgAisRangeInput]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisRangeInput]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRangeInputModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisRangeInput],
                entryComponents: [NgAisRangeInput],
                exports: [NgAisRangeInput],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisPanel {
}
NgAisPanel.ɵfac = function NgAisPanel_Factory(t) { return new (t || NgAisPanel)(); };
NgAisPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisPanel, selectors: [["ais-panel"]], inputs: { header: "header", footer: "footer" }, ngContentSelectors: _c0, decls: 13, vars: 2, consts: [[1, "ais-Panel"], ["class", "ais-Panel-header", 4, "ngIf"], [1, "ais-Panel-body"], ["class", "ais-Panel-footer", 4, "ngIf"], [1, "ais-Panel-header"], [1, "ais-Panel-footer"]], template: function NgAisPanel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtext(0, "\n    ");
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n      ");
        ɵngcc0.ɵɵtemplate(3, NgAisPanel_div_3_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵtext(4, "\n\n      ");
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵtext(6, "\n        ");
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵtext(8, "\n      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(9, "\n\n      ");
        ɵngcc0.ɵɵtemplate(10, NgAisPanel_div_10_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtext(11, "\n    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(12, "\n  ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footer);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
NgAisPanel.propDecorators = {
    header: [{ type: Input }],
    footer: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPanel, [{
        type: Component,
        args: [{
                selector: 'ais-panel',
                template: `
    <div class="ais-Panel">
      <div *ngIf="header" class="ais-Panel-header">
        {{header}}
      </div>

      <div class="ais-Panel-body">
        <ng-content></ng-content>
      </div>

      <div *ngIf="footer" class="ais-Panel-footer">
        {{footer}}
      </div>
    </div>
  `
            }]
    }], null, { header: [{
            type: Input
        }], footer: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisPanelModule {
}
NgAisPanelModule.ɵfac = function NgAisPanelModule_Factory(t) { return new (t || NgAisPanelModule)(); };
NgAisPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisPanelModule });
NgAisPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisPanelModule, { declarations: function () { return [NgAisPanel]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisPanel]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisPanelModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisPanel],
                entryComponents: [NgAisPanel],
                exports: [NgAisPanel],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisConfigure extends BaseWidget {
    /**
     * @param {?} differs
     * @param {?} instantSearchParent
     */
    constructor(differs, instantSearchParent) {
        super('Configure');
        this.differs = differs;
        this.instantSearchParent = instantSearchParent;
        // SearchParameters (I don't know how to get the values of the type)
        this.state = {
            refine: noop,
        };
    }
    /**
     * @param {?} values
     * @return {?}
     */
    set searchParameters(values) {
        this.internalSearchParameters = values;
        if (!this.differ && values) {
            this.differ = this.differs.find(values).create();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.createWidget(connectConfigure, {
            searchParameters: this.internalSearchParameters,
        });
        super.ngOnInit();
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        if (this.differ) {
            /** @type {?} */
            const changes = this.differ.diff(this.internalSearchParameters);
            if (changes) {
                this.state.refine(this.internalSearchParameters);
            }
        }
    }
}
NgAisConfigure.ɵfac = function NgAisConfigure_Factory(t) { return new (t || NgAisConfigure)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**
                 * @return {?}
                 */() => NgAisInstantSearch)))); };
NgAisConfigure.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgAisConfigure, selectors: [["ais-configure"]], inputs: { searchParameters: "searchParameters" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function NgAisConfigure_Template(rf, ctx) { }, encapsulation: 2 });
/** @nocollapse */
NgAisConfigure.ctorParameters = () => [
    { type: KeyValueDiffers },
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                     * @return {?}
                     */
                    () => NgAisInstantSearch)),] }] }
];
NgAisConfigure.propDecorators = {
    searchParameters: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisConfigure, [{
        type: Component,
        args: [{
                selector: 'ais-configure',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.KeyValueDiffers }, { type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(( /**
                                     * @return {?}
                                     */() => NgAisInstantSearch))]
            }] }]; }, { searchParameters: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgAisConfigureModule {
}
NgAisConfigureModule.ɵfac = function NgAisConfigureModule_Factory(t) { return new (t || NgAisConfigureModule)(); };
NgAisConfigureModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisConfigureModule });
NgAisConfigureModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisConfigureModule, { declarations: function () { return [NgAisConfigure]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgAisConfigure]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisConfigureModule, [{
        type: NgModule,
        args: [{
                declarations: [NgAisConfigure],
                entryComponents: [NgAisConfigure],
                exports: [NgAisConfigure],
                imports: [CommonModule]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// AOT + Rollup workaround
// https://github.com/rollup/rollup/issues/1267#issuecomment-296395734
/** @type {?} */
const algoliasearch$1 = algoliasearchProxy__default$1 || algoliasearchProxy$1;
/** @type {?} */
const encode = encodeProxy__default || encodeProxy;
/**
 * @param {?} __0
 * @return {?}
 */
function createSSRAlgoliaClient({ httpClient, HttpHeaders, transferState, makeStateKey, options = {}, }) {
    console.warn('`createSSRAlgoliaClient` is deprecated in favor of `createSSRSearchClient` to be plugged to `searchClient`.');
    return (/**
     * @param {?} _
     * @param {?} appId
     * @param {?} apiKey
     * @return {?}
     */
    (_, appId, apiKey) => createSSRSearchClient({
        appId,
        apiKey,
        httpClient,
        HttpHeaders,
        transferState,
        makeStateKey,
        options,
    }));
}
/**
 * @param {?} __0
 * @return {?}
 */
function createSSRSearchClient({ appId, apiKey, httpClient, HttpHeaders, transferState, makeStateKey, options = {}, }) {
    /** @type {?} */
    const client = algoliasearch$1(appId, apiKey, options);
    client.addAlgoliaAgent(`angular (${VERSION.full})`);
    client.addAlgoliaAgent(`angular-instantsearch (${VERSION$1})`);
    client.addAlgoliaAgent(`angular-instantsearch-server (${VERSION$1})`);
    client._request = (/**
     * @param {?} rawUrl
     * @param {?} opts
     * @return {?}
     */
    (rawUrl, opts) => {
        /** @type {?} */
        let headers = new HttpHeaders();
        headers = headers.set('content-type', opts.method === 'POST'
            ? 'application/x-www-form-urlencoded'
            : 'application/json');
        headers = headers.set('accept', 'application/json');
        /** @type {?} */
        const url = rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(opts.headers);
        /** @type {?} */
        const transferStateKey = makeStateKey(`ngais(${opts.body})`);
        if (transferState.hasKey(transferStateKey)) {
            /** @type {?} */
            const resp = JSON.parse(transferState.get(transferStateKey, {}));
            return Promise.resolve({
                statusCode: resp.status,
                body: resp.body,
                headers: resp.headers,
            });
        }
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        (resolve, reject) => {
            httpClient
                .request(opts.method, url, {
                headers,
                body: opts.body,
                observe: 'response',
            })
                .subscribe((/**
             * @param {?} resp
             * @return {?}
             */
            resp => {
                transferState.set(transferStateKey, JSON.stringify(resp));
                resolve({
                    statusCode: resp.status,
                    body: resp.body,
                    headers: resp.headers,
                });
            }), (/**
             * @param {?} resp
             * @return {?}
             */
            resp => reject({
                statusCode: resp.status,
                body: resp.body,
                headers: resp.headers,
            })));
        }));
    });
    return client;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Transforms url query to SearchParameters
/**
 * @param {?} req
 * @return {?}
 */
function parseServerRequest(req) {
    if (req && req.url && req.url.includes('?')) {
        /** @type {?} */
        const query = req.url.split('?')[1];
        return AlgoliaSearchHelper.getConfigurationFromQueryString(query);
    }
    return {};
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const NGIS_MODULES = [
    NgAisInstantSearchModule,
    NgAisHitsModule,
    NgAisSearchBoxModule,
    NgAisClearRefinementsModule,
    NgAisMenuModule,
    NgAisPaginationModule,
    NgAisRefinementListModule,
    NgAisHitsPerPageModule,
    NgAisSortByModule,
    NgAisNumericSelectorModule,
    NgAisNumericMenuModule,
    NgAisStatsModule,
    NgAisToggleModule,
    NgAisInfiniteHitsModule,
    NgAisCurrentRefinementsModule,
    NgAisHierarchicalMenuModule,
    NgAisRatingMenuModule,
    NgAisRangeSliderModule,
    NgAisBreadcrumbModule,
    NgAisHighlightModule,
    NgAisRangeInputModule,
    NgAisPanelModule,
    NgAisConfigureModule,
];
class NgAisRootModule {
}
NgAisRootModule.ɵfac = function NgAisRootModule_Factory(t) { return new (t || NgAisRootModule)(); };
NgAisRootModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisRootModule });
NgAisRootModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[NgAisInstantSearchModule.forRoot()], NgAisInstantSearchModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericSelectorModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisRootModule, { imports: [NgAisInstantSearchModule], exports: [NgAisInstantSearchModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericSelectorModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisRootModule, [{
        type: NgModule,
        args: [{
                exports: NGIS_MODULES,
                imports: [NgAisInstantSearchModule.forRoot()]
            }]
    }], null, null); })();
class NgAisModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return { ngModule: NgAisRootModule };
    }
}
NgAisModule.ɵfac = function NgAisModule_Factory(t) { return new (t || NgAisModule)(); };
NgAisModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAisModule });
NgAisModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [NGIS_MODULES, NgAisInstantSearchModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericSelectorModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAisModule, { imports: [NgAisInstantSearchModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericSelectorModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule], exports: [NgAisInstantSearchModule, NgAisHitsModule, NgAisSearchBoxModule, NgAisClearRefinementsModule, NgAisMenuModule, NgAisPaginationModule, NgAisRefinementListModule, NgAisHitsPerPageModule, NgAisSortByModule, NgAisNumericSelectorModule, NgAisNumericMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisInfiniteHitsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisRatingMenuModule, NgAisRangeSliderModule, NgAisBreadcrumbModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgAisModule, [{
        type: NgModule,
        args: [{ imports: NGIS_MODULES, exports: NGIS_MODULES }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgAisBreadcrumbModule, NgAisClearRefinementsModule, NgAisCurrentRefinementsModule, NgAisHierarchicalMenuModule, NgAisHitsPerPageModule, NgAisHitsModule, NgAisInfiniteHitsModule, NgAisInstantSearchModule, NgAisMenuModule, NgAisNumericMenuModule, NgAisNumericSelectorModule, NgAisPaginationModule, NgAisRangeSliderModule, NgAisRefinementListModule, NgAisSearchBoxModule, NgAisSortByModule, NgAisRatingMenuModule, NgAisStatsModule, NgAisToggleModule, NgAisHighlightModule, NgAisRangeInputModule, NgAisPanelModule, NgAisConfigureModule, createSSRAlgoliaClient, createSSRSearchClient, parseServerRequest, BaseWidget, Widget, NgAisInstantSearch, NgAisRootModule, NgAisModule, NgAisBreadcrumb as ɵb, NgAisClearRefinements as ɵc, NgAisConfigure as ɵx, NgAisCurrentRefinements as ɵd, NgAisHierarchicalMenu as ɵe, NgAisHierarchicalMenuItem as ɵf, NgAisHighlight as ɵi, NgAisHitsPerPage as ɵg, NgAisHits as ɵh, NgAisInfiniteHits as ɵj, NgAisMenu as ɵk, NgAisNumericMenu as ɵl, NgAisNumericSelector as ɵm, NgAisPagination as ɵn, NgAisPanel as ɵa, NgAisRangeInput as ɵw, NgAisRangeSlider as ɵo, NgAisRatingMenu as ɵt, NgAisFacetsSearch as ɵq, NgAisRefinementList as ɵp, NgAisSearchBox as ɵr, NgAisSortBy as ɵs, NgAisStats as ɵu, NgAisToggle as ɵv };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,