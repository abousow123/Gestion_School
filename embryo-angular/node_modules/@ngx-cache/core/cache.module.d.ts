import { InjectionToken, Injector, ModuleWithProviders } from '@angular/core';
import { CacheLoader, CacheStaticLoader } from './cache.loader';
import { CacheService } from './cache.service';
import { Storage } from './storage';
import * as i0 from "@angular/core";
export declare const STORAGE: InjectionToken<Storage>;
export declare const cacheFactory: () => CacheStaticLoader;
export declare const cacheServiceFactory: (loader: CacheLoader, platformId: any, injector: Injector) => CacheService;
export declare class CacheModule {
    static forRoot(configuredProvider?: any): ModuleWithProviders<CacheModule>;
    constructor(parentModule?: CacheModule);
    static ɵmod: i0.ɵɵNgModuleDefWithMeta<CacheModule, never, never, never>;
    static ɵinj: i0.ɵɵInjectorDef<CacheModule>;
}
